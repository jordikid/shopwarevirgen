<?php

namespace ContainerUisecpe;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/*
 * This class has been auto-generated
 * by the Symfony Dependency Injection Component.
 *
 * @final
 */
class srcShopware_Production_KernelProdContainer extends Container
{
    private $buildParameters;
    private $containerDir;
    private $targetDir;
    private $parameters = [];
    private $getService;

    public function __construct(array $buildParameters = [], $containerDir = __DIR__)
    {
        $this->getService = \Closure::fromCallable([$this, 'getService']);
        $this->buildParameters = $buildParameters;
        $this->containerDir = $containerDir;
        $this->targetDir = \dirname($containerDir);
        $this->parameters = $this->getDefaultParameters();

        $this->services = $this->privates = [];
        $this->syntheticIds = [
            'kernel' => true,
        ];
        $this->methodMap = [
            'Doctrine\\DBAL\\Connection' => 'getConnectionService',
            'Elasticsearch\\Client' => 'getClientService',
            'Shopware\\Administration\\Controller\\AdministrationController' => 'getAdministrationControllerService',
            'Shopware\\Core\\Checkout\\Cart\\Calculator' => 'getCalculatorService',
            'Shopware\\Core\\Checkout\\Cart\\Order\\Api\\OrderConverterController' => 'getOrderConverterControllerService',
            'Shopware\\Core\\Checkout\\Cart\\Order\\Api\\OrderRecalculationController' => 'getOrderRecalculationControllerService',
            'Shopware\\Core\\Checkout\\Cart\\PriceActionController' => 'getPriceActionControllerService',
            'Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService' => 'getCartServiceService',
            'Shopware\\Core\\Checkout\\Cart\\SalesChannel\\SalesChannelCartController' => 'getSalesChannelCartControllerService',
            'Shopware\\Core\\Checkout\\Cart\\SalesChannel\\SalesChannelCheckoutController' => 'getSalesChannelCheckoutControllerService',
            'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerAddress\\CustomerAddressDefinition' => 'getCustomerAddressDefinitionService',
            'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroupTranslation\\CustomerGroupTranslationDefinition' => 'getCustomerGroupTranslationDefinitionService',
            'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroup\\CustomerGroupDefinition' => 'getCustomerGroupDefinitionService',
            'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerRecovery\\CustomerRecoveryDefinition' => 'getCustomerRecoveryDefinitionService',
            'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerTag\\CustomerTagDefinition' => 'getCustomerTagDefinitionService',
            'Shopware\\Core\\Checkout\\Customer\\CustomerDefinition' => 'getCustomerDefinitionService',
            'Shopware\\Core\\Checkout\\Customer\\SalesChannel\\SalesChannelCustomerController' => 'getSalesChannelCustomerControllerService',
            'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfigSalesChannel\\DocumentBaseConfigSalesChannelDefinition' => 'getDocumentBaseConfigSalesChannelDefinitionService',
            'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfig\\DocumentBaseConfigDefinition' => 'getDocumentBaseConfigDefinitionService',
            'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentTypeTranslation\\DocumentTypeTranslationDefinition' => 'getDocumentTypeTranslationDefinitionService',
            'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentType\\DocumentTypeDefinition' => 'getDocumentTypeDefinitionService',
            'Shopware\\Core\\Checkout\\Document\\Controller\\DocumentController' => 'getDocumentControllerService',
            'Shopware\\Core\\Checkout\\Document\\DocumentDefinition' => 'getDocumentDefinitionService',
            'Shopware\\Core\\Checkout\\Document\\DocumentGeneratorController' => 'getDocumentGeneratorControllerService',
            'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderAddress\\OrderAddressDefinition' => 'getOrderAddressDefinitionService',
            'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderCustomer\\OrderCustomerDefinition' => 'getOrderCustomerDefinitionService',
            'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDeliveryPosition\\OrderDeliveryPositionDefinition' => 'getOrderDeliveryPositionDefinitionService',
            'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDelivery\\OrderDeliveryDefinition' => 'getOrderDeliveryDefinitionService',
            'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderLineItem\\OrderLineItemDefinition' => 'getOrderLineItemDefinitionService',
            'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTag\\OrderTagDefinition' => 'getOrderTagDefinitionService',
            'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionDefinition' => 'getOrderTransactionDefinitionService',
            'Shopware\\Core\\Checkout\\Order\\Api\\OrderActionController' => 'getOrderActionControllerService',
            'Shopware\\Core\\Checkout\\Order\\OrderDefinition' => 'getOrderDefinitionService',
            'Shopware\\Core\\Checkout\\Payment\\Aggregate\\PaymentMethodTranslation\\PaymentMethodTranslationDefinition' => 'getPaymentMethodTranslationDefinitionService',
            'Shopware\\Core\\Checkout\\Payment\\Controller\\PaymentController' => 'getPaymentControllerService',
            'Shopware\\Core\\Checkout\\Payment\\PaymentMethodDefinition' => 'getPaymentMethodDefinitionService',
            'Shopware\\Core\\Checkout\\Payment\\SalesChannel\\SalesChannelPaymentMethodDefinition' => 'getSalesChannelPaymentMethodDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionCartRule\\PromotionCartRuleDefinition' => 'getPromotionCartRuleDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountPrice\\PromotionDiscountPriceDefinition' => 'getPromotionDiscountPriceDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountRule\\PromotionDiscountRuleDefinition' => 'getPromotionDiscountRuleDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscount\\PromotionDiscountDefinition' => 'getPromotionDiscountDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionIndividualCode\\PromotionIndividualCodeDefinition' => 'getPromotionIndividualCodeDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionOrderRule\\PromotionOrderRuleDefinition' => 'getPromotionOrderRuleDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaCustomer\\PromotionPersonaCustomerDefinition' => 'getPromotionPersonaCustomerDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaRule\\PromotionPersonaRuleDefinition' => 'getPromotionPersonaRuleDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSalesChannel\\PromotionSalesChannelDefinition' => 'getPromotionSalesChannelDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroupRule\\PromotionSetGroupRuleDefinition' => 'getPromotionSetGroupRuleDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroup\\PromotionSetGroupDefinition' => 'getPromotionSetGroupDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionTranslation\\PromotionTranslationDefinition' => 'getPromotionTranslationDefinitionService',
            'Shopware\\Core\\Checkout\\Promotion\\Api\\PromotionActionController' => 'getPromotionActionControllerService',
            'Shopware\\Core\\Checkout\\Promotion\\PromotionDefinition' => 'getPromotionDefinitionService',
            'Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodPrice\\ShippingMethodPriceDefinition' => 'getShippingMethodPriceDefinitionService',
            'Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTag\\ShippingMethodTagDefinition' => 'getShippingMethodTagDefinitionService',
            'Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTranslation\\ShippingMethodTranslationDefinition' => 'getShippingMethodTranslationDefinitionService',
            'Shopware\\Core\\Checkout\\Shipping\\SalesChannel\\SalesChannelShippingMethodDefinition' => 'getSalesChannelShippingMethodDefinitionService',
            'Shopware\\Core\\Checkout\\Shipping\\ShippingMethodDefinition' => 'getShippingMethodDefinitionService',
            'Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTag\\CategoryTagDefinition' => 'getCategoryTagDefinitionService',
            'Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTranslation\\CategoryTranslationDefinition' => 'getCategoryTranslationDefinitionService',
            'Shopware\\Core\\Content\\Category\\CategoryDefinition' => 'getCategoryDefinitionService',
            'Shopware\\Core\\Content\\Category\\SalesChannel\\SalesChannelCategoryDefinition' => 'getSalesChannelCategoryDefinitionService',
            'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsBlock\\CmsBlockDefinition' => 'getCmsBlockDefinitionService',
            'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsPageTranslation\\CmsPageTranslationDefinition' => 'getCmsPageTranslationDefinitionService',
            'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSection\\CmsSectionDefinition' => 'getCmsSectionDefinitionService',
            'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlotTranslation\\CmsSlotTranslationDefinition' => 'getCmsSlotTranslationDefinitionService',
            'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlot\\CmsSlotDefinition' => 'getCmsSlotDefinitionService',
            'Shopware\\Core\\Content\\Cms\\CmsPageDefinition' => 'getCmsPageDefinitionService',
            'Shopware\\Core\\Content\\Cms\\DataAbstractionLayer\\FieldSerializer\\SlotConfigFieldSerializer' => 'getSlotConfigFieldSerializerService',
            'Shopware\\Core\\Content\\Cms\\DataResolver\\CmsSlotsDataResolver' => 'getCmsSlotsDataResolverService',
            'Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageController' => 'getSalesChannelCmsPageControllerService',
            'Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageRepository' => 'getSalesChannelCmsPageRepositoryService',
            'Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportFile\\ImportExportFileDefinition' => 'getImportExportFileDefinitionService',
            'Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportLog\\ImportExportLogDefinition' => 'getImportExportLogDefinitionService',
            'Shopware\\Core\\Content\\ImportExport\\Controller\\ImportExportActionController' => 'getImportExportActionControllerService',
            'Shopware\\Core\\Content\\ImportExport\\ImportExportFactory' => 'getImportExportFactoryService',
            'Shopware\\Core\\Content\\ImportExport\\ImportExportProfileDefinition' => 'getImportExportProfileDefinitionService',
            'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooterTranslation\\MailHeaderFooterTranslationDefinition' => 'getMailHeaderFooterTranslationDefinitionService',
            'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooter\\MailHeaderFooterDefinition' => 'getMailHeaderFooterDefinitionService',
            'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateMedia\\MailTemplateMediaDefinition' => 'getMailTemplateMediaDefinitionService',
            'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateSalesChannel\\MailTemplateSalesChannelDefinition' => 'getMailTemplateSalesChannelDefinitionService',
            'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTranslation\\MailTemplateTranslationDefinition' => 'getMailTemplateTranslationDefinitionService',
            'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTypeTranslation\\MailTemplateTypeTranslationDefinition' => 'getMailTemplateTypeTranslationDefinitionService',
            'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateType\\MailTemplateTypeDefinition' => 'getMailTemplateTypeDefinitionService',
            'Shopware\\Core\\Content\\MailTemplate\\Api\\MailActionController' => 'getMailActionControllerService',
            'Shopware\\Core\\Content\\MailTemplate\\MailTemplateDefinition' => 'getMailTemplateDefinitionService',
            'Shopware\\Core\\Content\\MailTemplate\\Service\\MailSender' => 'getMailSenderService',
            'Shopware\\Core\\Content\\MailTemplate\\Service\\MessageFactory' => 'getMessageFactoryService',
            'Shopware\\Core\\Content\\Media\\Aggregate\\MediaDefaultFolder\\MediaDefaultFolderDefinition' => 'getMediaDefaultFolderDefinitionService',
            'Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfigurationMediaThumbnailSize\\MediaFolderConfigurationMediaThumbnailSizeDefinition' => 'getMediaFolderConfigurationMediaThumbnailSizeDefinitionService',
            'Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfiguration\\MediaFolderConfigurationDefinition' => 'getMediaFolderConfigurationDefinitionService',
            'Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolder\\MediaFolderDefinition' => 'getMediaFolderDefinitionService',
            'Shopware\\Core\\Content\\Media\\Aggregate\\MediaTag\\MediaTagDefinition' => 'getMediaTagDefinitionService',
            'Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnailSize\\MediaThumbnailSizeDefinition' => 'getMediaThumbnailSizeDefinitionService',
            'Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnail\\MediaThumbnailDefinition' => 'getMediaThumbnailDefinitionService',
            'Shopware\\Core\\Content\\Media\\Aggregate\\MediaTranslation\\MediaTranslationDefinition' => 'getMediaTranslationDefinitionService',
            'Shopware\\Core\\Content\\Media\\Api\\MediaFolderController' => 'getMediaFolderControllerService',
            'Shopware\\Core\\Content\\Media\\Api\\MediaUploadController' => 'getMediaUploadControllerService',
            'Shopware\\Core\\Content\\Media\\File\\FileSaver' => 'getFileSaverService',
            'Shopware\\Core\\Content\\Media\\MediaDefinition' => 'getMediaDefinitionService',
            'Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipientTag\\NewsletterRecipientTagDefinition' => 'getNewsletterRecipientTagDefinitionService',
            'Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipient\\NewsletterRecipientDefinition' => 'getNewsletterRecipientDefinitionService',
            'Shopware\\Core\\Content\\Newsletter\\SalesChannel\\SalesChannelNewsletterController' => 'getSalesChannelNewsletterControllerService',
            'Shopware\\Core\\Content\\ProductExport\\Api\\ProductExportController' => 'getProductExportControllerService',
            'Shopware\\Core\\Content\\ProductExport\\ProductExportDefinition' => 'getProductExportDefinitionService',
            'Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportGenerator' => 'getProductExportGeneratorService',
            'Shopware\\Core\\Content\\ProductExport\\Service\\ProductExporter' => 'getProductExporterService',
            'Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamFilter\\ProductStreamFilterDefinition' => 'getProductStreamFilterDefinitionService',
            'Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamTranslation\\ProductStreamTranslationDefinition' => 'getProductStreamTranslationDefinitionService',
            'Shopware\\Core\\Content\\ProductStream\\ProductStreamDefinition' => 'getProductStreamDefinitionService',
            'Shopware\\Core\\Content\\ProductStream\\Service\\ProductStreamBuilder' => 'getProductStreamBuilderService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategoryTree\\ProductCategoryTreeDefinition' => 'getProductCategoryTreeDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategory\\ProductCategoryDefinition' => 'getProductCategoryDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductConfiguratorSetting\\ProductConfiguratorSettingDefinition' => 'getProductConfiguratorSettingDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSellingTranslation\\ProductCrossSellingTranslationDefinition' => 'getProductCrossSellingTranslationDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSelling\\ProductCrossSellingDefinition' => 'getProductCrossSellingDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductKeywordDictionary\\ProductKeywordDictionaryDefinition' => 'getProductKeywordDictionaryDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturerTranslation\\ProductManufacturerTranslationDefinition' => 'getProductManufacturerTranslationDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturer\\ProductManufacturerDefinition' => 'getProductManufacturerDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductMedia\\ProductMediaDefinition' => 'getProductMediaDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductOption\\ProductOptionDefinition' => 'getProductOptionDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductPrice\\ProductPriceDefinition' => 'getProductPriceDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductProperty\\ProductPropertyDefinition' => 'getProductPropertyDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductReview\\ProductReviewDefinition' => 'getProductReviewDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductSearchKeyword\\ProductSearchKeywordDefinition' => 'getProductSearchKeywordDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductTag\\ProductTagDefinition' => 'getProductTagDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductTranslation\\ProductTranslationDefinition' => 'getProductTranslationDefinitionService',
            'Shopware\\Core\\Content\\Product\\Aggregate\\ProductVisibility\\ProductVisibilityDefinition' => 'getProductVisibilityDefinitionService',
            'Shopware\\Core\\Content\\Product\\Api\\ProductActionController' => 'getProductActionControllerService',
            'Shopware\\Core\\Content\\Product\\ProductDefinition' => 'getProductDefinitionService',
            'Shopware\\Core\\Content\\Product\\SalesChannel\\CrossSelling\\SalesChannelCrossSellingController' => 'getSalesChannelCrossSellingControllerService',
            'Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductDefinition' => 'getSalesChannelProductDefinitionService',
            'Shopware\\Core\\Content\\Product\\SearchKeyword\\ProductSearchKeywordIndexer' => 'getProductSearchKeywordIndexerService',
            'Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOptionTranslation\\PropertyGroupOptionTranslationDefinition' => 'getPropertyGroupOptionTranslationDefinitionService',
            'Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOption\\PropertyGroupOptionDefinition' => 'getPropertyGroupOptionDefinitionService',
            'Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupTranslation\\PropertyGroupTranslationDefinition' => 'getPropertyGroupTranslationDefinitionService',
            'Shopware\\Core\\Content\\Property\\PropertyGroupDefinition' => 'getPropertyGroupDefinitionService',
            'Shopware\\Core\\Content\\Rule\\Aggregate\\RuleCondition\\RuleConditionDefinition' => 'getRuleConditionDefinitionService',
            'Shopware\\Core\\Content\\Rule\\RuleDefinition' => 'getRuleDefinitionService',
            'Shopware\\Core\\Content\\Seo\\Api\\SeoActionController' => 'getSeoActionControllerService',
            'Shopware\\Core\\Content\\Seo\\DataAbstractionLayer\\Indexing\\SeoUrlIndexer' => 'getSeoUrlIndexerService',
            'Shopware\\Core\\Content\\Seo\\Entity\\Dbal\\SeoUrlAssociationFieldResolver' => 'getSeoUrlAssociationFieldResolverService',
            'Shopware\\Core\\Content\\Seo\\Entity\\Serializer\\SeoUrlFieldSerializer' => 'getSeoUrlFieldSerializerService',
            'Shopware\\Core\\Content\\Seo\\MainCategory\\MainCategoryDefinition' => 'getMainCategoryDefinitionService',
            'Shopware\\Core\\Content\\Seo\\MainCategory\\SalesChannel\\SalesChannelMainCategoryDefinition' => 'getSalesChannelMainCategoryDefinitionService',
            'Shopware\\Core\\Content\\Seo\\SeoResolver' => 'getSeoResolverService',
            'Shopware\\Core\\Content\\Seo\\SeoUrlPlaceholderHandlerInterface' => 'getSeoUrlPlaceholderHandlerInterfaceService',
            'Shopware\\Core\\Content\\Seo\\SeoUrlTemplate\\SeoUrlTemplateDefinition' => 'getSeoUrlTemplateDefinitionService',
            'Shopware\\Core\\Content\\Seo\\SeoUrl\\SalesChannel\\SalesChannelSeoUrlDefinition' => 'getSalesChannelSeoUrlDefinitionService',
            'Shopware\\Core\\Content\\Seo\\SeoUrl\\SeoUrlDefinition' => 'getSeoUrlDefinitionService',
            'Shopware\\Core\\Framework\\Adapter\\Asset\\AssetPackageService' => 'getAssetPackageServiceService',
            'Shopware\\Core\\Framework\\Adapter\\Cache\\CacheIdLoader' => 'getCacheIdLoaderService',
            'Shopware\\Core\\Framework\\Adapter\\Twig\\TemplateIterator' => 'getTemplateIteratorService',
            'Shopware\\Core\\Framework\\Api\\Acl\\Resource\\AclResourceDefinition' => 'getAclResourceDefinitionService',
            'Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclRoleDefinition' => 'getAclRoleDefinitionService',
            'Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclUserRoleDefinition' => 'getAclUserRoleDefinitionService',
            'Shopware\\Core\\Framework\\Api\\Controller\\AccessKeyController' => 'getAccessKeyControllerService',
            'Shopware\\Core\\Framework\\Api\\Controller\\ApiController' => 'getApiControllerService',
            'Shopware\\Core\\Framework\\Api\\Controller\\AuthController' => 'getAuthControllerService',
            'Shopware\\Core\\Framework\\Api\\Controller\\CacheController' => 'getCacheControllerService',
            'Shopware\\Core\\Framework\\Api\\Controller\\FallbackController' => 'getFallbackControllerService',
            'Shopware\\Core\\Framework\\Api\\Controller\\IndexingController' => 'getIndexingControllerService',
            'Shopware\\Core\\Framework\\Api\\Controller\\InfoController' => 'getInfoControllerService',
            'Shopware\\Core\\Framework\\Api\\Controller\\SalesChannelProxyController' => 'getSalesChannelProxyControllerService',
            'Shopware\\Core\\Framework\\Api\\Controller\\SyncController' => 'getSyncControllerService',
            'Shopware\\Core\\Framework\\Api\\Controller\\UserController' => 'getUserControllerService',
            'Shopware\\Core\\Framework\\Api\\Sync\\SyncService' => 'getSyncServiceService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator' => 'getEntityCacheKeyGeneratorService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityHydrator' => 'getEntityHydratorService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\ConfigJsonFieldAccessorBuilder' => 'getConfigJsonFieldAccessorBuilderService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\CustomFieldsAccessorBuilder' => 'getCustomFieldsAccessorBuilderService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\DefaultFieldAccessorBuilder' => 'getDefaultFieldAccessorBuilderService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\JsonFieldAccessorBuilder' => 'getJsonFieldAccessorBuilderService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\ListingPriceFieldAccessorBuilder' => 'getListingPriceFieldAccessorBuilderService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\PriceFieldAccessorBuilder' => 'getPriceFieldAccessorBuilderService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldResolver\\ManyToManyAssociationFieldResolver' => 'getManyToManyAssociationFieldResolverService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldResolver\\ManyToOneAssociationFieldResolver' => 'getManyToOneAssociationFieldResolverService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldResolver\\OneToManyAssociationFieldResolver' => 'getOneToManyAssociationFieldResolverService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldResolver\\TranslationFieldResolver' => 'getTranslationFieldResolverService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry' => 'getDefinitionInstanceRegistryService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\ExtensionRegistry' => 'getExtensionRegistryService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\BlobFieldSerializer' => 'getBlobFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\BoolFieldSerializer' => 'getBoolFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\CalculatedPriceFieldSerializer' => 'getCalculatedPriceFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\CartPriceFieldSerializer' => 'getCartPriceFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ConfigJsonFieldSerializer' => 'getConfigJsonFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\CreatedAtFieldSerializer' => 'getCreatedAtFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\CustomFieldsSerializer' => 'getCustomFieldsSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\DateFieldSerializer' => 'getDateFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\DateTimeFieldSerializer' => 'getDateTimeFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\EmailFieldSerializer' => 'getEmailFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\FkFieldSerializer' => 'getFkFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\FloatFieldSerializer' => 'getFloatFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\IdFieldSerializer' => 'getIdFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\IntFieldSerializer' => 'getIntFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\JsonFieldSerializer' => 'getJsonFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ListFieldSerializer' => 'getListFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ListingPriceFieldSerializer' => 'getListingPriceFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\LongTextFieldSerializer' => 'getLongTextFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\LongTextWithHtmlFieldSerializer' => 'getLongTextWithHtmlFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ManyToManyAssociationFieldSerializer' => 'getManyToManyAssociationFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ManyToOneAssociationFieldSerializer' => 'getManyToOneAssociationFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\OneToManyAssociationFieldSerializer' => 'getOneToManyAssociationFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\OneToOneAssociationFieldSerializer' => 'getOneToOneAssociationFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\PasswordFieldSerializer' => 'getPasswordFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\PriceDefinitionFieldSerializer' => 'getPriceDefinitionFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\PriceFieldSerializer' => 'getPriceFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ReferenceVersionFieldSerializer' => 'getReferenceVersionFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\RemoteAddressFieldSerializer' => 'getRemoteAddressFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\StringFieldSerializer' => 'getStringFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\TranslatedFieldSerializer' => 'getTranslatedFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\TranslationsAssociationFieldSerializer' => 'getTranslationsAssociationFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\UpdatedAtFieldSerializer' => 'getUpdatedAtFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\VersionDataPayloadFieldSerializer' => 'getVersionDataPayloadFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\VersionFieldSerializer' => 'getVersionFieldSerializerService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\MessageQueue\\IndexerMessageSender' => 'getIndexerMessageSenderService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommitData\\VersionCommitDataDefinition' => 'getVersionCommitDataDefinitionService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommit\\VersionCommitDefinition' => 'getVersionCommitDefinitionService',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\VersionDefinition' => 'getVersionDefinitionService',
            'Shopware\\Core\\Framework\\Event\\BusinessEventRegistry' => 'getBusinessEventRegistryService',
            'Shopware\\Core\\Framework\\Event\\EventAction\\EventActionDefinition' => 'getEventActionDefinitionService',
            'Shopware\\Core\\Framework\\Log\\LogEntryDefinition' => 'getLogEntryDefinitionService',
            'Shopware\\Core\\Framework\\MessageQueue\\Api\\ConsumeMessagesController' => 'getConsumeMessagesControllerService',
            'Shopware\\Core\\Framework\\MessageQueue\\DeadMessage\\DeadMessageDefinition' => 'getDeadMessageDefinitionService',
            'Shopware\\Core\\Framework\\MessageQueue\\MessageQueueStatsDefinition' => 'getMessageQueueStatsDefinitionService',
            'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Api\\ScheduledTaskController' => 'getScheduledTaskControllerService',
            'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\ScheduledTaskDefinition' => 'getScheduledTaskDefinitionService',
            'Shopware\\Core\\Framework\\Migration\\Api\\MigrationController' => 'getMigrationControllerService',
            'Shopware\\Core\\Framework\\Migration\\IndexerQueuer' => 'getIndexerQueuerService',
            'Shopware\\Core\\Framework\\Plugin\\Aggregate\\PluginTranslation\\PluginTranslationDefinition' => 'getPluginTranslationDefinitionService',
            'Shopware\\Core\\Framework\\Plugin\\Api\\PluginController' => 'getPluginControllerService',
            'Shopware\\Core\\Framework\\Plugin\\KernelPluginCollection' => 'getKernelPluginCollectionService',
            'Shopware\\Core\\Framework\\Plugin\\KernelPluginLoader\\KernelPluginLoader' => 'getKernelPluginLoaderService',
            'Shopware\\Core\\Framework\\Plugin\\PluginDefinition' => 'getPluginDefinitionService',
            'Shopware\\Core\\Framework\\Plugin\\Util\\PluginIdProvider' => 'getPluginIdProviderService',
            'Shopware\\Core\\Framework\\Resources\\snippet\\de_DE\\SnippetFile_de_DE' => 'getSnippetFileDeDEService',
            'Shopware\\Core\\Framework\\Resources\\snippet\\en_GB\\SnippetFile_en_GB' => 'getSnippetFileEnGBService',
            'Shopware\\Core\\Framework\\Routing\\RequestTransformerInterface' => 'getRequestTransformerInterfaceService',
            'Shopware\\Core\\Framework\\Store\\Api\\FirstRunWizardController' => 'getFirstRunWizardControllerService',
            'Shopware\\Core\\Framework\\Store\\Api\\StoreController' => 'getStoreControllerService',
            'Shopware\\Core\\Framework\\Update\\Api\\UpdateController' => 'getUpdateControllerService',
            'Shopware\\Core\\System\\Country\\Aggregate\\CountryStateTranslation\\CountryStateTranslationDefinition' => 'getCountryStateTranslationDefinitionService',
            'Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\CountryStateDefinition' => 'getCountryStateDefinitionService',
            'Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\SalesChannel\\SalesChannelCountryStateDefinition' => 'getSalesChannelCountryStateDefinitionService',
            'Shopware\\Core\\System\\Country\\Aggregate\\CountryTranslation\\CountryTranslationDefinition' => 'getCountryTranslationDefinitionService',
            'Shopware\\Core\\System\\Country\\CountryDefinition' => 'getCountryDefinitionService',
            'Shopware\\Core\\System\\Country\\SalesChannel\\SalesChannelCountryDefinition' => 'getSalesChannelCountryDefinitionService',
            'Shopware\\Core\\System\\Currency\\Aggregate\\CurrencyTranslation\\CurrencyTranslationDefinition' => 'getCurrencyTranslationDefinitionService',
            'Shopware\\Core\\System\\Currency\\CurrencyDefinition' => 'getCurrencyDefinitionService',
            'Shopware\\Core\\System\\Currency\\CurrencyFormatter' => 'getCurrencyFormatterService',
            'Shopware\\Core\\System\\Currency\\SalesChannel\\SalesChannelCurrencyDefinition' => 'getSalesChannelCurrencyDefinitionService',
            'Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSetRelation\\CustomFieldSetRelationDefinition' => 'getCustomFieldSetRelationDefinitionService',
            'Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSet\\CustomFieldSetDefinition' => 'getCustomFieldSetDefinitionService',
            'Shopware\\Core\\System\\CustomField\\Api\\CustomFieldSetActionController' => 'getCustomFieldSetActionControllerService',
            'Shopware\\Core\\System\\CustomField\\CustomFieldDefinition' => 'getCustomFieldDefinitionService',
            'Shopware\\Core\\System\\DeliveryTime\\Aggregate\\DeliveryTimeTranslation\\DeliveryTimeTranslationDefinition' => 'getDeliveryTimeTranslationDefinitionService',
            'Shopware\\Core\\System\\DeliveryTime\\DeliveryTimeDefinition' => 'getDeliveryTimeDefinitionService',
            'Shopware\\Core\\System\\Integration\\IntegrationDefinition' => 'getIntegrationDefinitionService',
            'Shopware\\Core\\System\\Language\\LanguageDefinition' => 'getLanguageDefinitionService',
            'Shopware\\Core\\System\\Language\\SalesChannel\\SalesChannelLanguageDefinition' => 'getSalesChannelLanguageDefinitionService',
            'Shopware\\Core\\System\\Locale\\Aggregate\\LocaleTranslation\\LocaleTranslationDefinition' => 'getLocaleTranslationDefinitionService',
            'Shopware\\Core\\System\\Locale\\LocaleDefinition' => 'getLocaleDefinitionService',
            'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeSalesChannel\\NumberRangeSalesChannelDefinition' => 'getNumberRangeSalesChannelDefinitionService',
            'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeState\\NumberRangeStateDefinition' => 'getNumberRangeStateDefinitionService',
            'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTranslation\\NumberRangeTranslationDefinition' => 'getNumberRangeTranslationDefinitionService',
            'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTypeTranslation\\NumberRangeTypeTranslationDefinition' => 'getNumberRangeTypeTranslationDefinitionService',
            'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeType\\NumberRangeTypeDefinition' => 'getNumberRangeTypeDefinitionService',
            'Shopware\\Core\\System\\NumberRange\\Api\\NumberRangeController' => 'getNumberRangeControllerService',
            'Shopware\\Core\\System\\NumberRange\\NumberRangeDefinition' => 'getNumberRangeDefinitionService',
            'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCountry\\SalesChannelCountryDefinition' => 'getSalesChannelCountryDefinition2Service',
            'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCurrency\\SalesChannelCurrencyDefinition' => 'getSalesChannelCurrencyDefinition2Service',
            'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelDomain\\SalesChannelDomainDefinition' => 'getSalesChannelDomainDefinitionService',
            'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelLanguage\\SalesChannelLanguageDefinition' => 'getSalesChannelLanguageDefinition2Service',
            'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelPaymentMethod\\SalesChannelPaymentMethodDefinition' => 'getSalesChannelPaymentMethodDefinition2Service',
            'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelShippingMethod\\SalesChannelShippingMethodDefinition' => 'getSalesChannelShippingMethodDefinition2Service',
            'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTranslation\\SalesChannelTranslationDefinition' => 'getSalesChannelTranslationDefinitionService',
            'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTypeTranslation\\SalesChannelTypeTranslationDefinition' => 'getSalesChannelTypeTranslationDefinitionService',
            'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelType\\SalesChannelTypeDefinition' => 'getSalesChannelTypeDefinitionService',
            'Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelApiController' => 'getSalesChannelApiControllerService',
            'Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry' => 'getSalesChannelDefinitionInstanceRegistryService',
            'Shopware\\Core\\System\\SalesChannel\\SalesChannelDefinition' => 'getSalesChannelDefinitionService',
            'Shopware\\Core\\System\\SalesChannel\\SalesChannel\\SalesChannelApiSchemaController' => 'getSalesChannelApiSchemaControllerService',
            'Shopware\\Core\\System\\SalesChannel\\SalesChannel\\SalesChannelContextController' => 'getSalesChannelContextControllerService',
            'Shopware\\Core\\System\\Salutation\\Aggregate\\SalutationTranslation\\SalutationTranslationDefinition' => 'getSalutationTranslationDefinitionService',
            'Shopware\\Core\\System\\Salutation\\SalesChannel\\SalesChannelSalutationDefinition' => 'getSalesChannelSalutationDefinitionService',
            'Shopware\\Core\\System\\Salutation\\SalutationDefinition' => 'getSalutationDefinitionService',
            'Shopware\\Core\\System\\Snippet\\Aggregate\\SnippetSet\\SnippetSetDefinition' => 'getSnippetSetDefinitionService',
            'Shopware\\Core\\System\\Snippet\\Api\\SnippetController' => 'getSnippetControllerService',
            'Shopware\\Core\\System\\Snippet\\Files\\SnippetFileCollection' => 'getSnippetFileCollectionService',
            'Shopware\\Core\\System\\Snippet\\Filter\\SnippetFilterFactory' => 'getSnippetFilterFactoryService',
            'Shopware\\Core\\System\\Snippet\\SnippetDefinition' => 'getSnippetDefinitionService',
            'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineHistory\\StateMachineHistoryDefinition' => 'getStateMachineHistoryDefinitionService',
            'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateDefinition' => 'getStateMachineStateDefinitionService',
            'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateTranslationDefinition' => 'getStateMachineStateTranslationDefinitionService',
            'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineTransition\\StateMachineTransitionDefinition' => 'getStateMachineTransitionDefinitionService',
            'Shopware\\Core\\System\\StateMachine\\Api\\StateMachineActionController' => 'getStateMachineActionControllerService',
            'Shopware\\Core\\System\\StateMachine\\StateMachineDefinition' => 'getStateMachineDefinitionService',
            'Shopware\\Core\\System\\StateMachine\\StateMachineTranslationDefinition' => 'getStateMachineTranslationDefinitionService',
            'Shopware\\Core\\System\\SystemConfig\\Api\\SystemConfigController' => 'getSystemConfigControllerService',
            'Shopware\\Core\\System\\SystemConfig\\SystemConfigDefinition' => 'getSystemConfigDefinitionService',
            'Shopware\\Core\\System\\SystemConfig\\SystemConfigService' => 'getSystemConfigServiceService',
            'Shopware\\Core\\System\\Tag\\TagDefinition' => 'getTagDefinitionService',
            'Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleTypeTranslation\\TaxRuleTypeTranslationDefinition' => 'getTaxRuleTypeTranslationDefinitionService',
            'Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleType\\TaxRuleTypeDefinition' => 'getTaxRuleTypeDefinitionService',
            'Shopware\\Core\\System\\Tax\\Aggregate\\TaxRule\\TaxRuleDefinition' => 'getTaxRuleDefinitionService',
            'Shopware\\Core\\System\\Tax\\TaxDefinition' => 'getTaxDefinitionService',
            'Shopware\\Core\\System\\Unit\\Aggregate\\UnitTranslation\\UnitTranslationDefinition' => 'getUnitTranslationDefinitionService',
            'Shopware\\Core\\System\\Unit\\UnitDefinition' => 'getUnitDefinitionService',
            'Shopware\\Core\\System\\User\\Aggregate\\UserAccessKey\\UserAccessKeyDefinition' => 'getUserAccessKeyDefinitionService',
            'Shopware\\Core\\System\\User\\Aggregate\\UserRecovery\\UserRecoveryDefinition' => 'getUserRecoveryDefinitionService',
            'Shopware\\Core\\System\\User\\Api\\UserRecoveryController' => 'getUserRecoveryControllerService',
            'Shopware\\Core\\System\\User\\Api\\UserValidationController' => 'getUserValidationControllerService',
            'Shopware\\Core\\System\\User\\UserDefinition' => 'getUserDefinitionService',
            'Shopware\\Elasticsearch\\Framework\\ElasticsearchHelper' => 'getElasticsearchHelperService',
            'Shopware\\Elasticsearch\\Framework\\Indexing\\CreateAliasTaskHandler' => 'getCreateAliasTaskHandlerService',
            'Shopware\\Elasticsearch\\Framework\\Indexing\\EntityIndexer' => 'getEntityIndexerService',
            'Shopware\\Storefront\\Controller\\AccountOrderController' => 'getAccountOrderControllerService',
            'Shopware\\Storefront\\Controller\\AccountPaymentController' => 'getAccountPaymentControllerService',
            'Shopware\\Storefront\\Controller\\AccountProfileController' => 'getAccountProfileControllerService',
            'Shopware\\Storefront\\Controller\\AddressController' => 'getAddressControllerService',
            'Shopware\\Storefront\\Controller\\AuthController' => 'getAuthController2Service',
            'Shopware\\Storefront\\Controller\\CartLineItemController' => 'getCartLineItemControllerService',
            'Shopware\\Storefront\\Controller\\CheckoutController' => 'getCheckoutControllerService',
            'Shopware\\Storefront\\Controller\\CmsController' => 'getCmsControllerService',
            'Shopware\\Storefront\\Controller\\ContextController' => 'getContextControllerService',
            'Shopware\\Storefront\\Controller\\CookieController' => 'getCookieControllerService',
            'Shopware\\Storefront\\Controller\\CountryStateController' => 'getCountryStateControllerService',
            'Shopware\\Storefront\\Controller\\CsrfController' => 'getCsrfControllerService',
            'Shopware\\Storefront\\Controller\\ErrorController' => 'getErrorControllerService',
            'Shopware\\Storefront\\Controller\\FormController' => 'getFormControllerService',
            'Shopware\\Storefront\\Controller\\MaintenanceController' => 'getMaintenanceControllerService',
            'Shopware\\Storefront\\Controller\\NavigationController' => 'getNavigationControllerService',
            'Shopware\\Storefront\\Controller\\NewsletterController' => 'getNewsletterControllerService',
            'Shopware\\Storefront\\Controller\\ProductController' => 'getProductControllerService',
            'Shopware\\Storefront\\Controller\\ProductExportController' => 'getProductExportController2Service',
            'Shopware\\Storefront\\Controller\\RegisterController' => 'getRegisterControllerService',
            'Shopware\\Storefront\\Controller\\SearchController' => 'getSearchControllerService',
            'Shopware\\Storefront\\Controller\\SitemapController' => 'getSitemapControllerService',
            'Shopware\\Storefront\\Framework\\Cache\\CacheStore' => 'getCacheStoreService',
            'Shopware\\Storefront\\Framework\\Csrf\\CsrfPlaceholderHandler' => 'getCsrfPlaceholderHandlerService',
            'Shopware\\Storefront\\Framework\\Media\\StorefrontMediaValidatorRegistry' => 'getStorefrontMediaValidatorRegistryService',
            'Shopware\\Storefront\\Page\\Checkout\\Register\\CheckoutRegisterPageLoader' => 'getCheckoutRegisterPageLoaderService',
            'Shopware\\Storefront\\Page\\Product\\Configurator\\ProductCombinationFinder' => 'getProductCombinationFinderService',
            'Shopware\\Storefront\\Page\\Product\\Review\\ProductReviewLoader' => 'getProductReviewLoaderService',
            'Shopware\\Storefront\\Page\\Search\\SearchPageLoader' => 'getSearchPageLoaderService',
            'Shopware\\Storefront\\Resources\\snippet\\de_DE\\SnippetFile_de_DE' => 'getSnippetFileDeDE2Service',
            'Shopware\\Storefront\\Resources\\snippet\\en_GB\\SnippetFile_en_GB' => 'getSnippetFileEnGB2Service',
            'Shopware\\Storefront\\Theme\\Aggregate\\ThemeMediaDefinition' => 'getThemeMediaDefinitionService',
            'Shopware\\Storefront\\Theme\\Aggregate\\ThemeSalesChannelDefinition' => 'getThemeSalesChannelDefinitionService',
            'Shopware\\Storefront\\Theme\\Aggregate\\ThemeTranslationDefinition' => 'getThemeTranslationDefinitionService',
            'Shopware\\Storefront\\Theme\\Controller\\ThemeController' => 'getThemeControllerService',
            'Shopware\\Storefront\\Theme\\StorefrontPluginRegistry' => 'getStorefrontPluginRegistryService',
            'Shopware\\Storefront\\Theme\\ThemeDefinition' => 'getThemeDefinitionService',
            'Shopware\\Storefront\\Theme\\Twig\\ThemeTemplateFinder' => 'getThemeTemplateFinderService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController' => 'getRedirectControllerService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController' => 'getTemplateControllerService',
            'acl_resource.repository' => 'getAclResource_RepositoryService',
            'acl_role.repository' => 'getAclRole_RepositoryService',
            'cache.app' => 'getCache_AppService',
            'cache.app_clearer' => 'getCache_AppClearerService',
            'cache.global_clearer' => 'getCache_GlobalClearerService',
            'cache.system' => 'getCache_SystemService',
            'cache.system_clearer' => 'getCache_SystemClearerService',
            'cache_clearer' => 'getCacheClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'category.repository' => 'getCategory_RepositoryService',
            'category_tag.repository' => 'getCategoryTag_RepositoryService',
            'category_translation.repository' => 'getCategoryTranslation_RepositoryService',
            'cms_block.repository' => 'getCmsBlock_RepositoryService',
            'cms_page.repository' => 'getCmsPage_RepositoryService',
            'cms_page_translation.repository' => 'getCmsPageTranslation_RepositoryService',
            'cms_section.repository' => 'getCmsSection_RepositoryService',
            'cms_slot.repository' => 'getCmsSlot_RepositoryService',
            'cms_slot_translation.repository' => 'getCmsSlotTranslation_RepositoryService',
            'console.command.public_alias.Shopware\\Core\\Content\\MailTemplate\\Commands\\AssignAllTemplatesToAllSalesChannelsCommand' => 'getAssignAllTemplatesToAllSalesChannelsCommandService',
            'console.command.public_alias.Shopware\\Core\\Content\\ProductExport\\Command\\ProductExportGenerateCommand' => 'getProductExportGenerateCommandService',
            'console.command.public_alias.Shopware\\Core\\Content\\Sitemap\\Commands\\SitemapGenerateCommand' => 'getSitemapGenerateCommandService',
            'console.command_loader' => 'getConsole_CommandLoaderService',
            'container.env_var_processors_locator' => 'getContainer_EnvVarProcessorsLocatorService',
            'country.repository' => 'getCountry_RepositoryService',
            'country_state.repository' => 'getCountryState_RepositoryService',
            'country_state_translation.repository' => 'getCountryStateTranslation_RepositoryService',
            'country_translation.repository' => 'getCountryTranslation_RepositoryService',
            'currency.repository' => 'getCurrency_RepositoryService',
            'currency_translation.repository' => 'getCurrencyTranslation_RepositoryService',
            'custom_field.repository' => 'getCustomField_RepositoryService',
            'custom_field_set.repository' => 'getCustomFieldSet_RepositoryService',
            'custom_field_set_relation.repository' => 'getCustomFieldSetRelation_RepositoryService',
            'customer.repository' => 'getCustomer_RepositoryService',
            'customer_address.repository' => 'getCustomerAddress_RepositoryService',
            'customer_group.repository' => 'getCustomerGroup_RepositoryService',
            'customer_group_translation.repository' => 'getCustomerGroupTranslation_RepositoryService',
            'customer_recovery.repository' => 'getCustomerRecovery_RepositoryService',
            'customer_tag.repository' => 'getCustomerTag_RepositoryService',
            'dead_message.repository' => 'getDeadMessage_RepositoryService',
            'delivery_time.repository' => 'getDeliveryTime_RepositoryService',
            'delivery_time_translation.repository' => 'getDeliveryTimeTranslation_RepositoryService',
            'document.repository' => 'getDocument_RepositoryService',
            'document_base_config.repository' => 'getDocumentBaseConfig_RepositoryService',
            'document_base_config_sales_channel.repository' => 'getDocumentBaseConfigSalesChannel_RepositoryService',
            'document_type.repository' => 'getDocumentType_RepositoryService',
            'document_type_translation.repository' => 'getDocumentTypeTranslation_RepositoryService',
            'enqueue.client.default.producer' => 'getEnqueue_Client_Default_ProducerService',
            'error_controller' => 'getErrorController2Service',
            'event_action.repository' => 'getEventAction_RepositoryService',
            'event_dispatcher' => 'getEventDispatcherService',
            'filesystem' => 'getFilesystemService',
            'http_kernel' => 'getHttpKernelService',
            'import_export_file.repository' => 'getImportExportFile_RepositoryService',
            'import_export_log.repository' => 'getImportExportLog_RepositoryService',
            'import_export_profile.repository' => 'getImportExportProfile_RepositoryService',
            'integration.repository' => 'getIntegration_RepositoryService',
            'language.repository' => 'getLanguage_RepositoryService',
            'locale.repository' => 'getLocale_RepositoryService',
            'locale_translation.repository' => 'getLocaleTranslation_RepositoryService',
            'log_entry.repository' => 'getLogEntry_RepositoryService',
            'mail_header_footer.repository' => 'getMailHeaderFooter_RepositoryService',
            'mail_header_footer_translation.repository' => 'getMailHeaderFooterTranslation_RepositoryService',
            'mail_template.repository' => 'getMailTemplate_RepositoryService',
            'mail_template_media.repository' => 'getMailTemplateMedia_RepositoryService',
            'mail_template_sales_channel.repository' => 'getMailTemplateSalesChannel_RepositoryService',
            'mail_template_translation.repository' => 'getMailTemplateTranslation_RepositoryService',
            'mail_template_type.repository' => 'getMailTemplateType_RepositoryService',
            'mail_template_type_translation.repository' => 'getMailTemplateTypeTranslation_RepositoryService',
            'main_category.repository' => 'getMainCategory_RepositoryService',
            'media.repository' => 'getMedia_RepositoryService',
            'media_default_folder.repository' => 'getMediaDefaultFolder_RepositoryService',
            'media_folder.repository' => 'getMediaFolder_RepositoryService',
            'media_folder_configuration.repository' => 'getMediaFolderConfiguration_RepositoryService',
            'media_folder_configuration_media_thumbnail_size.repository' => 'getMediaFolderConfigurationMediaThumbnailSize_RepositoryService',
            'media_tag.repository' => 'getMediaTag_RepositoryService',
            'media_thumbnail.repository' => 'getMediaThumbnail_RepositoryService',
            'media_thumbnail_size.repository' => 'getMediaThumbnailSize_RepositoryService',
            'media_translation.repository' => 'getMediaTranslation_RepositoryService',
            'message_bus' => 'getMessageBusService',
            'message_queue_stats.repository' => 'getMessageQueueStats_RepositoryService',
            'monolog.logger.business_events' => 'getMonolog_Logger_BusinessEventsService',
            'newsletter_recipient.repository' => 'getNewsletterRecipient_RepositoryService',
            'newsletter_recipient_tag.repository' => 'getNewsletterRecipientTag_RepositoryService',
            'number_range.repository' => 'getNumberRange_RepositoryService',
            'number_range_sales_channel.repository' => 'getNumberRangeSalesChannel_RepositoryService',
            'number_range_state.repository' => 'getNumberRangeState_RepositoryService',
            'number_range_translation.repository' => 'getNumberRangeTranslation_RepositoryService',
            'number_range_type.repository' => 'getNumberRangeType_RepositoryService',
            'number_range_type_translation.repository' => 'getNumberRangeTypeTranslation_RepositoryService',
            'order.repository' => 'getOrder_RepositoryService',
            'order_address.repository' => 'getOrderAddress_RepositoryService',
            'order_customer.repository' => 'getOrderCustomer_RepositoryService',
            'order_delivery.repository' => 'getOrderDelivery_RepositoryService',
            'order_delivery_position.repository' => 'getOrderDeliveryPosition_RepositoryService',
            'order_line_item.repository' => 'getOrderLineItem_RepositoryService',
            'order_tag.repository' => 'getOrderTag_RepositoryService',
            'order_transaction.repository' => 'getOrderTransaction_RepositoryService',
            'payment_method.repository' => 'getPaymentMethod_RepositoryService',
            'payment_method_translation.repository' => 'getPaymentMethodTranslation_RepositoryService',
            'plugin.repository' => 'getPlugin_RepositoryService',
            'plugin_translation.repository' => 'getPluginTranslation_RepositoryService',
            'product.repository' => 'getProduct_RepositoryService',
            'product_category.repository' => 'getProductCategory_RepositoryService',
            'product_category_tree.repository' => 'getProductCategoryTree_RepositoryService',
            'product_configurator_setting.repository' => 'getProductConfiguratorSetting_RepositoryService',
            'product_cross_selling.repository' => 'getProductCrossSelling_RepositoryService',
            'product_cross_selling_translation.repository' => 'getProductCrossSellingTranslation_RepositoryService',
            'product_export.repository' => 'getProductExport_RepositoryService',
            'product_keyword_dictionary.repository' => 'getProductKeywordDictionary_RepositoryService',
            'product_manufacturer.repository' => 'getProductManufacturer_RepositoryService',
            'product_manufacturer_translation.repository' => 'getProductManufacturerTranslation_RepositoryService',
            'product_media.repository' => 'getProductMedia_RepositoryService',
            'product_option.repository' => 'getProductOption_RepositoryService',
            'product_price.repository' => 'getProductPrice_RepositoryService',
            'product_property.repository' => 'getProductProperty_RepositoryService',
            'product_review.repository' => 'getProductReview_RepositoryService',
            'product_search_keyword.repository' => 'getProductSearchKeyword_RepositoryService',
            'product_stream.repository' => 'getProductStream_RepositoryService',
            'product_stream_filter.repository' => 'getProductStreamFilter_RepositoryService',
            'product_stream_translation.repository' => 'getProductStreamTranslation_RepositoryService',
            'product_tag.repository' => 'getProductTag_RepositoryService',
            'product_translation.repository' => 'getProductTranslation_RepositoryService',
            'product_visibility.repository' => 'getProductVisibility_RepositoryService',
            'promotion.repository' => 'getPromotion_RepositoryService',
            'promotion_cart_rule.repository' => 'getPromotionCartRule_RepositoryService',
            'promotion_discount.repository' => 'getPromotionDiscount_RepositoryService',
            'promotion_discount_prices.repository' => 'getPromotionDiscountPrices_RepositoryService',
            'promotion_discount_rule.repository' => 'getPromotionDiscountRule_RepositoryService',
            'promotion_individual_code.repository' => 'getPromotionIndividualCode_RepositoryService',
            'promotion_order_rule.repository' => 'getPromotionOrderRule_RepositoryService',
            'promotion_persona_customer.repository' => 'getPromotionPersonaCustomer_RepositoryService',
            'promotion_persona_rule.repository' => 'getPromotionPersonaRule_RepositoryService',
            'promotion_sales_channel.repository' => 'getPromotionSalesChannel_RepositoryService',
            'promotion_setgroup.repository' => 'getPromotionSetgroup_RepositoryService',
            'promotion_setgroup_rule.repository' => 'getPromotionSetgroupRule_RepositoryService',
            'promotion_translation.repository' => 'getPromotionTranslation_RepositoryService',
            'property_group.repository' => 'getPropertyGroup_RepositoryService',
            'property_group_option.repository' => 'getPropertyGroupOption_RepositoryService',
            'property_group_option_translation.repository' => 'getPropertyGroupOptionTranslation_RepositoryService',
            'property_group_translation.repository' => 'getPropertyGroupTranslation_RepositoryService',
            'request_stack' => 'getRequestStackService',
            'router' => 'getRouterService',
            'routing.loader' => 'getRouting_LoaderService',
            'rule.repository' => 'getRule_RepositoryService',
            'rule_condition.repository' => 'getRuleCondition_RepositoryService',
            'sales_channel.category.repository' => 'getSalesChannel_Category_RepositoryService',
            'sales_channel.country.repository' => 'getSalesChannel_Country_RepositoryService',
            'sales_channel.country_state.repository' => 'getSalesChannel_CountryState_RepositoryService',
            'sales_channel.currency.repository' => 'getSalesChannel_Currency_RepositoryService',
            'sales_channel.language.repository' => 'getSalesChannel_Language_RepositoryService',
            'sales_channel.main_category.repository' => 'getSalesChannel_MainCategory_RepositoryService',
            'sales_channel.payment_method.repository' => 'getSalesChannel_PaymentMethod_RepositoryService',
            'sales_channel.product.repository' => 'getSalesChannel_Product_RepositoryService',
            'sales_channel.repository' => 'getSalesChannel_RepositoryService',
            'sales_channel.salutation.repository' => 'getSalesChannel_Salutation_RepositoryService',
            'sales_channel.seo_url.repository' => 'getSalesChannel_SeoUrl_RepositoryService',
            'sales_channel.shipping_method.repository' => 'getSalesChannel_ShippingMethod_RepositoryService',
            'sales_channel_country.repository' => 'getSalesChannelCountry_RepositoryService',
            'sales_channel_currency.repository' => 'getSalesChannelCurrency_RepositoryService',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerAddress\\CustomerAddressDefinition' => 'getCustomerAddressDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroupTranslation\\CustomerGroupTranslationDefinition' => 'getCustomerGroupTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroup\\CustomerGroupDefinition' => 'getCustomerGroupDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerRecovery\\CustomerRecoveryDefinition' => 'getCustomerRecoveryDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerTag\\CustomerTagDefinition' => 'getCustomerTagDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\CustomerDefinition' => 'getCustomerDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfigSalesChannel\\DocumentBaseConfigSalesChannelDefinition' => 'getDocumentBaseConfigSalesChannelDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfig\\DocumentBaseConfigDefinition' => 'getDocumentBaseConfigDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentTypeTranslation\\DocumentTypeTranslationDefinition' => 'getDocumentTypeTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentType\\DocumentTypeDefinition' => 'getDocumentTypeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Document\\DocumentDefinition' => 'getDocumentDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderAddress\\OrderAddressDefinition' => 'getOrderAddressDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderCustomer\\OrderCustomerDefinition' => 'getOrderCustomerDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDeliveryPosition\\OrderDeliveryPositionDefinition' => 'getOrderDeliveryPositionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDelivery\\OrderDeliveryDefinition' => 'getOrderDeliveryDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderLineItem\\OrderLineItemDefinition' => 'getOrderLineItemDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTag\\OrderTagDefinition' => 'getOrderTagDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionDefinition' => 'getOrderTransactionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Order\\OrderDefinition' => 'getOrderDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Payment\\Aggregate\\PaymentMethodTranslation\\PaymentMethodTranslationDefinition' => 'getPaymentMethodTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionCartRule\\PromotionCartRuleDefinition' => 'getPromotionCartRuleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountPrice\\PromotionDiscountPriceDefinition' => 'getPromotionDiscountPriceDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountRule\\PromotionDiscountRuleDefinition' => 'getPromotionDiscountRuleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscount\\PromotionDiscountDefinition' => 'getPromotionDiscountDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionIndividualCode\\PromotionIndividualCodeDefinition' => 'getPromotionIndividualCodeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionOrderRule\\PromotionOrderRuleDefinition' => 'getPromotionOrderRuleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaCustomer\\PromotionPersonaCustomerDefinition' => 'getPromotionPersonaCustomerDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaRule\\PromotionPersonaRuleDefinition' => 'getPromotionPersonaRuleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSalesChannel\\PromotionSalesChannelDefinition' => 'getPromotionSalesChannelDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroupRule\\PromotionSetGroupRuleDefinition' => 'getPromotionSetGroupRuleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroup\\PromotionSetGroupDefinition' => 'getPromotionSetGroupDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionTranslation\\PromotionTranslationDefinition' => 'getPromotionTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\PromotionDefinition' => 'getPromotionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodPrice\\ShippingMethodPriceDefinition' => 'getShippingMethodPriceDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTag\\ShippingMethodTagDefinition' => 'getShippingMethodTagDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTranslation\\ShippingMethodTranslationDefinition' => 'getShippingMethodTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTag\\CategoryTagDefinition' => 'getCategoryTagDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTranslation\\CategoryTranslationDefinition' => 'getCategoryTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsBlock\\CmsBlockDefinition' => 'getCmsBlockDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsPageTranslation\\CmsPageTranslationDefinition' => 'getCmsPageTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSection\\CmsSectionDefinition' => 'getCmsSectionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlotTranslation\\CmsSlotTranslationDefinition' => 'getCmsSlotTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlot\\CmsSlotDefinition' => 'getCmsSlotDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Cms\\CmsPageDefinition' => 'getCmsPageDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportFile\\ImportExportFileDefinition' => 'getImportExportFileDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportLog\\ImportExportLogDefinition' => 'getImportExportLogDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\ImportExport\\ImportExportProfileDefinition' => 'getImportExportProfileDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooterTranslation\\MailHeaderFooterTranslationDefinition' => 'getMailHeaderFooterTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooter\\MailHeaderFooterDefinition' => 'getMailHeaderFooterDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateMedia\\MailTemplateMediaDefinition' => 'getMailTemplateMediaDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateSalesChannel\\MailTemplateSalesChannelDefinition' => 'getMailTemplateSalesChannelDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTranslation\\MailTemplateTranslationDefinition' => 'getMailTemplateTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTypeTranslation\\MailTemplateTypeTranslationDefinition' => 'getMailTemplateTypeTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateType\\MailTemplateTypeDefinition' => 'getMailTemplateTypeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\MailTemplateDefinition' => 'getMailTemplateDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaDefaultFolder\\MediaDefaultFolderDefinition' => 'getMediaDefaultFolderDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfigurationMediaThumbnailSize\\MediaFolderConfigurationMediaThumbnailSizeDefinition' => 'getMediaFolderConfigurationMediaThumbnailSizeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfiguration\\MediaFolderConfigurationDefinition' => 'getMediaFolderConfigurationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolder\\MediaFolderDefinition' => 'getMediaFolderDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaTag\\MediaTagDefinition' => 'getMediaTagDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnailSize\\MediaThumbnailSizeDefinition' => 'getMediaThumbnailSizeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnail\\MediaThumbnailDefinition' => 'getMediaThumbnailDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaTranslation\\MediaTranslationDefinition' => 'getMediaTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Media\\MediaDefinition' => 'getMediaDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipientTag\\NewsletterRecipientTagDefinition' => 'getNewsletterRecipientTagDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipient\\NewsletterRecipientDefinition' => 'getNewsletterRecipientDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\ProductExport\\ProductExportDefinition' => 'getProductExportDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamFilter\\ProductStreamFilterDefinition' => 'getProductStreamFilterDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamTranslation\\ProductStreamTranslationDefinition' => 'getProductStreamTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\ProductStream\\ProductStreamDefinition' => 'getProductStreamDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategoryTree\\ProductCategoryTreeDefinition' => 'getProductCategoryTreeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategory\\ProductCategoryDefinition' => 'getProductCategoryDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductConfiguratorSetting\\ProductConfiguratorSettingDefinition' => 'getProductConfiguratorSettingDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSellingTranslation\\ProductCrossSellingTranslationDefinition' => 'getProductCrossSellingTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSelling\\ProductCrossSellingDefinition' => 'getProductCrossSellingDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductKeywordDictionary\\ProductKeywordDictionaryDefinition' => 'getProductKeywordDictionaryDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturerTranslation\\ProductManufacturerTranslationDefinition' => 'getProductManufacturerTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturer\\ProductManufacturerDefinition' => 'getProductManufacturerDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductMedia\\ProductMediaDefinition' => 'getProductMediaDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductOption\\ProductOptionDefinition' => 'getProductOptionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductPrice\\ProductPriceDefinition' => 'getProductPriceDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductProperty\\ProductPropertyDefinition' => 'getProductPropertyDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductReview\\ProductReviewDefinition' => 'getProductReviewDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductSearchKeyword\\ProductSearchKeywordDefinition' => 'getProductSearchKeywordDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductTag\\ProductTagDefinition' => 'getProductTagDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductTranslation\\ProductTranslationDefinition' => 'getProductTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductVisibility\\ProductVisibilityDefinition' => 'getProductVisibilityDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOptionTranslation\\PropertyGroupOptionTranslationDefinition' => 'getPropertyGroupOptionTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOption\\PropertyGroupOptionDefinition' => 'getPropertyGroupOptionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupTranslation\\PropertyGroupTranslationDefinition' => 'getPropertyGroupTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Property\\PropertyGroupDefinition' => 'getPropertyGroupDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Rule\\Aggregate\\RuleCondition\\RuleConditionDefinition' => 'getRuleConditionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Rule\\RuleDefinition' => 'getRuleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Content\\Seo\\SeoUrlTemplate\\SeoUrlTemplateDefinition' => 'getSeoUrlTemplateDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\Api\\Acl\\Resource\\AclResourceDefinition' => 'getAclResourceDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclRoleDefinition' => 'getAclRoleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclUserRoleDefinition' => 'getAclUserRoleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommitData\\VersionCommitDataDefinition' => 'getVersionCommitDataDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommit\\VersionCommitDefinition' => 'getVersionCommitDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\VersionDefinition' => 'getVersionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\Event\\EventAction\\EventActionDefinition' => 'getEventActionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\Log\\LogEntryDefinition' => 'getLogEntryDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\MessageQueue\\DeadMessage\\DeadMessageDefinition' => 'getDeadMessageDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\MessageQueue\\MessageQueueStatsDefinition' => 'getMessageQueueStatsDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\ScheduledTaskDefinition' => 'getScheduledTaskDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\Plugin\\Aggregate\\PluginTranslation\\PluginTranslationDefinition' => 'getPluginTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\Framework\\Plugin\\PluginDefinition' => 'getPluginDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Country\\Aggregate\\CountryStateTranslation\\CountryStateTranslationDefinition' => 'getCountryStateTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Country\\Aggregate\\CountryTranslation\\CountryTranslationDefinition' => 'getCountryTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Currency\\Aggregate\\CurrencyTranslation\\CurrencyTranslationDefinition' => 'getCurrencyTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSetRelation\\CustomFieldSetRelationDefinition' => 'getCustomFieldSetRelationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSet\\CustomFieldSetDefinition' => 'getCustomFieldSetDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\CustomField\\CustomFieldDefinition' => 'getCustomFieldDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\DeliveryTime\\Aggregate\\DeliveryTimeTranslation\\DeliveryTimeTranslationDefinition' => 'getDeliveryTimeTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\DeliveryTime\\DeliveryTimeDefinition' => 'getDeliveryTimeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Integration\\IntegrationDefinition' => 'getIntegrationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Locale\\Aggregate\\LocaleTranslation\\LocaleTranslationDefinition' => 'getLocaleTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Locale\\LocaleDefinition' => 'getLocaleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeSalesChannel\\NumberRangeSalesChannelDefinition' => 'getNumberRangeSalesChannelDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeState\\NumberRangeStateDefinition' => 'getNumberRangeStateDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTranslation\\NumberRangeTranslationDefinition' => 'getNumberRangeTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTypeTranslation\\NumberRangeTypeTranslationDefinition' => 'getNumberRangeTypeTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeType\\NumberRangeTypeDefinition' => 'getNumberRangeTypeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\NumberRange\\NumberRangeDefinition' => 'getNumberRangeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCountry\\SalesChannelCountryDefinition' => 'getSalesChannelCountryDefinition3Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCurrency\\SalesChannelCurrencyDefinition' => 'getSalesChannelCurrencyDefinition3Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelDomain\\SalesChannelDomainDefinition' => 'getSalesChannelDomainDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelLanguage\\SalesChannelLanguageDefinition' => 'getSalesChannelLanguageDefinition3Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelPaymentMethod\\SalesChannelPaymentMethodDefinition' => 'getSalesChannelPaymentMethodDefinition3Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelShippingMethod\\SalesChannelShippingMethodDefinition' => 'getSalesChannelShippingMethodDefinition3Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTranslation\\SalesChannelTranslationDefinition' => 'getSalesChannelTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTypeTranslation\\SalesChannelTypeTranslationDefinition' => 'getSalesChannelTypeTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelType\\SalesChannelTypeDefinition' => 'getSalesChannelTypeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\SalesChannelDefinition' => 'getSalesChannelDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Salutation\\Aggregate\\SalutationTranslation\\SalutationTranslationDefinition' => 'getSalutationTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Snippet\\Aggregate\\SnippetSet\\SnippetSetDefinition' => 'getSnippetSetDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Snippet\\SnippetDefinition' => 'getSnippetDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineHistory\\StateMachineHistoryDefinition' => 'getStateMachineHistoryDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateDefinition' => 'getStateMachineStateDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateTranslationDefinition' => 'getStateMachineStateTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineTransition\\StateMachineTransitionDefinition' => 'getStateMachineTransitionDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\StateMachine\\StateMachineDefinition' => 'getStateMachineDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\StateMachine\\StateMachineTranslationDefinition' => 'getStateMachineTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\SystemConfig\\SystemConfigDefinition' => 'getSystemConfigDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Tag\\TagDefinition' => 'getTagDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleTypeTranslation\\TaxRuleTypeTranslationDefinition' => 'getTaxRuleTypeTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleType\\TaxRuleTypeDefinition' => 'getTaxRuleTypeDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Tax\\Aggregate\\TaxRule\\TaxRuleDefinition' => 'getTaxRuleDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Tax\\TaxDefinition' => 'getTaxDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Unit\\Aggregate\\UnitTranslation\\UnitTranslationDefinition' => 'getUnitTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\Unit\\UnitDefinition' => 'getUnitDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\User\\Aggregate\\UserAccessKey\\UserAccessKeyDefinition' => 'getUserAccessKeyDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\User\\Aggregate\\UserRecovery\\UserRecoveryDefinition' => 'getUserRecoveryDefinition2Service',
            'sales_channel_definition.Shopware\\Core\\System\\User\\UserDefinition' => 'getUserDefinition2Service',
            'sales_channel_definition.Shopware\\Storefront\\Theme\\Aggregate\\ThemeMediaDefinition' => 'getThemeMediaDefinition2Service',
            'sales_channel_definition.Shopware\\Storefront\\Theme\\Aggregate\\ThemeSalesChannelDefinition' => 'getThemeSalesChannelDefinition2Service',
            'sales_channel_definition.Shopware\\Storefront\\Theme\\Aggregate\\ThemeTranslationDefinition' => 'getThemeTranslationDefinition2Service',
            'sales_channel_definition.Shopware\\Storefront\\Theme\\ThemeDefinition' => 'getThemeDefinition2Service',
            'sales_channel_domain.repository' => 'getSalesChannelDomain_RepositoryService',
            'sales_channel_language.repository' => 'getSalesChannelLanguage_RepositoryService',
            'sales_channel_payment_method.repository' => 'getSalesChannelPaymentMethod_RepositoryService',
            'sales_channel_shipping_method.repository' => 'getSalesChannelShippingMethod_RepositoryService',
            'sales_channel_translation.repository' => 'getSalesChannelTranslation_RepositoryService',
            'sales_channel_type.repository' => 'getSalesChannelType_RepositoryService',
            'sales_channel_type_translation.repository' => 'getSalesChannelTypeTranslation_RepositoryService',
            'salutation.repository' => 'getSalutation_RepositoryService',
            'salutation_translation.repository' => 'getSalutationTranslation_RepositoryService',
            'scheduled_task.repository' => 'getScheduledTask_RepositoryService',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'seo_url.repository' => 'getSeoUrl_RepositoryService',
            'seo_url_template.repository' => 'getSeoUrlTemplate_RepositoryService',
            'serializer' => 'getSerializerService',
            'services_resetter' => 'getServicesResetterService',
            'session' => 'getSessionService',
            'shipping_method.repository' => 'getShippingMethod_RepositoryService',
            'shipping_method_price.repository' => 'getShippingMethodPrice_RepositoryService',
            'shipping_method_tag.repository' => 'getShippingMethodTag_RepositoryService',
            'shipping_method_translation.repository' => 'getShippingMethodTranslation_RepositoryService',
            'snippet.repository' => 'getSnippet_RepositoryService',
            'snippet_set.repository' => 'getSnippetSet_RepositoryService',
            'state_machine.repository' => 'getStateMachine_RepositoryService',
            'state_machine_history.repository' => 'getStateMachineHistory_RepositoryService',
            'state_machine_state.repository' => 'getStateMachineState_RepositoryService',
            'state_machine_state_translation.repository' => 'getStateMachineStateTranslation_RepositoryService',
            'state_machine_transition.repository' => 'getStateMachineTransition_RepositoryService',
            'state_machine_translation.repository' => 'getStateMachineTranslation_RepositoryService',
            'swiftmailer.mailer.default' => 'getSwiftmailer_Mailer_DefaultService',
            'swiftmailer.mailer.default.transport.real' => 'getSwiftmailer_Mailer_Default_Transport_RealService',
            'swiftmailer.transport' => 'getSwiftmailer_TransportService',
            'system_config.repository' => 'getSystemConfig_RepositoryService',
            'tag.repository' => 'getTag_RepositoryService',
            'tax.repository' => 'getTax_RepositoryService',
            'tax_rule.repository' => 'getTaxRule_RepositoryService',
            'tax_rule_type.repository' => 'getTaxRuleType_RepositoryService',
            'tax_rule_type_translation.repository' => 'getTaxRuleTypeTranslation_RepositoryService',
            'theme.repository' => 'getTheme_RepositoryService',
            'theme_media.repository' => 'getThemeMedia_RepositoryService',
            'theme_sales_channel.repository' => 'getThemeSalesChannel_RepositoryService',
            'theme_translation.repository' => 'getThemeTranslation_RepositoryService',
            'translator' => 'getTranslatorService',
            'twig' => 'getTwigService',
            'twig.controller.exception' => 'getTwig_Controller_ExceptionService',
            'twig.controller.preview_error' => 'getTwig_Controller_PreviewErrorService',
            'unit.repository' => 'getUnit_RepositoryService',
            'unit_translation.repository' => 'getUnitTranslation_RepositoryService',
            'user.repository' => 'getUser_RepositoryService',
            'user_access_key.repository' => 'getUserAccessKey_RepositoryService',
            'user_recovery.repository' => 'getUserRecovery_RepositoryService',
            'user_role_acl.repository' => 'getUserRoleAcl_RepositoryService',
            'validator' => 'getValidatorService',
            'version.repository' => 'getVersion_RepositoryService',
            'version_commit.repository' => 'getVersionCommit_RepositoryService',
            'version_commit_data.repository' => 'getVersionCommitData_RepositoryService',
        ];
        $this->aliases = [
            'Shopware\\Core\\Framework\\Adapter\\Twig\\TemplateFinder' => 'Shopware\\Storefront\\Theme\\Twig\\ThemeTemplateFinder',
            'mailer' => 'swiftmailer.mailer.default',
            'messenger.default_bus' => 'message_bus',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Payment\\PaymentMethodDefinition' => 'Shopware\\Core\\Checkout\\Payment\\SalesChannel\\SalesChannelPaymentMethodDefinition',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Payment\\SalesChannel\\SalesChannelPaymentMethodDefinition' => 'Shopware\\Core\\Checkout\\Payment\\SalesChannel\\SalesChannelPaymentMethodDefinition',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Shipping\\SalesChannel\\SalesChannelShippingMethodDefinition' => 'Shopware\\Core\\Checkout\\Shipping\\SalesChannel\\SalesChannelShippingMethodDefinition',
            'sales_channel_definition.Shopware\\Core\\Checkout\\Shipping\\ShippingMethodDefinition' => 'Shopware\\Core\\Checkout\\Shipping\\SalesChannel\\SalesChannelShippingMethodDefinition',
            'sales_channel_definition.Shopware\\Core\\Content\\Category\\CategoryDefinition' => 'Shopware\\Core\\Content\\Category\\SalesChannel\\SalesChannelCategoryDefinition',
            'sales_channel_definition.Shopware\\Core\\Content\\Category\\SalesChannel\\SalesChannelCategoryDefinition' => 'Shopware\\Core\\Content\\Category\\SalesChannel\\SalesChannelCategoryDefinition',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\ProductDefinition' => 'Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductDefinition',
            'sales_channel_definition.Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductDefinition' => 'Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductDefinition',
            'sales_channel_definition.Shopware\\Core\\Content\\Seo\\MainCategory\\MainCategoryDefinition' => 'Shopware\\Core\\Content\\Seo\\MainCategory\\SalesChannel\\SalesChannelMainCategoryDefinition',
            'sales_channel_definition.Shopware\\Core\\Content\\Seo\\MainCategory\\SalesChannel\\SalesChannelMainCategoryDefinition' => 'Shopware\\Core\\Content\\Seo\\MainCategory\\SalesChannel\\SalesChannelMainCategoryDefinition',
            'sales_channel_definition.Shopware\\Core\\Content\\Seo\\SeoUrl\\SalesChannel\\SalesChannelSeoUrlDefinition' => 'Shopware\\Core\\Content\\Seo\\SeoUrl\\SalesChannel\\SalesChannelSeoUrlDefinition',
            'sales_channel_definition.Shopware\\Core\\Content\\Seo\\SeoUrl\\SeoUrlDefinition' => 'Shopware\\Core\\Content\\Seo\\SeoUrl\\SalesChannel\\SalesChannelSeoUrlDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\CountryStateDefinition' => 'Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\SalesChannel\\SalesChannelCountryStateDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\SalesChannel\\SalesChannelCountryStateDefinition' => 'Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\SalesChannel\\SalesChannelCountryStateDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Country\\CountryDefinition' => 'Shopware\\Core\\System\\Country\\SalesChannel\\SalesChannelCountryDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Country\\SalesChannel\\SalesChannelCountryDefinition' => 'Shopware\\Core\\System\\Country\\SalesChannel\\SalesChannelCountryDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Currency\\CurrencyDefinition' => 'Shopware\\Core\\System\\Currency\\SalesChannel\\SalesChannelCurrencyDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Currency\\SalesChannel\\SalesChannelCurrencyDefinition' => 'Shopware\\Core\\System\\Currency\\SalesChannel\\SalesChannelCurrencyDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Language\\LanguageDefinition' => 'Shopware\\Core\\System\\Language\\SalesChannel\\SalesChannelLanguageDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Language\\SalesChannel\\SalesChannelLanguageDefinition' => 'Shopware\\Core\\System\\Language\\SalesChannel\\SalesChannelLanguageDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Salutation\\SalesChannel\\SalesChannelSalutationDefinition' => 'Shopware\\Core\\System\\Salutation\\SalesChannel\\SalesChannelSalutationDefinition',
            'sales_channel_definition.Shopware\\Core\\System\\Salutation\\SalutationDefinition' => 'Shopware\\Core\\System\\Salutation\\SalesChannel\\SalesChannelSalutationDefinition',
        ];

        $this->privates['service_container'] = function () {
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/HttpKernelInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/KernelInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/RebootableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/TerminableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Kernel.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Kernel/MicroKernelTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Kernel.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/event-dispatcher/EventSubscriberInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Routing/ContextResolverListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Routing/RouteScopeListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/SnippetService.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/ExtendableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/CloneTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/JsonSerializableTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/AssignArrayTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/ExtendableTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/CreateFromTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/Struct.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/Collection.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/Files/SnippetFileCollection.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/Filter/SnippetFilterFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Routing/RequestContextResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Routing/RouteScopeCheckTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Routing/SalesChannelRequestContextResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Routing/ApiRequestContextResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Routing/RouteScopeRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/EventListener/CorsListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/EventListener/ResponseHeaderListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/ApiVersion/ApiVersionSubscriber.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/RepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/AccessTokenRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/OAuth/AccessTokenRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/RefreshTokenRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/OAuth/RefreshTokenRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/CryptKey.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/event/src/EmitterAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/event/src/EmitterAwareTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/AuthorizationServer.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/ClientRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/OAuth/ClientRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/ScopeRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/OAuth/ScopeRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/EventListener/JsonRequestTransformerListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/EventListener/Authentication/SalesChannelAuthenticationListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/EventListener/Authentication/ApiAuthenticationListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/ResourceServer.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/AuthorizationValidators/AuthorizationValidatorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/CryptTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/AuthorizationValidators/BearerTokenValidator.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/UserRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/OAuth/UserRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/psr-http-message-bridge/HttpMessageFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/psr-http-message-bridge/Factory/PsrHttpFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/http-factory/src/RequestFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/http-factory/src/ResponseFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/http-factory/src/ServerRequestFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/http-factory/src/StreamFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/http-factory/src/UploadedFileFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/http-factory/src/UriFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/nyholm/psr7/src/Factory/Psr17Factory.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Cache/EntityCacheKeyGenerator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/EntitySearcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Cache/CachedEntitySearcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/DataAbstractionLayer/ElasticsearchEntitySearcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/CriteriaQueryHelper.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/EntitySearcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Read/EntityReaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Cache/CachedEntityReader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/EntityReader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/EntityAggregatorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Cache/CachedEntityAggregator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/DataAbstractionLayer/ElasticsearchEntityAggregator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/EntityAggregator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/EntityDefinitionQueryHelper.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/JoinBuilder/JoinBuilderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/JoinBuilder/AntiJoinBuilder.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/EntityHydrator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/Term/TokenizerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/Term/Tokenizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/Term/SearchTermInterpreter.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/Term/EntityScoreQueryBuilder.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Write/EntityWriterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Write/EntityWriter.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/EntityForeignKeyResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Write/WriteCommandExtractor.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Write/EntityWriteGatewayInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/EntityWriteGateway.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/ExceptionHandlerRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/Parser/SqlQueryParser.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Version/VersionDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Version/Aggregate/VersionCommit/VersionCommitDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Version/Aggregate/VersionCommitData/VersionCommitDataDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/VersionManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/DefinitionInstanceRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Event/EventAction/EventActionDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/event-dispatcher-contracts/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/event-dispatcher/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Event/BusinessEventDispatcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/event-dispatcher/EventDispatcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Filesystem/FilesystemFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/league/flysystem/src/FilesystemInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Language/LanguageDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Entity/SalesChannelDefinitionInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Language/SalesChannel/SalesChannelLanguageDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Language/LanguageLoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Language/CachedLanguageLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Language/LanguageLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrl/SeoUrlDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrl/SalesChannel/SalesChannelSeoUrlDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrlPlaceholderHandlerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrlPlaceholderHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/SalesChannelDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelDomain/SalesChannelDomainDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Context/SalesChannelContextPersister.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Context/SalesChannelContextFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Context/SalesChannelContextServiceInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Context/SalesChannelContextService.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Entity/SalesChannelDefinitionInstanceRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Country/CountryDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Country/Aggregate/CountryState/CountryStateDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Currency/CurrencyDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Currency/SalesChannel/SalesChannelCurrencyDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Currency/CurrencyFormatter.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/Aggregate/SnippetSet/SnippetSetDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/SnippetDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Tax/TaxDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/StateMachineRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/StateMachineDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/Aggregation/StateMachineState/StateMachineStateDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/Aggregation/StateMachineHistory/StateMachineHistoryDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SystemConfig/SystemConfigDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Util/XmlReader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SystemConfig/Util/ConfigReader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SystemConfig/SystemConfigService.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/NumberRangeDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/ValueGenerator/NumberRangeValueGeneratorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/ValueGenerator/NumberRangeValueGenerator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/ValueGenerator/Pattern/ValueGeneratorPatternRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Category/CategoryDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Category/SalesChannel/SalesChannelCategoryDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Category/Service/NavigationLoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Category/Service/NavigationLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/MediaDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaThumbnail/MediaThumbnailDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/UrlGeneratorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/UrlGenerator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/PathnameStrategyInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/StrategyFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/ProductDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/SalesChannelProductDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Rule/RuleDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/CmsPageDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/DataResolver/CmsSlotsDataResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/SalesChannel/SalesChannelCmsPageLoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/SalesChannel/SalesChannelCmsPageLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Price/AmountCalculator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartPersisterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartPersister.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/SalesChannel/CartService.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Order/OrderPersisterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Order/OrderPersister.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Price/PriceRoundingInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Price/PriceRounding.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Tax/TaxDetector.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Processor.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Validator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Transaction/TransactionProcessor.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartRuleLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/CustomerDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Aggregate/CustomerAddress/CustomerAddressDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Aggregate/CustomerGroup/CustomerGroupDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/OrderDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderAddress/OrderAddressDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderCustomer/OrderCustomerDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Order/OrderConverter.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/PaymentMethodDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/SalesChannel/SalesChannelPaymentMethodDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Shipping/ShippingMethodDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Shipping/SalesChannel/SalesChannelShippingMethodDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/composer/composer/src/Composer/EventDispatcher/EventSubscriberInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Twig/TwigDateRequestListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Csrf/CsrfPlaceholderHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Routing/StorefrontSubscriber.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Routing/MaintenanceModeResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Csrf/CsrfRouteListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/AffiliateTracking/AffiliateTrackingListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Pagelet/Header/HeaderPageletLoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Pagelet/Header/HeaderPageletLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/GenericPageLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Pagelet/Footer/FooterPageletLoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Pagelet/Footer/FooterPageletLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheResponseSubscriber.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/service-contracts/ServiceSubscriberInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/ControllerTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/StorefrontController.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/ErrorController.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Twig/ErrorTemplateResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Navigation/Error/ErrorPageLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/StorefrontPluginRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/ThemeFileResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/ThemeService.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/ThemeCompiler.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/ThemeDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/MappingEntityDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Aggregate/ThemeSalesChannelDefinition.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/TemplateFinderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/TemplateFinder.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Twig/ThemeTemplateFinder.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Twig/ThemeInheritanceBuilderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Twig/ThemeInheritanceBuilder.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/DataAbstractionLayer/CriteriaParser.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/ElasticsearchHelper.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/ClientFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/ElasticsearchRegistry.php';
            include_once \dirname(__DIR__, 4).'/src/Kernel.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/ControllerNameParser.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/ControllerMetadata/ArgumentMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/ControllerMetadata/ArgumentMetadataFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/ResponseListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/StreamedResponseListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/LocaleListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/ValidateRequestListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/EventListener/ResolveControllerNameSubscriber.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/ErrorListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ParameterBag/ParameterBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ParameterBag/ParameterBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ParameterBag/FrozenParameterBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/container/src/ContainerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ParameterBag/ContainerBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ParameterBag/ContainerBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/HttpKernel.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ControllerResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ControllerResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/ControllerResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ArgumentResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ArgumentResolver.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/RequestStack.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/UriSigner.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/config/ConfigCacheFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/config/ResourceCheckerConfigCacheFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/LocaleAwareListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/cache/src/CacheItemPoolInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Adapter/AdapterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache-contracts/CacheInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/log/Psr/Log/LoggerAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/service-contracts/ResetInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/ResettableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/log/Psr/Log/LoggerAwareTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Traits/AbstractTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Traits/AbstractAdapterTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache-contracts/CacheTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Traits/ContractsTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Adapter/AbstractAdapter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Marshaller/MarshallerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Marshaller/DefaultMarshaller.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Adapter/TagAwareAdapterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache-contracts/TagAwareCacheInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/PruneableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Traits/ProxyTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Adapter/TagAwareAdapter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Traits/FilesystemCommonTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Traits/FilesystemTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Adapter/FilesystemAdapter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-access/PropertyAccessorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-access/PropertyAccessor.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/SessionInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/Session.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/Storage/SessionStorageInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/SessionBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/Storage/MetadataBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/Attribute/AttributeBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/Attribute/AttributeBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/Flash/FlashBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/Session/Flash/FlashBag.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/AbstractSessionListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/SessionListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/service-contracts/ServiceProviderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/service-contracts/ServiceLocatorTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ServiceLocator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/security-csrf/CsrfTokenManagerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/security-csrf/CsrfTokenManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/security-csrf/TokenGenerator/TokenGeneratorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/security-csrf/TokenGenerator/UriSafeTokenGenerator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/security-csrf/TokenStorage/TokenStorageInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/security-csrf/TokenStorage/ClearableTokenStorageInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/security-csrf/TokenStorage/SessionTokenStorage.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/asset/Packages.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/asset/PackageInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/asset/Package.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/asset/PathPackage.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/asset/VersionStrategy/VersionStrategyInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/asset/VersionStrategy/EmptyVersionStrategy.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/asset/Context/ContextInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/asset/Context/RequestStackContext.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/HttpCache/SurrogateInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/HttpCache/AbstractSurrogate.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/HttpCache/Esi.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/SurrogateListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/FragmentListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation-contracts/LocaleAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/TranslatorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation-contracts/TranslatorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/TranslatorBagInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Translator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheWarmer/WarmableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Translation/Translator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Formatter/MessageFormatterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Formatter/IntlFormatterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Formatter/ChoiceMessageFormatterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Formatter/MessageFormatter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation-contracts/TranslatorTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/IdentityTranslator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/DebugHandlersListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/psr/log/Psr/Log/LoggerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/ResettableInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Logger.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Log/DebugLoggerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/monolog-bridge/Logger.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Debug/FileLinkFormatter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/stopwatch/Stopwatch.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/RequestContextAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Matcher/UrlMatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Generator/UrlGeneratorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/RouterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Matcher/RequestMatcherInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Router.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ServiceSubscriberInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/DependencyInjection/CompatibilityServiceSubscriberInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Routing/Router.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/RequestContext.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/EventListener/RouterListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/Reader.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationReader.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationRegistry.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/SerializerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/NormalizerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/ContextAwareNormalizerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/DenormalizerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/ContextAwareDenormalizerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Encoder/EncoderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Encoder/ContextAwareEncoderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Encoder/DecoderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Encoder/ContextAwareDecoderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Serializer.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/Serializer/StructNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/CacheableSupportsMethodInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/ProblemNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/SerializerAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/ObjectToPopulateTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/SerializerAwareTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/AbstractNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/JsonSerializableNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/DateTimeNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/ConstraintViolationListNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/NameConverter/NameConverterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/NameConverter/AdvancedNameConverterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/NameConverter/MetadataAwareNameConverter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/DateTimeZoneNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/DateIntervalNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/DataUriNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/ArrayDenormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/AbstractObjectNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Normalizer/ObjectNormalizer.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-info/PropertyTypeExtractorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-info/PropertyDescriptionExtractorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-info/PropertyAccessExtractorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-info/PropertyListExtractorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-info/PropertyInfoExtractorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-info/PropertyInitializableExtractorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-info/PropertyInfoCacheExtractor.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/property-info/PropertyInfoExtractor.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Mapping/ClassDiscriminatorResolverInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Mapping/ClassDiscriminatorFromClassMetadata.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Struct/Serializer/StructDecoder.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Serializer/JsonApiDecoder.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Encoder/NormalizationAwareInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Encoder/XmlEncoder.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Encoder/JsonEncoder.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Encoder/YamlEncoder.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Encoder/CsvEncoder.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Mapping/Factory/ClassMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Mapping/Factory/ClassResolverTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Mapping/Factory/CacheClassMetadataFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Mapping/Factory/ClassMetadataFactory.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Mapping/Loader/LoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Mapping/Loader/LoaderChain.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/serializer/Mapping/Loader/AnnotationLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Traits/PhpArrayTrait.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/Adapter/PhpArrayAdapter.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/mime/MimeTypeGuesserInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/mime/MimeTypesInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/mime/MimeTypes.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Processor/ProcessorInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/monolog-bridge/Handler/ConsoleHandler.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/ControllerListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/ParamConverterListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/ParamConverterManager.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/ParamConverterInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DateTimeParamConverter.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/TemplateListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Templating/TemplateGuesser.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/HttpCacheListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/IsGrantedListener.php';
            include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ArgumentNameConverter.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Environment.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Extension/ExtensionInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Extension/AbstractExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/CsrfExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/TranslationExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/AssetExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/CodeExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/RoutingExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/YamlExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/StopwatchExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/HttpKernelExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/HttpFoundationExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/UrlHelper.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/InheritanceExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/FeatureFlagExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/intl-extra/src/IntlExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/string-extra/src/StringExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/InstanceOfExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/Filter/CurrencyFilter.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/Extension/SeoUrlFunctionExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/Extension/MediaExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Extension/GlobalsInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Twig/TemplateDataExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Twig/IconExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Twig/ThumbnailExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Twig/Extension/UrlEncodingTwigFilter.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Twig/Extension/SwSanitizeTwigFilter.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Twig/Extension/CsrfFunctionExtension.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/AppVariable.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/RuntimeLoader/RuntimeLoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/RuntimeLoader/ContainerRuntimeLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bundle/DependencyInjection/Configurator/EnvironmentConfigurator.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Loader/LoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Loader/ExistsLoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Loader/SourceContextLoaderInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/twig/twig/src/Loader/FilesystemLoader.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Entity/SalesChannelRepositoryInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Entity/SalesChannelRepository.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/MessageBusInterface.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/MonitoringBusDecorator.php';
            include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/MessageBus.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Translation/Translator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Routing/Router.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Event/NestedEventDispatcher.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/DataAbstractionLayer/MediaRepositoryDecorator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/DataAbstractionLayer/MediaThumbnailRepositoryDecorator.php';
            include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/DataAbstractionLayer/PaymentMethodRepositoryDecorator.php';
            include_once \dirname(__DIR__, 4).'/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/CachedReader.php';
        };
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return require $this->containerDir.\DIRECTORY_SEPARATOR.'removed-ids.php';
    }

    /*
     * Gets the public 'Doctrine\DBAL\Connection' shared service.
     *
     * @return \Doctrine\DBAL\Connection
     */
    protected function getConnectionService()
    {
        return $this->services['Doctrine\\DBAL\\Connection'] = \Shopware\Core\Kernel::getConnection();
    }

    /*
     * Gets the public 'Elasticsearch\Client' shared service.
     *
     * @return \Elasticsearch\Client
     */
    protected function getClientService()
    {
        return $this->services['Elasticsearch\\Client'] = \Shopware\Elasticsearch\Framework\ClientFactory::createClient($this->getEnv('default:default_whitespace:SHOPWARE_ES_HOSTS'));
    }

    /*
     * Gets the public 'Shopware\Administration\Controller\AdministrationController' shared service.
     *
     * @return \Shopware\Administration\Controller\AdministrationController
     */
    protected function getAdministrationControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/administration/Controller/AdministrationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/administration/Snippet/SnippetFinderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/administration/Snippet/CachedSnippetFinder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/administration/Snippet/SnippetFinder.php';

        $this->services['Shopware\\Administration\\Controller\\AdministrationController'] = $instance = new \Shopware\Administration\Controller\AdministrationController(($this->services['Shopware\\Storefront\\Theme\\Twig\\ThemeTemplateFinder'] ?? $this->getThemeTemplateFinderService()), ($this->privates['Shopware\\Core\\Framework\\Store\\Services\\FirstRunWizardClient'] ?? $this->getFirstRunWizardClientService()), new \Shopware\Administration\Snippet\CachedSnippetFinder(new \Shopware\Administration\Snippet\SnippetFinder(($this->services['kernel'] ?? $this->get('kernel', 1))), ($this->privates['cache.object'] ?? $this->getCache_ObjectService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Cart\Calculator' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Calculator
     */
    protected function getCalculatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Calculator.php';

        return $this->services['Shopware\\Core\\Checkout\\Cart\\Calculator'] = new \Shopware\Core\Checkout\Cart\Calculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\QuantityPriceCalculator'] ?? $this->getQuantityPriceCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PercentagePriceCalculator'] ?? $this->getPercentagePriceCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\AbsolutePriceCalculator'] ?? $this->getAbsolutePriceCalculatorService()));
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Cart\Order\Api\OrderConverterController' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Order\Api\OrderConverterController
     */
    protected function getOrderConverterControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Order/Api/OrderConverterController.php';

        $this->services['Shopware\\Core\\Checkout\\Cart\\Order\\Api\\OrderConverterController'] = $instance = new \Shopware\Core\Checkout\Cart\Order\Api\OrderConverterController(($this->privates['Shopware\\Core\\Checkout\\Cart\\Order\\OrderConverter'] ?? $this->getOrderConverterService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\CartPersister'] ?? $this->getCartPersisterService()), ($this->services['order.repository'] ?? $this->getOrder_RepositoryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Cart\Order\Api\OrderRecalculationController' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Order\Api\OrderRecalculationController
     */
    protected function getOrderRecalculationControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Order/Api/OrderRecalculationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Order/RecalculationService.php';

        $this->services['Shopware\\Core\\Checkout\\Cart\\Order\\Api\\OrderRecalculationController'] = $instance = new \Shopware\Core\Checkout\Cart\Order\Api\OrderRecalculationController(new \Shopware\Core\Checkout\Cart\Order\RecalculationService(($this->services['order.repository'] ?? $this->getOrder_RepositoryService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Order\\OrderConverter'] ?? $this->getOrderConverterService()), ($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()), ($this->services['product.repository'] ?? $this->getProduct_RepositoryService()), ($this->services['order_address.repository'] ?? $this->getOrderAddress_RepositoryService()), ($this->services['customer_address.repository'] ?? $this->getCustomerAddress_RepositoryService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Processor'] ?? $this->getProcessorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\CartRuleLoader'] ?? $this->getCartRuleLoaderService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Cart\PriceActionController' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\PriceActionController
     */
    protected function getPriceActionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/PriceActionController.php';

        $this->services['Shopware\\Core\\Checkout\\Cart\\PriceActionController'] = $instance = new \Shopware\Core\Checkout\Cart\PriceActionController(($this->services['tax.repository'] ?? $this->getTax_RepositoryService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\NetPriceCalculator'] ?? $this->getNetPriceCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\GrossPriceCalculator'] ?? $this->getGrossPriceCalculatorService()), ($this->services['currency.repository'] ?? $this->getCurrency_RepositoryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Cart\SalesChannel\CartService' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\SalesChannel\CartService
     */
    protected function getCartServiceService()
    {
        $a = ($this->services['order.repository'] ?? $this->getOrder_RepositoryService());

        return $this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] = new \Shopware\Core\Checkout\Cart\SalesChannel\CartService(($this->privates['Shopware\\Core\\Checkout\\Cart\\CartPersister'] ?? $this->getCartPersisterService()), new \Shopware\Core\Checkout\Cart\Order\OrderPersister($a, ($this->privates['Shopware\\Core\\Checkout\\Cart\\Order\\OrderConverter'] ?? $this->getOrderConverterService())), ($this->privates['Shopware\\Core\\Checkout\\Cart\\CartRuleLoader'] ?? $this->getCartRuleLoaderService()), $a, ($this->services['order_customer.repository'] ?? $this->getOrderCustomer_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Event\\BusinessEventDispatcher'] ?? $this->getBusinessEventDispatcherService()));
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Cart\SalesChannel\SalesChannelCartController' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\SalesChannel\SalesChannelCartController
     */
    protected function getSalesChannelCartControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/SalesChannel/SalesChannelCartController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Cart/ProductLineItemFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionItemBuilder.php';

        $this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\SalesChannelCartController'] = $instance = new \Shopware\Core\Checkout\Cart\SalesChannel\SalesChannelCartController(($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), ($this->services['serializer'] ?? $this->getSerializerService()), ($this->privates['Shopware\\Core\\Content\\Product\\Cart\\ProductLineItemFactory'] ?? ($this->privates['Shopware\\Core\\Content\\Product\\Cart\\ProductLineItemFactory'] = new \Shopware\Core\Content\Product\Cart\ProductLineItemFactory())), ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionItemBuilder'] ?? ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionItemBuilder'] = new \Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Cart\SalesChannel\SalesChannelCheckoutController' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\SalesChannel\SalesChannelCheckoutController
     */
    protected function getSalesChannelCheckoutControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/SalesChannel/SalesChannelCheckoutController.php';

        $this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\SalesChannelCheckoutController'] = $instance = new \Shopware\Core\Checkout\Cart\SalesChannel\SalesChannelCheckoutController(($this->privates['Shopware\\Core\\Checkout\\Payment\\PaymentService'] ?? $this->getPaymentServiceService()), ($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] ?? $this->getSalesChannelContextFactoryService()), ($this->services['serializer'] ?? $this->getSerializerService()), ($this->services['order.repository'] ?? $this->getOrder_RepositoryService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountRegistrationService'] ?? $this->getAccountRegistrationServiceService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountService'] ?? $this->getAccountServiceService()), ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition
     */
    protected function getCustomerAddressDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerAddress\\CustomerAddressDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition
     */
    protected function getCustomerGroupTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Aggregate/CustomerGroupTranslation/CustomerGroupTranslationDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroupTranslation\\CustomerGroupTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition
     */
    protected function getCustomerGroupDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroup\\CustomerGroupDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition
     */
    protected function getCustomerRecoveryDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Aggregate/CustomerRecovery/CustomerRecoveryDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerRecovery\\CustomerRecoveryDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition
     */
    protected function getCustomerTagDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Aggregate/CustomerTag/CustomerTagDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerTag\\CustomerTagDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Customer\CustomerDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\CustomerDefinition
     */
    protected function getCustomerDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Customer\\CustomerDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\CustomerDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Customer\SalesChannel\SalesChannelCustomerController' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\SalesChannel\SalesChannelCustomerController
     */
    protected function getSalesChannelCustomerControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/SalesChannel/SalesChannelCustomerController.php';

        $this->services['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\SalesChannelCustomerController'] = $instance = new \Shopware\Core\Checkout\Customer\SalesChannel\SalesChannelCustomerController(($this->services['serializer'] ?? $this->getSerializerService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountService'] ?? $this->getAccountServiceService()), ($this->services['order.repository'] ?? $this->getOrder_RepositoryService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountRegistrationService'] ?? $this->getAccountRegistrationServiceService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AddressService'] ?? $this->getAddressServiceService()), ($this->services['Shopware\\Core\\Checkout\\Customer\\CustomerDefinition'] ?? $this->getCustomerDefinitionService()), ($this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerAddress\\CustomerAddressDefinition'] ?? $this->getCustomerAddressDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition
     */
    protected function getDocumentBaseConfigSalesChannelDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Aggregate/DocumentBaseConfigSalesChannel/DocumentBaseConfigSalesChannelDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfigSalesChannel\\DocumentBaseConfigSalesChannelDefinition'] = $instance = new \Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition
     */
    protected function getDocumentBaseConfigDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Aggregate/DocumentBaseConfig/DocumentBaseConfigDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfig\\DocumentBaseConfigDefinition'] = $instance = new \Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition
     */
    protected function getDocumentTypeTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Aggregate/DocumentTypeTranslation/DocumentTypeTranslationDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentTypeTranslation\\DocumentTypeTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition
     */
    protected function getDocumentTypeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Aggregate/DocumentType/DocumentTypeDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentType\\DocumentTypeDefinition'] = $instance = new \Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Document\Controller\DocumentController' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Controller\DocumentController
     */
    protected function getDocumentControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Controller/DocumentController.php';

        $this->services['Shopware\\Core\\Checkout\\Document\\Controller\\DocumentController'] = $instance = new \Shopware\Core\Checkout\Document\Controller\DocumentController(($this->privates['Shopware\\Core\\Checkout\\Document\\DocumentService'] ?? $this->getDocumentServiceService()), ($this->services['document.repository'] ?? $this->getDocument_RepositoryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Document\DocumentDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\DocumentDefinition
     */
    protected function getDocumentDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Document\\DocumentDefinition'] = $instance = new \Shopware\Core\Checkout\Document\DocumentDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Document\DocumentGeneratorController' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\DocumentGeneratorController
     */
    protected function getDocumentGeneratorControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGeneratorController.php';

        $this->services['Shopware\\Core\\Checkout\\Document\\DocumentGeneratorController'] = $instance = new \Shopware\Core\Checkout\Document\DocumentGeneratorController(($this->privates['Shopware\\Core\\Checkout\\Document\\DocumentService'] ?? $this->getDocumentServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition
     */
    protected function getOrderAddressDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderAddress\\OrderAddressDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition
     */
    protected function getOrderCustomerDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderCustomer\\OrderCustomerDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition
     */
    protected function getOrderDeliveryPositionDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderDeliveryPosition/OrderDeliveryPositionDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDeliveryPosition\\OrderDeliveryPositionDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition
     */
    protected function getOrderDeliveryDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderDelivery/OrderDeliveryDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDelivery\\OrderDeliveryDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition
     */
    protected function getOrderLineItemDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderLineItem/OrderLineItemDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderLineItem\\OrderLineItemDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition
     */
    protected function getOrderTagDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderTag/OrderTagDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTag\\OrderTagDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition
     */
    protected function getOrderTransactionDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderTransaction/OrderTransactionDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Order\Api\OrderActionController' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Api\OrderActionController
     */
    protected function getOrderActionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Api/OrderActionController.php';

        $this->services['Shopware\\Core\\Checkout\\Order\\Api\\OrderActionController'] = $instance = new \Shopware\Core\Checkout\Order\Api\OrderActionController(($this->privates['Shopware\\Core\\System\\StateMachine\\StateMachineRegistry'] ?? $this->getStateMachineRegistryService()), ($this->services['order.repository'] ?? $this->getOrder_RepositoryService()), ($this->services['mail_template.repository'] ?? $this->getMailTemplate_RepositoryService()), ($this->services['document.repository'] ?? $this->getDocument_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\MailTemplate\\Service\\MailService'] ?? $this->getMailServiceService()), ($this->privates['Shopware\\Core\\Checkout\\Document\\DocumentService'] ?? $this->getDocumentServiceService()), ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService()), ($this->services['Shopware\\Core\\System\\StateMachine\\StateMachineDefinition'] ?? $this->getStateMachineDefinitionService()), ($this->privates['Shopware\\Core\\Content\\Media\\MediaService'] ?? $this->getMediaServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Order\OrderDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\OrderDefinition
     */
    protected function getOrderDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Order\\OrderDefinition'] = $instance = new \Shopware\Core\Checkout\Order\OrderDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition
     */
    protected function getPaymentMethodTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Aggregate/PaymentMethodTranslation/PaymentMethodTranslationDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Payment\\Aggregate\\PaymentMethodTranslation\\PaymentMethodTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Payment\Controller\PaymentController' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\Controller\PaymentController
     */
    protected function getPaymentControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Controller/PaymentController.php';

        $this->services['Shopware\\Core\\Checkout\\Payment\\Controller\\PaymentController'] = $instance = new \Shopware\Core\Checkout\Payment\Controller\PaymentController(($this->privates['Shopware\\Core\\Checkout\\Payment\\PaymentService'] ?? $this->getPaymentServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Payment\PaymentMethodDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\PaymentMethodDefinition
     */
    protected function getPaymentMethodDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Payment\\PaymentMethodDefinition'] = $instance = new \Shopware\Core\Checkout\Payment\PaymentMethodDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition
     */
    protected function getSalesChannelPaymentMethodDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Payment\\SalesChannel\\SalesChannelPaymentMethodDefinition'] = $instance = new \Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition
     */
    protected function getPromotionCartRuleDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionCartRule/PromotionCartRuleDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionCartRule\\PromotionCartRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition
     */
    protected function getPromotionDiscountPriceDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionDiscountPrice/PromotionDiscountPriceDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountPrice\\PromotionDiscountPriceDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition
     */
    protected function getPromotionDiscountRuleDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionDiscountRule/PromotionDiscountRuleDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountRule\\PromotionDiscountRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition
     */
    protected function getPromotionDiscountDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionDiscount/PromotionDiscountDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscount\\PromotionDiscountDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition
     */
    protected function getPromotionIndividualCodeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionIndividualCode/PromotionIndividualCodeDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionIndividualCode\\PromotionIndividualCodeDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition
     */
    protected function getPromotionOrderRuleDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionOrderRule/PromotionOrderRuleDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionOrderRule\\PromotionOrderRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition
     */
    protected function getPromotionPersonaCustomerDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionPersonaCustomer/PromotionPersonaCustomerDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaCustomer\\PromotionPersonaCustomerDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition
     */
    protected function getPromotionPersonaRuleDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionPersonaRule/PromotionPersonaRuleDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaRule\\PromotionPersonaRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition
     */
    protected function getPromotionSalesChannelDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionSalesChannel/PromotionSalesChannelDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSalesChannel\\PromotionSalesChannelDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition
     */
    protected function getPromotionSetGroupRuleDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionSetGroupRule/PromotionSetGroupRuleDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroupRule\\PromotionSetGroupRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition
     */
    protected function getPromotionSetGroupDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionSetGroup/PromotionSetGroupDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroup\\PromotionSetGroupDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition
     */
    protected function getPromotionTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionTranslation/PromotionTranslationDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionTranslation\\PromotionTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\Api\PromotionActionController' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Api\PromotionActionController
     */
    protected function getPromotionActionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Api/PromotionActionController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Util/PromotionCodesLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Util/PromotionCodesRemover.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\Api\\PromotionActionController'] = $instance = new \Shopware\Core\Checkout\Promotion\Api\PromotionActionController(new \Shopware\Core\Checkout\Promotion\Util\PromotionCodesLoader(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())), new \Shopware\Core\Checkout\Promotion\Util\PromotionCodesRemover(($this->services['promotion_individual_code.repository'] ?? $this->getPromotionIndividualCode_RepositoryService())), ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\LineItemGroupServiceRegistry'] ?? $this->getLineItemGroupServiceRegistryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Promotion\PromotionDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\PromotionDefinition
     */
    protected function getPromotionDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/PromotionDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Promotion\\PromotionDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\PromotionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition
     */
    protected function getShippingMethodPriceDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Shipping/Aggregate/ShippingMethodPrice/ShippingMethodPriceDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodPrice\\ShippingMethodPriceDefinition'] = $instance = new \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition
     */
    protected function getShippingMethodTagDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Shipping/Aggregate/ShippingMethodTag/ShippingMethodTagDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTag\\ShippingMethodTagDefinition'] = $instance = new \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition
     */
    protected function getShippingMethodTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Shipping/Aggregate/ShippingMethodTranslation/ShippingMethodTranslationDefinition.php';

        $this->services['Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTranslation\\ShippingMethodTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition
     */
    protected function getSalesChannelShippingMethodDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Shipping\\SalesChannel\\SalesChannelShippingMethodDefinition'] = $instance = new \Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Checkout\Shipping\ShippingMethodDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Shipping\ShippingMethodDefinition
     */
    protected function getShippingMethodDefinitionService()
    {
        $this->services['Shopware\\Core\\Checkout\\Shipping\\ShippingMethodDefinition'] = $instance = new \Shopware\Core\Checkout\Shipping\ShippingMethodDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition
     */
    protected function getCategoryTagDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Category/Aggregate/CategoryTag/CategoryTagDefinition.php';

        $this->services['Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTag\\CategoryTagDefinition'] = $instance = new \Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition
     */
    protected function getCategoryTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Category/Aggregate/CategoryTranslation/CategoryTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTranslation\\CategoryTranslationDefinition'] = $instance = new \Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Category\CategoryDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Category\CategoryDefinition
     */
    protected function getCategoryDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Category\\CategoryDefinition'] = $instance = new \Shopware\Core\Content\Category\CategoryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition
     */
    protected function getSalesChannelCategoryDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Category\\SalesChannel\\SalesChannelCategoryDefinition'] = $instance = new \Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition
     */
    protected function getCmsBlockDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsBlock/CmsBlockDefinition.php';

        $this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsBlock\\CmsBlockDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition
     */
    protected function getCmsPageTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsPageTranslation/CmsPageTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsPageTranslation\\CmsPageTranslationDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition
     */
    protected function getCmsSectionDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsSection/CmsSectionDefinition.php';

        $this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSection\\CmsSectionDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition
     */
    protected function getCmsSlotTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsSlotTranslation/CmsSlotTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlotTranslation\\CmsSlotTranslationDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition
     */
    protected function getCmsSlotDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsSlot/CmsSlotDefinition.php';

        $this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlot\\CmsSlotDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\CmsPageDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\CmsPageDefinition
     */
    protected function getCmsPageDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Cms\\CmsPageDefinition'] = $instance = new \Shopware\Core\Content\Cms\CmsPageDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\DataAbstractionLayer\FieldSerializer\SlotConfigFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Content\Cms\DataAbstractionLayer\FieldSerializer\SlotConfigFieldSerializer
     */
    protected function getSlotConfigFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/JsonFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/DataAbstractionLayer/FieldSerializer/SlotConfigFieldSerializer.php';

        return $this->services['Shopware\\Core\\Content\\Cms\\DataAbstractionLayer\\FieldSerializer\\SlotConfigFieldSerializer'] = new \Shopware\Core\Content\Cms\DataAbstractionLayer\FieldSerializer\SlotConfigFieldSerializer(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\DataResolver\CmsSlotsDataResolver' shared service.
     *
     * @return \Shopware\Core\Content\Cms\DataResolver\CmsSlotsDataResolver
     */
    protected function getCmsSlotsDataResolverService()
    {
        return $this->services['Shopware\\Core\\Content\\Cms\\DataResolver\\CmsSlotsDataResolver'] = new \Shopware\Core\Content\Cms\DataResolver\CmsSlotsDataResolver(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\Media\\Cms\\ImageCmsElementResolver'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\Cms\\ImageCmsElementResolver'] = new \Shopware\Core\Content\Media\Cms\ImageCmsElementResolver()));
            yield 1 => ($this->privates['Shopware\\Core\\Content\\Media\\Cms\\Type\\ImageSliderTypeDataResolver'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\Cms\\Type\\ImageSliderTypeDataResolver'] = new \Shopware\Core\Content\Media\Cms\Type\ImageSliderTypeDataResolver()));
            yield 2 => ($this->privates['Shopware\\Core\\Content\\Media\\Cms\\Type\\ImageGalleryTypeDataResolver'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\Cms\\Type\\ImageGalleryTypeDataResolver'] = new \Shopware\Core\Content\Media\Cms\Type\ImageGalleryTypeDataResolver()));
            yield 3 => ($this->privates['Shopware\\Core\\Content\\Product\\Cms\\ProductBoxCmsElementResolver'] ?? ($this->privates['Shopware\\Core\\Content\\Product\\Cms\\ProductBoxCmsElementResolver'] = new \Shopware\Core\Content\Product\Cms\ProductBoxCmsElementResolver()));
            yield 4 => ($this->privates['Shopware\\Core\\Content\\Product\\Cms\\ProductListingCmsElementResolver'] ?? $this->getProductListingCmsElementResolverService());
            yield 5 => ($this->privates['Shopware\\Core\\Content\\Product\\Cms\\ProductSliderCmsElementResolver'] ?? ($this->privates['Shopware\\Core\\Content\\Product\\Cms\\ProductSliderCmsElementResolver'] = new \Shopware\Core\Content\Product\Cms\ProductSliderCmsElementResolver()));
            yield 6 => ($this->privates['Shopware\\Core\\Content\\Cms\\DataResolver\\Element\\TextCmsElementResolver'] ?? ($this->privates['Shopware\\Core\\Content\\Cms\\DataResolver\\Element\\TextCmsElementResolver'] = new \Shopware\Core\Content\Cms\DataResolver\Element\TextCmsElementResolver()));
            yield 7 => ($this->privates['Shopware\\Core\\Content\\Cms\\DataResolver\\Element\\FormCmsElementResolver'] ?? $this->getFormCmsElementResolverService());
        }, 8), ['product' => ($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService())], ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageController' shared service.
     *
     * @return \Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageController
     */
    protected function getSalesChannelCmsPageControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/SalesChannel/SalesChannelCmsPageController.php';

        $this->services['Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageController'] = $instance = new \Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageController(($this->privates['Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageLoader'] ?? $this->getSalesChannelCmsPageLoaderService()), ($this->services['Shopware\\Core\\Content\\Cms\\CmsPageDefinition'] ?? $this->getCmsPageDefinitionService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageRepository' shared service.
     *
     * @return \Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageRepository
     */
    protected function getSalesChannelCmsPageRepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/SalesChannel/SalesChannelCmsPageRepository.php';

        return $this->services['Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageRepository'] = new \Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageRepository(($this->services['cms_page.repository'] ?? $this->getCmsPage_RepositoryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition
     */
    protected function getImportExportFileDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Aggregate/ImportExportFile/ImportExportFileDefinition.php';

        $this->services['Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportFile\\ImportExportFileDefinition'] = $instance = new \Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition
     */
    protected function getImportExportLogDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Aggregate/ImportExportLog/ImportExportLogDefinition.php';

        $this->services['Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportLog\\ImportExportLogDefinition'] = $instance = new \Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\ImportExport\Controller\ImportExportActionController' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Controller\ImportExportActionController
     */
    protected function getImportExportActionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Controller/ImportExportActionController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Service/SupportedFeaturesService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Service/DownloadService.php';

        $this->services['Shopware\\Core\\Content\\ImportExport\\Controller\\ImportExportActionController'] = $instance = new \Shopware\Core\Content\ImportExport\Controller\ImportExportActionController(new \Shopware\Core\Content\ImportExport\Service\SupportedFeaturesService($this->parameters['import_export.supported_entities'], $this->parameters['import_export.supported_file_types']), ($this->privates['Shopware\\Core\\Content\\ImportExport\\Service\\ImportExportService'] ?? $this->getImportExportServiceService()), new \Shopware\Core\Content\ImportExport\Service\DownloadService(($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()), ($this->services['import_export_file.repository'] ?? $this->getImportExportFile_RepositoryService())), ($this->services['import_export_profile.repository'] ?? $this->getImportExportProfile_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), ($this->services['Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportLog\\ImportExportLogDefinition'] ?? $this->getImportExportLogDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService()), ($this->services['Shopware\\Core\\Content\\ImportExport\\ImportExportFactory'] ?? $this->getImportExportFactoryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\ImportExport\ImportExportFactory' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\ImportExportFactory
     */
    protected function getImportExportFactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/ImportExportFactory.php';

        return $this->services['Shopware\\Core\\Content\\ImportExport\\ImportExportFactory'] = new \Shopware\Core\Content\ImportExport\ImportExportFactory(($this->privates['Shopware\\Core\\Content\\ImportExport\\Service\\ImportExportService'] ?? $this->getImportExportServiceService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['import_export_log.repository'] ?? $this->getImportExportLog_RepositoryService()), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\Processing\\Reader\\CsvReaderFactory'] ?? ($this->privates['Shopware\\Core\\Content\\ImportExport\\Processing\\Reader\\CsvReaderFactory'] = new \Shopware\Core\Content\ImportExport\Processing\Reader\CsvReaderFactory()));
        }, 1), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\Processing\\Writer\\CsvFileWriterFactory'] ?? $this->getCsvFileWriterFactoryService());
        }, 1), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\Processing\\Pipe\\PipeFactory'] ?? $this->getPipeFactoryService());
        }, 1));
    }

    /*
     * Gets the public 'Shopware\Core\Content\ImportExport\ImportExportProfileDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\ImportExportProfileDefinition
     */
    protected function getImportExportProfileDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/ImportExportProfileDefinition.php';

        $this->services['Shopware\\Core\\Content\\ImportExport\\ImportExportProfileDefinition'] = $instance = new \Shopware\Core\Content\ImportExport\ImportExportProfileDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition
     */
    protected function getMailHeaderFooterTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailHeaderFooterTranslation/MailHeaderFooterTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooterTranslation\\MailHeaderFooterTranslationDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition
     */
    protected function getMailHeaderFooterDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailHeaderFooter/MailHeaderFooterDefinition.php';

        $this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooter\\MailHeaderFooterDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition
     */
    protected function getMailTemplateMediaDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateMedia/MailTemplateMediaDefinition.php';

        $this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateMedia\\MailTemplateMediaDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateSalesChannel\MailTemplateSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateSalesChannel\MailTemplateSalesChannelDefinition
     */
    protected function getMailTemplateSalesChannelDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateSalesChannel/MailTemplateSalesChannelDefinition.php';

        $this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateSalesChannel\\MailTemplateSalesChannelDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateSalesChannel\MailTemplateSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition
     */
    protected function getMailTemplateTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateTranslation/MailTemplateTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTranslation\\MailTemplateTranslationDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition
     */
    protected function getMailTemplateTypeTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateTypeTranslation/MailTemplateTypeTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTypeTranslation\\MailTemplateTypeTranslationDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition
     */
    protected function getMailTemplateTypeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateType/MailTemplateTypeDefinition.php';

        $this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateType\\MailTemplateTypeDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Api\MailActionController' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Api\MailActionController
     */
    protected function getMailActionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Api/MailActionController.php';

        $this->services['Shopware\\Core\\Content\\MailTemplate\\Api\\MailActionController'] = $instance = new \Shopware\Core\Content\MailTemplate\Api\MailActionController(($this->privates['Shopware\\Core\\Content\\MailTemplate\\Service\\MailService'] ?? $this->getMailServiceService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Twig\\StringTemplateRenderer'] ?? $this->getStringTemplateRendererService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\MailTemplateDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\MailTemplateDefinition
     */
    protected function getMailTemplateDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/MailTemplateDefinition.php';

        $this->services['Shopware\\Core\\Content\\MailTemplate\\MailTemplateDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\MailTemplateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Service\MailSender' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Service\MailSender
     */
    protected function getMailSenderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Service/MailSender.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mailer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Service/MailerFactory.php';

        $a = ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService());

        return $this->services['Shopware\\Core\\Content\\MailTemplate\\Service\\MailSender'] = new \Shopware\Core\Content\MailTemplate\Service\MailSender((new \Shopware\Core\Content\MailTemplate\Service\MailerFactory())->create($a, ($this->services['swiftmailer.mailer.default'] ?? $this->getSwiftmailer_Mailer_DefaultService())), $a);
    }

    /*
     * Gets the public 'Shopware\Core\Content\MailTemplate\Service\MessageFactory' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Service\MessageFactory
     */
    protected function getMessageFactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Service/MessageFactory.php';

        return $this->services['Shopware\\Core\\Content\\MailTemplate\\Service\\MessageFactory'] = new \Shopware\Core\Content\MailTemplate\Service\MessageFactory(($this->services['validator'] ?? $this->getValidatorService()), ($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition
     */
    protected function getMediaDefaultFolderDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaDefaultFolder/MediaDefaultFolderDefinition.php';

        $this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaDefaultFolder\\MediaDefaultFolderDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition
     */
    protected function getMediaFolderConfigurationMediaThumbnailSizeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaFolderConfigurationMediaThumbnailSize/MediaFolderConfigurationMediaThumbnailSizeDefinition.php';

        $this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfigurationMediaThumbnailSize\\MediaFolderConfigurationMediaThumbnailSizeDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition
     */
    protected function getMediaFolderConfigurationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaFolderConfiguration/MediaFolderConfigurationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfiguration\\MediaFolderConfigurationDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition
     */
    protected function getMediaFolderDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaFolder/MediaFolderDefinition.php';

        $this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolder\\MediaFolderDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition
     */
    protected function getMediaTagDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaTag/MediaTagDefinition.php';

        $this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaTag\\MediaTagDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition
     */
    protected function getMediaThumbnailSizeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaThumbnailSize/MediaThumbnailSizeDefinition.php';

        $this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnailSize\\MediaThumbnailSizeDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition
     */
    protected function getMediaThumbnailDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnail\\MediaThumbnailDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition
     */
    protected function getMediaTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaTranslation/MediaTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaTranslation\\MediaTranslationDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Api\MediaFolderController' shared service.
     *
     * @return \Shopware\Core\Content\Media\Api\MediaFolderController
     */
    protected function getMediaFolderControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Api/MediaFolderController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/MediaFolderService.php';

        $this->services['Shopware\\Core\\Content\\Media\\Api\\MediaFolderController'] = $instance = new \Shopware\Core\Content\Media\Api\MediaFolderController(new \Shopware\Core\Content\Media\MediaFolderService(($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), ($this->services['media_folder.repository'] ?? $this->getMediaFolder_RepositoryService()), ($this->services['media_folder_configuration.repository'] ?? $this->getMediaFolderConfiguration_RepositoryService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\Api\MediaUploadController' shared service.
     *
     * @return \Shopware\Core\Content\Media\Api\MediaUploadController
     */
    protected function getMediaUploadControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Api/MediaUploadController.php';

        $this->services['Shopware\\Core\\Content\\Media\\Api\\MediaUploadController'] = $instance = new \Shopware\Core\Content\Media\Api\MediaUploadController(($this->privates['Shopware\\Core\\Content\\Media\\MediaService'] ?? $this->getMediaServiceService()), ($this->services['Shopware\\Core\\Content\\Media\\File\\FileSaver'] ?? $this->getFileSaverService()), ($this->privates['Shopware\\Core\\Content\\Media\\File\\FileNameProvider'] ?? $this->getFileNameProviderService()), ($this->services['Shopware\\Core\\Content\\Media\\MediaDefinition'] ?? $this->getMediaDefinitionService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\File\FileSaver' shared service.
     *
     * @return \Shopware\Core\Content\Media\File\FileSaver
     */
    protected function getFileSaverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/File/FileSaver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Metadata/MetadataLoader.php';

        return $this->services['Shopware\\Core\\Content\\Media\\File\\FileSaver'] = new \Shopware\Core\Content\Media\File\FileSaver(($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), ($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService()), ($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()), ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\UrlGeneratorInterface'] ?? $this->getUrlGeneratorInterfaceService()), ($this->privates['Shopware\\Core\\Content\\Media\\Thumbnail\\ThumbnailService'] ?? $this->getThumbnailServiceService()), new \Shopware\Core\Content\Media\Metadata\MetadataLoader(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\Media\\Metadata\\MetadataLoader\\ImageMetadataLoader'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\Metadata\\MetadataLoader\\ImageMetadataLoader'] = new \Shopware\Core\Content\Media\Metadata\MetadataLoader\ImageMetadataLoader()));
        }, 1)), ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\TypeDetector'] ?? $this->getTypeDetectorService()), ($this->services['message_bus'] ?? $this->getMessageBusService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), $this->parameters['shopware.filesystem.allowed_extensions']);
    }

    /*
     * Gets the public 'Shopware\Core\Content\Media\MediaDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\MediaDefinition
     */
    protected function getMediaDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Media\\MediaDefinition'] = $instance = new \Shopware\Core\Content\Media\MediaDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition
     */
    protected function getNewsletterRecipientTagDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Newsletter/Aggregate/NewsletterRecipientTag/NewsletterRecipientTagDefinition.php';

        $this->services['Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipientTag\\NewsletterRecipientTagDefinition'] = $instance = new \Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition
     */
    protected function getNewsletterRecipientDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Newsletter/Aggregate/NewsletterRecipient/NewsletterRecipientDefinition.php';

        $this->services['Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipient\\NewsletterRecipientDefinition'] = $instance = new \Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterController' shared service.
     *
     * @return \Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterController
     */
    protected function getSalesChannelNewsletterControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Newsletter/SalesChannel/SalesChannelNewsletterController.php';

        $this->services['Shopware\\Core\\Content\\Newsletter\\SalesChannel\\SalesChannelNewsletterController'] = $instance = new \Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterController(($this->privates['Shopware\\Core\\Content\\Newsletter\\NewsletterSubscriptionService'] ?? $this->getNewsletterSubscriptionServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\ProductExport\Api\ProductExportController' shared service.
     *
     * @return \Shopware\Core\Content\ProductExport\Api\ProductExportController
     */
    protected function getProductExportControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Api/ProductExportController.php';

        $this->services['Shopware\\Core\\Content\\ProductExport\\Api\\ProductExportController'] = $instance = new \Shopware\Core\Content\ProductExport\Api\ProductExportController(($this->services['sales_channel_domain.repository'] ?? $this->getSalesChannelDomain_RepositoryService()), ($this->services['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportGenerator'] ?? $this->getProductExportGeneratorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\ProductExport\ProductExportDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ProductExport\ProductExportDefinition
     */
    protected function getProductExportDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/ProductExportDefinition.php';

        $this->services['Shopware\\Core\\Content\\ProductExport\\ProductExportDefinition'] = $instance = new \Shopware\Core\Content\ProductExport\ProductExportDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\ProductExport\Service\ProductExportGenerator' shared service.
     *
     * @return \Shopware\Core\Content\ProductExport\Service\ProductExportGenerator
     */
    protected function getProductExportGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportGenerator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportValidator.php';

        return $this->services['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportGenerator'] = new \Shopware\Core\Content\ProductExport\Service\ProductExportGenerator(($this->services['Shopware\\Core\\Content\\ProductStream\\Service\\ProductStreamBuilder'] ?? $this->getProductStreamBuilderService()), ($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportRenderer'] ?? $this->getProductExportRendererService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), new \Shopware\Core\Content\ProductExport\Service\ProductExportValidator(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\ProductExport\\Validator\\XmlValidator'] ?? ($this->privates['Shopware\\Core\\Content\\ProductExport\\Validator\\XmlValidator'] = new \Shopware\Core\Content\ProductExport\Validator\XmlValidator()));
        }, 1)), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextService'] ?? $this->getSalesChannelContextServiceService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextPersister'] ?? $this->getSalesChannelContextPersisterService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), 100);
    }

    /*
     * Gets the public 'Shopware\Core\Content\ProductExport\Service\ProductExporter' shared service.
     *
     * @return \Shopware\Core\Content\ProductExport\Service\ProductExporter
     */
    protected function getProductExporterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExporterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExporter.php';

        return $this->services['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExporter'] = new \Shopware\Core\Content\ProductExport\Service\ProductExporter(($this->services['product_export.repository'] ?? $this->getProductExport_RepositoryService()), ($this->services['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportGenerator'] ?? $this->getProductExportGeneratorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportFileHandler'] ?? $this->getProductExportFileHandlerService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition
     */
    protected function getProductStreamFilterDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductStream/Aggregate/ProductStreamFilter/ProductStreamFilterDefinition.php';

        $this->services['Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamFilter\\ProductStreamFilterDefinition'] = $instance = new \Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition
     */
    protected function getProductStreamTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductStream/Aggregate/ProductStreamTranslation/ProductStreamTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamTranslation\\ProductStreamTranslationDefinition'] = $instance = new \Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\ProductStream\ProductStreamDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ProductStream\ProductStreamDefinition
     */
    protected function getProductStreamDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductStream/ProductStreamDefinition.php';

        $this->services['Shopware\\Core\\Content\\ProductStream\\ProductStreamDefinition'] = $instance = new \Shopware\Core\Content\ProductStream\ProductStreamDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\ProductStream\Service\ProductStreamBuilder' shared service.
     *
     * @return \Shopware\Core\Content\ProductStream\Service\ProductStreamBuilder
     */
    protected function getProductStreamBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductStream/Service/ProductStreamBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductStream/Service/ProductStreamBuilder.php';

        return $this->services['Shopware\\Core\\Content\\ProductStream\\Service\\ProductStreamBuilder'] = new \Shopware\Core\Content\ProductStream\Service\ProductStreamBuilder(($this->services['product_stream.repository'] ?? $this->getProductStream_RepositoryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition
     */
    protected function getProductCategoryTreeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductCategoryTree/ProductCategoryTreeDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategoryTree\\ProductCategoryTreeDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition
     */
    protected function getProductCategoryDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductCategory/ProductCategoryDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategory\\ProductCategoryDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition
     */
    protected function getProductConfiguratorSettingDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductConfiguratorSetting/ProductConfiguratorSettingDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductConfiguratorSetting\\ProductConfiguratorSettingDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition
     */
    protected function getProductCrossSellingTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductCrossSellingTranslation/ProductCrossSellingTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSellingTranslation\\ProductCrossSellingTranslationDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition
     */
    protected function getProductCrossSellingDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductCrossSelling/ProductCrossSellingDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSelling\\ProductCrossSellingDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition
     */
    protected function getProductKeywordDictionaryDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductKeywordDictionary/ProductKeywordDictionaryDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductKeywordDictionary\\ProductKeywordDictionaryDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition
     */
    protected function getProductManufacturerTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductManufacturerTranslation/ProductManufacturerTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturerTranslation\\ProductManufacturerTranslationDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition
     */
    protected function getProductManufacturerDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductManufacturer/ProductManufacturerDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturer\\ProductManufacturerDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition
     */
    protected function getProductMediaDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductMedia/ProductMediaDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductMedia\\ProductMediaDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition
     */
    protected function getProductOptionDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductOption/ProductOptionDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductOption\\ProductOptionDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition
     */
    protected function getProductPriceDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductPrice/ProductPriceDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductPrice\\ProductPriceDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition
     */
    protected function getProductPropertyDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductProperty/ProductPropertyDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductProperty\\ProductPropertyDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition
     */
    protected function getProductReviewDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductReview/ProductReviewDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductReview\\ProductReviewDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition
     */
    protected function getProductSearchKeywordDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductSearchKeyword/ProductSearchKeywordDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductSearchKeyword\\ProductSearchKeywordDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition
     */
    protected function getProductTagDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductTag/ProductTagDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductTag\\ProductTagDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition
     */
    protected function getProductTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductTranslation/ProductTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductTranslation\\ProductTranslationDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition
     */
    protected function getProductVisibilityDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductVisibility/ProductVisibilityDefinition.php';

        $this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductVisibility\\ProductVisibilityDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\Api\ProductActionController' shared service.
     *
     * @return \Shopware\Core\Content\Product\Api\ProductActionController
     */
    protected function getProductActionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Api/ProductActionController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Util/VariantCombinationLoader.php';

        $this->services['Shopware\\Core\\Content\\Product\\Api\\ProductActionController'] = $instance = new \Shopware\Core\Content\Product\Api\ProductActionController(new \Shopware\Core\Content\Product\Util\VariantCombinationLoader(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\ProductDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\ProductDefinition
     */
    protected function getProductDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] = $instance = new \Shopware\Core\Content\Product\ProductDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\SalesChannel\CrossSelling\SalesChannelCrossSellingController' shared service.
     *
     * @return \Shopware\Core\Content\Product\SalesChannel\CrossSelling\SalesChannelCrossSellingController
     */
    protected function getSalesChannelCrossSellingControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/CrossSelling/SalesChannelCrossSellingController.php';

        $this->services['Shopware\\Core\\Content\\Product\\SalesChannel\\CrossSelling\\SalesChannelCrossSellingController'] = $instance = new \Shopware\Core\Content\Product\SalesChannel\CrossSelling\SalesChannelCrossSellingController(($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()), ($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSelling\\ProductCrossSellingDefinition'] ?? $this->getProductCrossSellingDefinitionService()), ($this->services['Shopware\\Core\\Content\\ProductStream\\Service\\ProductStreamBuilder'] ?? $this->getProductStreamBuilderService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition
     */
    protected function getSalesChannelProductDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductDefinition'] = $instance = new \Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Product\SearchKeyword\ProductSearchKeywordIndexer' shared service.
     *
     * @return \Shopware\Elasticsearch\Product\ProductKeywordIndexer
     */
    protected function getProductSearchKeywordIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Product/ProductKeywordIndexer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SearchKeyword/ProductSearchKeywordIndexer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SearchKeyword/ProductSearchKeywordAnalyzerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SearchKeyword/ProductSearchKeywordAnalyzer.php';

        return $this->services['Shopware\\Core\\Content\\Product\\SearchKeyword\\ProductSearchKeywordIndexer'] = new \Shopware\Elasticsearch\Product\ProductKeywordIndexer(new \Shopware\Core\Content\Product\SearchKeyword\ProductSearchKeywordIndexer(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['language.repository'] ?? $this->getLanguage_RepositoryService()), ($this->services['product.repository'] ?? $this->getProduct_RepositoryService()), new \Shopware\Core\Content\Product\SearchKeyword\ProductSearchKeywordAnalyzer(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\Tokenizer'] ?? ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\Tokenizer'] = new \Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Tokenizer()))), ($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductSearchKeyword\\ProductSearchKeywordDefinition'] ?? $this->getProductSearchKeywordDefinitionService()), ($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductKeywordDictionary\\ProductKeywordDictionaryDefinition'] ?? $this->getProductKeywordDictionaryDefinitionService())), ($this->services['Shopware\\Elasticsearch\\Framework\\ElasticsearchHelper'] ?? $this->getElasticsearchHelperService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition
     */
    protected function getPropertyGroupOptionTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Property/Aggregate/PropertyGroupOptionTranslation/PropertyGroupOptionTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOptionTranslation\\PropertyGroupOptionTranslationDefinition'] = $instance = new \Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition
     */
    protected function getPropertyGroupOptionDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Property/Aggregate/PropertyGroupOption/PropertyGroupOptionDefinition.php';

        $this->services['Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOption\\PropertyGroupOptionDefinition'] = $instance = new \Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition
     */
    protected function getPropertyGroupTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Property/Aggregate/PropertyGroupTranslation/PropertyGroupTranslationDefinition.php';

        $this->services['Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupTranslation\\PropertyGroupTranslationDefinition'] = $instance = new \Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Property\PropertyGroupDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Property\PropertyGroupDefinition
     */
    protected function getPropertyGroupDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Property/PropertyGroupDefinition.php';

        $this->services['Shopware\\Core\\Content\\Property\\PropertyGroupDefinition'] = $instance = new \Shopware\Core\Content\Property\PropertyGroupDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition
     */
    protected function getRuleConditionDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Rule/Aggregate/RuleCondition/RuleConditionDefinition.php';

        $this->services['Shopware\\Core\\Content\\Rule\\Aggregate\\RuleCondition\\RuleConditionDefinition'] = $instance = new \Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Rule\RuleDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Rule\RuleDefinition
     */
    protected function getRuleDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Rule\\RuleDefinition'] = $instance = new \Shopware\Core\Content\Rule\RuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\Api\SeoActionController' shared service.
     *
     * @return \Shopware\Core\Content\Seo\Api\SeoActionController
     */
    protected function getSeoActionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/Api/SeoActionController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/Validation/SeoUrlDataValidationFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/Validation/SeoUrlValidationService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/Validation/SeoUrlValidationFactory.php';

        $a = ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService());

        $this->services['Shopware\\Core\\Content\\Seo\\Api\\SeoActionController'] = $instance = new \Shopware\Core\Content\Seo\Api\SeoActionController(($this->privates['Shopware\\Core\\Content\\Seo\\SeoUrlGenerator'] ?? $this->getSeoUrlGeneratorService()), ($this->privates['Shopware\\Core\\Content\\Seo\\SeoUrlPersister'] ?? $this->getSeoUrlPersisterService()), $a, ($this->privates['Shopware\\Core\\Content\\Seo\\SeoUrlRoute\\SeoUrlRouteRegistry'] ?? $this->getSeoUrlRouteRegistryService()), new \Shopware\Core\Content\Seo\Validation\SeoUrlValidationFactory(), ($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\RequestCriteriaBuilder'] ?? $this->getRequestCriteriaBuilderService()), $a);

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\DataAbstractionLayer\Indexing\SeoUrlIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Seo\DataAbstractionLayer\Indexing\SeoUrlIndexer
     */
    protected function getSeoUrlIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/DataAbstractionLayer/Indexing/SeoUrlIndexer.php';

        return $this->services['Shopware\\Core\\Content\\Seo\\DataAbstractionLayer\\Indexing\\SeoUrlIndexer'] = new \Shopware\Core\Content\Seo\DataAbstractionLayer\Indexing\SeoUrlIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Content\\Seo\\SeoUrlGenerator'] ?? $this->getSeoUrlGeneratorService()), ($this->privates['Shopware\\Core\\Content\\Seo\\SeoUrlPersister'] ?? $this->getSeoUrlPersisterService()), ($this->privates['Shopware\\Core\\Content\\Seo\\SeoUrlRoute\\SeoUrlRouteRegistry'] ?? $this->getSeoUrlRouteRegistryService()), ($this->services['language.repository'] ?? $this->getLanguage_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->services['message_bus'] ?? $this->getMessageBusService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\Entity\Dbal\SeoUrlAssociationFieldResolver' shared service.
     *
     * @return \Shopware\Core\Content\Seo\Entity\Dbal\SeoUrlAssociationFieldResolver
     */
    protected function getSeoUrlAssociationFieldResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldResolver/FieldResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/Entity/Dbal/SeoUrlAssociationFieldResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/Entity/Dbal/SeoUrlJoinBuilder.php';

        return $this->services['Shopware\\Core\\Content\\Seo\\Entity\\Dbal\\SeoUrlAssociationFieldResolver'] = new \Shopware\Core\Content\Seo\Entity\Dbal\SeoUrlAssociationFieldResolver(new \Shopware\Core\Content\Seo\Entity\Dbal\SeoUrlJoinBuilder());
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\Entity\Serializer\SeoUrlFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Content\Seo\Entity\Serializer\SeoUrlFieldSerializer
     */
    protected function getSeoUrlFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/OneToManyAssociationFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/Entity/Serializer/SeoUrlFieldSerializer.php';

        return $this->services['Shopware\\Core\\Content\\Seo\\Entity\\Serializer\\SeoUrlFieldSerializer'] = new \Shopware\Core\Content\Seo\Entity\Serializer\SeoUrlFieldSerializer(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\WriteCommandExtractor'] ?? $this->getWriteCommandExtractorService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\MainCategory\MainCategoryDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Seo\MainCategory\MainCategoryDefinition
     */
    protected function getMainCategoryDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/MainCategory/MainCategoryDefinition.php';

        $this->services['Shopware\\Core\\Content\\Seo\\MainCategory\\MainCategoryDefinition'] = $instance = new \Shopware\Core\Content\Seo\MainCategory\MainCategoryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition
     */
    protected function getSalesChannelMainCategoryDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/MainCategory/MainCategoryDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/MainCategory/SalesChannel/SalesChannelMainCategoryDefinition.php';

        $this->services['Shopware\\Core\\Content\\Seo\\MainCategory\\SalesChannel\\SalesChannelMainCategoryDefinition'] = $instance = new \Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\SeoResolver' shared service.
     *
     * @return \Shopware\Core\Content\Seo\SeoResolver
     */
    protected function getSeoResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoResolver.php';

        return $this->services['Shopware\\Core\\Content\\Seo\\SeoResolver'] = new \Shopware\Core\Content\Seo\SeoResolver(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['cache.object'] ?? $this->getCache_ObjectService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))));
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\SeoUrlPlaceholderHandlerInterface' shared service.
     *
     * @return \Shopware\Core\Content\Seo\SeoUrlPlaceholderHandler
     */
    protected function getSeoUrlPlaceholderHandlerInterfaceService()
    {
        return $this->services['Shopware\\Core\\Content\\Seo\\SeoUrlPlaceholderHandlerInterface'] = new \Shopware\Core\Content\Seo\SeoUrlPlaceholderHandler(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['router.default'] ?? $this->getRouter_DefaultService()), ($this->services['sales_channel.seo_url.repository'] ?? $this->getSalesChannel_SeoUrl_RepositoryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition
     */
    protected function getSeoUrlTemplateDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrlTemplate/SeoUrlTemplateDefinition.php';

        $this->services['Shopware\\Core\\Content\\Seo\\SeoUrlTemplate\\SeoUrlTemplateDefinition'] = $instance = new \Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition
     */
    protected function getSalesChannelSeoUrlDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Seo\\SeoUrl\\SalesChannel\\SalesChannelSeoUrlDefinition'] = $instance = new \Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Content\Seo\SeoUrl\SeoUrlDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Seo\SeoUrl\SeoUrlDefinition
     */
    protected function getSeoUrlDefinitionService()
    {
        $this->services['Shopware\\Core\\Content\\Seo\\SeoUrl\\SeoUrlDefinition'] = $instance = new \Shopware\Core\Content\Seo\SeoUrl\SeoUrlDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Adapter\Asset\AssetPackageService' shared service.
     *
     * @return \Shopware\Core\Framework\Adapter\Asset\AssetPackageService
     */
    protected function getAssetPackageServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Asset/AssetPackageService.php';

        return $this->services['Shopware\\Core\\Framework\\Adapter\\Asset\\AssetPackageService'] = new \Shopware\Core\Framework\Adapter\Asset\AssetPackageService(($this->privates['assets.packages'] ?? $this->getAssets_PackagesService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Adapter\Cache\CacheIdLoader' shared service.
     *
     * @return \Shopware\Core\Framework\Adapter\Cache\CacheIdLoader
     */
    protected function getCacheIdLoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Cache/CacheIdLoader.php';

        return $this->services['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheIdLoader'] = new \Shopware\Core\Framework\Adapter\Cache\CacheIdLoader(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Adapter\Twig\TemplateIterator' shared service.
     *
     * @return \Shopware\Core\Framework\Adapter\Twig\TemplateIterator
     */
    protected function getTemplateIteratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/TemplateIterator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bundle/TemplateIterator.php';

        return $this->services['Shopware\\Core\\Framework\\Adapter\\Twig\\TemplateIterator'] = new \Shopware\Core\Framework\Adapter\Twig\TemplateIterator(new \Symfony\Bundle\TwigBundle\TemplateIterator(($this->services['kernel'] ?? $this->get('kernel', 1)), (\dirname(__DIR__, 4).'/src'), [(\dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Resources/views/Email') => 'email'], (\dirname(__DIR__, 4).'/templates')), $this->parameters['kernel.bundles']);
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Acl\Resource\AclResourceDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Acl\Resource\AclResourceDefinition
     */
    protected function getAclResourceDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Acl/Resource/AclResourceDefinition.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Acl\\Resource\\AclResourceDefinition'] = $instance = new \Shopware\Core\Framework\Api\Acl\Resource\AclResourceDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition
     */
    protected function getAclRoleDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Acl/Role/AclRoleDefinition.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclRoleDefinition'] = $instance = new \Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition
     */
    protected function getAclUserRoleDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Acl/Role/AclUserRoleDefinition.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclUserRoleDefinition'] = $instance = new \Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\AccessKeyController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\AccessKeyController
     */
    protected function getAccessKeyControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/AccessKeyController.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\AccessKeyController'] = $instance = new \Shopware\Core\Framework\Api\Controller\AccessKeyController();

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\ApiController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\ApiController
     */
    protected function getApiControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/ApiController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/CompositeEntitySearcher.php';

        $a = ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService());
        $b = ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService());

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\ApiController'] = $instance = new \Shopware\Core\Framework\Api\Controller\ApiController($a, ($this->services['serializer'] ?? $this->getSerializerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\RequestCriteriaBuilder'] ?? $this->getRequestCriteriaBuilderService()), new \Shopware\Core\Framework\DataAbstractionLayer\Search\CompositeEntitySearcher($a, $b, new RewindableGenerator(function () {
            yield 0 => ($this->services['Shopware\\Core\\Checkout\\Order\\OrderDefinition'] ?? $this->getOrderDefinitionService());
            yield 1 => ($this->services['Shopware\\Core\\Checkout\\Customer\\CustomerDefinition'] ?? $this->getCustomerDefinitionService());
            yield 2 => ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService());
            yield 3 => ($this->services['Shopware\\Core\\Content\\Category\\CategoryDefinition'] ?? $this->getCategoryDefinitionService());
            yield 4 => ($this->services['Shopware\\Core\\Content\\Media\\MediaDefinition'] ?? $this->getMediaDefinitionService());
            yield 5 => ($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturer\\ProductManufacturerDefinition'] ?? $this->getProductManufacturerDefinitionService());
            yield 6 => ($this->services['Shopware\\Core\\System\\Tag\\TagDefinition'] ?? $this->getTagDefinitionService());
            yield 7 => ($this->services['Shopware\\Core\\Content\\Cms\\CmsPageDefinition'] ?? $this->getCmsPageDefinitionService());
        }, 8)), $b);

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\AuthController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\AuthController
     */
    protected function getAuthControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/AuthController.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\AuthController'] = $instance = new \Shopware\Core\Framework\Api\Controller\AuthController(($this->privates['shopware.api.authorization_server'] ?? $this->getShopware_Api_AuthorizationServerService()), ($this->privates['Symfony\\Bridge\\PsrHttpMessage\\Factory\\PsrHttpFactory'] ?? $this->getPsrHttpFactoryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\CacheController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\CacheController
     */
    protected function getCacheControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/CacheController.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\CacheController'] = $instance = new \Shopware\Core\Framework\Api\Controller\CacheController(($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\FallbackController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\FallbackController
     */
    protected function getFallbackControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/FallbackController.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\FallbackController'] = $instance = new \Shopware\Core\Framework\Api\Controller\FallbackController();

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\IndexingController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\IndexingController
     */
    protected function getIndexingControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/IndexingController.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\IndexingController'] = $instance = new \Shopware\Core\Framework\Api\Controller\IndexingController(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\IndexerRegistryInterface'] ?? $this->getIndexerRegistryInterfaceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\InfoController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\InfoController
     */
    protected function getInfoControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/InfoController.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\InfoController'] = $instance = new \Shopware\Core\Framework\Api\Controller\InfoController(($this->privates['Shopware\\Core\\Framework\\Api\\ApiDefinition\\DefinitionService'] ?? $this->getDefinitionServiceService()), ($this->privates['parameter_bag'] ?? ($this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this))), ($this->services['Shopware\\Core\\Framework\\Event\\BusinessEventRegistry'] ?? $this->getBusinessEventRegistryService()), ($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->privates['assets.packages'] ?? $this->getAssets_PackagesService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\SalesChannelProxyController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\SalesChannelProxyController
     */
    protected function getSalesChannelProxyControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/SalesChannelProxyController.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\SalesChannelProxyController'] = $instance = new \Shopware\Core\Framework\Api\Controller\SalesChannelProxyController(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Routing\\SalesChannelRequestContextResolver'] ?? $this->getSalesChannelRequestContextResolverService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\SyncController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\SyncController
     */
    protected function getSyncControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/SyncController.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\SyncController'] = $instance = new \Shopware\Core\Framework\Api\Controller\SyncController(($this->services['Shopware\\Core\\Framework\\Api\\Sync\\SyncService'] ?? $this->getSyncServiceService()), ($this->services['serializer'] ?? $this->getSerializerService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Controller\UserController' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Controller\UserController
     */
    protected function getUserControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Controller/UserController.php';

        $this->services['Shopware\\Core\\Framework\\Api\\Controller\\UserController'] = $instance = new \Shopware\Core\Framework\Api\Controller\UserController(($this->services['user.repository'] ?? $this->getUser_RepositoryService()), ($this->services['Shopware\\Core\\System\\User\\UserDefinition'] ?? $this->getUserDefinitionService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Api\Sync\SyncService' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Sync\SyncService
     */
    protected function getSyncServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Sync/SyncServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Sync/SyncService.php';

        return $this->services['Shopware\\Core\\Framework\\Api\\Sync\\SyncService'] = new \Shopware\Core\Framework\Api\Sync\SyncService(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator
     */
    protected function getEntityCacheKeyGeneratorService()
    {
        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483');
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityHydrator' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityHydrator
     */
    protected function getEntityHydratorService()
    {
        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityHydrator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityHydrator();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\ConfigJsonFieldAccessorBuilder' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\ConfigJsonFieldAccessorBuilder
     */
    protected function getConfigJsonFieldAccessorBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/FieldAccessorBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/JsonFieldAccessorBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/ConfigJsonFieldAccessorBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\ConfigJsonFieldAccessorBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\ConfigJsonFieldAccessorBuilder(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\CustomFieldsAccessorBuilder' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\CustomFieldsAccessorBuilder
     */
    protected function getCustomFieldsAccessorBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/FieldAccessorBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/JsonFieldAccessorBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/CustomFieldsAccessorBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\CustomFieldsAccessorBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\CustomFieldsAccessorBuilder(($this->privates['Shopware\\Core\\System\\CustomField\\CustomFieldService'] ?? $this->getCustomFieldServiceService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\DefaultFieldAccessorBuilder' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\DefaultFieldAccessorBuilder
     */
    protected function getDefaultFieldAccessorBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/FieldAccessorBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/DefaultFieldAccessorBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\DefaultFieldAccessorBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\DefaultFieldAccessorBuilder();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\JsonFieldAccessorBuilder' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\JsonFieldAccessorBuilder
     */
    protected function getJsonFieldAccessorBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/FieldAccessorBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/JsonFieldAccessorBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\JsonFieldAccessorBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\JsonFieldAccessorBuilder(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\ListingPriceFieldAccessorBuilder' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\ListingPriceFieldAccessorBuilder
     */
    protected function getListingPriceFieldAccessorBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/FieldAccessorBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/ListingPriceFieldAccessorBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/PriceFieldAccessorBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\ListingPriceFieldAccessorBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\ListingPriceFieldAccessorBuilder(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\PriceFieldAccessorBuilder'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\PriceFieldAccessorBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\PriceFieldAccessorBuilder())));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\PriceFieldAccessorBuilder' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\PriceFieldAccessorBuilder
     */
    protected function getPriceFieldAccessorBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/FieldAccessorBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldAccessorBuilder/PriceFieldAccessorBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldAccessorBuilder\\PriceFieldAccessorBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\PriceFieldAccessorBuilder();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToManyAssociationFieldResolver' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToManyAssociationFieldResolver
     */
    protected function getManyToManyAssociationFieldResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldResolver/FieldResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldResolver/ManyToManyAssociationFieldResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/JoinBuilder/ManyToManyJoinBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldResolver\\ManyToManyAssociationFieldResolver'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToManyAssociationFieldResolver(new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\JoinBuilder\ManyToManyJoinBuilder(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] ?? $this->getEntityDefinitionQueryHelperService())));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToOneAssociationFieldResolver' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToOneAssociationFieldResolver
     */
    protected function getManyToOneAssociationFieldResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldResolver/FieldResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldResolver/ManyToOneAssociationFieldResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/JoinBuilder/ManyToOneJoinBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldResolver\\ManyToOneAssociationFieldResolver'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToOneAssociationFieldResolver(new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\JoinBuilder\ManyToOneJoinBuilder(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] ?? $this->getEntityDefinitionQueryHelperService())));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\OneToManyAssociationFieldResolver' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\OneToManyAssociationFieldResolver
     */
    protected function getOneToManyAssociationFieldResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldResolver/FieldResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldResolver/OneToManyAssociationFieldResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/JoinBuilder/OneToManyJoinBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldResolver\\OneToManyAssociationFieldResolver'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\OneToManyAssociationFieldResolver(new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\JoinBuilder\OneToManyJoinBuilder(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] ?? $this->getEntityDefinitionQueryHelperService())));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\TranslationFieldResolver' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\TranslationFieldResolver
     */
    protected function getTranslationFieldResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldResolver/FieldResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/FieldResolver/TranslationFieldResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/JoinBuilder/TranslatedJoinBuilder.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\FieldResolver\\TranslationFieldResolver'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\TranslationFieldResolver(new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\JoinBuilder\TranslatedJoinBuilder());
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry
     */
    protected function getDefinitionInstanceRegistryService()
    {
        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] = new \Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry($this, ['log_entry' => 'Shopware\\Core\\Framework\\Log\\LogEntryDefinition', 'acl_resource' => 'Shopware\\Core\\Framework\\Api\\Acl\\Resource\\AclResourceDefinition', 'acl_role' => 'Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclRoleDefinition', 'user_role_acl' => 'Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclUserRoleDefinition', 'custom_field' => 'Shopware\\Core\\System\\CustomField\\CustomFieldDefinition', 'custom_field_set' => 'Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSet\\CustomFieldSetDefinition', 'custom_field_set_relation' => 'Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSetRelation\\CustomFieldSetRelationDefinition', 'version' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\VersionDefinition', 'version_commit' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommit\\VersionCommitDefinition', 'version_commit_data' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommitData\\VersionCommitDataDefinition', 'event_action' => 'Shopware\\Core\\Framework\\Event\\EventAction\\EventActionDefinition', 'dead_message' => 'Shopware\\Core\\Framework\\MessageQueue\\DeadMessage\\DeadMessageDefinition', 'message_queue_stats' => 'Shopware\\Core\\Framework\\MessageQueue\\MessageQueueStatsDefinition', 'plugin' => 'Shopware\\Core\\Framework\\Plugin\\PluginDefinition', 'plugin_translation' => 'Shopware\\Core\\Framework\\Plugin\\Aggregate\\PluginTranslation\\PluginTranslationDefinition', 'scheduled_task' => 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\ScheduledTaskDefinition', 'language' => 'Shopware\\Core\\System\\Language\\LanguageDefinition', 'seo_url' => 'Shopware\\Core\\Content\\Seo\\SeoUrl\\SeoUrlDefinition', 'seo_url_template' => 'Shopware\\Core\\Content\\Seo\\SeoUrlTemplate\\SeoUrlTemplateDefinition', 'main_category' => 'Shopware\\Core\\Content\\Seo\\MainCategory\\MainCategoryDefinition', 'sales_channel' => 'Shopware\\Core\\System\\SalesChannel\\SalesChannelDefinition', 'sales_channel_translation' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTranslation\\SalesChannelTranslationDefinition', 'sales_channel_country' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCountry\\SalesChannelCountryDefinition', 'sales_channel_currency' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCurrency\\SalesChannelCurrencyDefinition', 'sales_channel_domain' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelDomain\\SalesChannelDomainDefinition', 'sales_channel_language' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelLanguage\\SalesChannelLanguageDefinition', 'sales_channel_payment_method' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelPaymentMethod\\SalesChannelPaymentMethodDefinition', 'sales_channel_shipping_method' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelShippingMethod\\SalesChannelShippingMethodDefinition', 'sales_channel_type' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelType\\SalesChannelTypeDefinition', 'sales_channel_type_translation' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTypeTranslation\\SalesChannelTypeTranslationDefinition', 'country' => 'Shopware\\Core\\System\\Country\\CountryDefinition', 'country_state' => 'Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\CountryStateDefinition', 'country_state_translation' => 'Shopware\\Core\\System\\Country\\Aggregate\\CountryStateTranslation\\CountryStateTranslationDefinition', 'country_translation' => 'Shopware\\Core\\System\\Country\\Aggregate\\CountryTranslation\\CountryTranslationDefinition', 'currency' => 'Shopware\\Core\\System\\Currency\\CurrencyDefinition', 'currency_translation' => 'Shopware\\Core\\System\\Currency\\Aggregate\\CurrencyTranslation\\CurrencyTranslationDefinition', 'locale' => 'Shopware\\Core\\System\\Locale\\LocaleDefinition', 'locale_translation' => 'Shopware\\Core\\System\\Locale\\Aggregate\\LocaleTranslation\\LocaleTranslationDefinition', 'snippet_set' => 'Shopware\\Core\\System\\Snippet\\Aggregate\\SnippetSet\\SnippetSetDefinition', 'snippet' => 'Shopware\\Core\\System\\Snippet\\SnippetDefinition', 'salutation' => 'Shopware\\Core\\System\\Salutation\\SalutationDefinition', 'salutation_translation' => 'Shopware\\Core\\System\\Salutation\\Aggregate\\SalutationTranslation\\SalutationTranslationDefinition', 'tax' => 'Shopware\\Core\\System\\Tax\\TaxDefinition', 'tax_rule' => 'Shopware\\Core\\System\\Tax\\Aggregate\\TaxRule\\TaxRuleDefinition', 'tax_rule_type' => 'Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleType\\TaxRuleTypeDefinition', 'tax_rule_type_translation' => 'Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleTypeTranslation\\TaxRuleTypeTranslationDefinition', 'unit' => 'Shopware\\Core\\System\\Unit\\UnitDefinition', 'unit_translation' => 'Shopware\\Core\\System\\Unit\\Aggregate\\UnitTranslation\\UnitTranslationDefinition', 'user' => 'Shopware\\Core\\System\\User\\UserDefinition', 'user_access_key' => 'Shopware\\Core\\System\\User\\Aggregate\\UserAccessKey\\UserAccessKeyDefinition', 'user_recovery' => 'Shopware\\Core\\System\\User\\Aggregate\\UserRecovery\\UserRecoveryDefinition', 'integration' => 'Shopware\\Core\\System\\Integration\\IntegrationDefinition', 'state_machine' => 'Shopware\\Core\\System\\StateMachine\\StateMachineDefinition', 'state_machine_translation' => 'Shopware\\Core\\System\\StateMachine\\StateMachineTranslationDefinition', 'state_machine_state' => 'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateDefinition', 'state_machine_state_translation' => 'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateTranslationDefinition', 'state_machine_transition' => 'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineTransition\\StateMachineTransitionDefinition', 'state_machine_history' => 'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineHistory\\StateMachineHistoryDefinition', 'system_config' => 'Shopware\\Core\\System\\SystemConfig\\SystemConfigDefinition', 'number_range' => 'Shopware\\Core\\System\\NumberRange\\NumberRangeDefinition', 'number_range_sales_channel' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeSalesChannel\\NumberRangeSalesChannelDefinition', 'number_range_state' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeState\\NumberRangeStateDefinition', 'number_range_type' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeType\\NumberRangeTypeDefinition', 'number_range_type_translation' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTypeTranslation\\NumberRangeTypeTranslationDefinition', 'number_range_translation' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTranslation\\NumberRangeTranslationDefinition', 'tag' => 'Shopware\\Core\\System\\Tag\\TagDefinition', 'category' => 'Shopware\\Core\\Content\\Category\\CategoryDefinition', 'category_translation' => 'Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTranslation\\CategoryTranslationDefinition', 'category_tag' => 'Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTag\\CategoryTagDefinition', 'media' => 'Shopware\\Core\\Content\\Media\\MediaDefinition', 'media_default_folder' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaDefaultFolder\\MediaDefaultFolderDefinition', 'media_thumbnail' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnail\\MediaThumbnailDefinition', 'media_translation' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaTranslation\\MediaTranslationDefinition', 'media_folder' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolder\\MediaFolderDefinition', 'media_thumbnail_size' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnailSize\\MediaThumbnailSizeDefinition', 'media_folder_configuration' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfiguration\\MediaFolderConfigurationDefinition', 'media_folder_configuration_media_thumbnail_size' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfigurationMediaThumbnailSize\\MediaFolderConfigurationMediaThumbnailSizeDefinition', 'media_tag' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaTag\\MediaTagDefinition', 'product' => 'Shopware\\Core\\Content\\Product\\ProductDefinition', 'product_category' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategory\\ProductCategoryDefinition', 'product_tag' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductTag\\ProductTagDefinition', 'product_configurator_setting' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductConfiguratorSetting\\ProductConfiguratorSettingDefinition', 'product_price' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductPrice\\ProductPriceDefinition', 'product_property' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductProperty\\ProductPropertyDefinition', 'product_search_keyword' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductSearchKeyword\\ProductSearchKeywordDefinition', 'product_keyword_dictionary' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductKeywordDictionary\\ProductKeywordDictionaryDefinition', 'product_review' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductReview\\ProductReviewDefinition', 'product_manufacturer' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturer\\ProductManufacturerDefinition', 'product_manufacturer_translation' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturerTranslation\\ProductManufacturerTranslationDefinition', 'product_media' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductMedia\\ProductMediaDefinition', 'product_translation' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductTranslation\\ProductTranslationDefinition', 'product_option' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductOption\\ProductOptionDefinition', 'product_category_tree' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategoryTree\\ProductCategoryTreeDefinition', 'product_cross_selling' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSelling\\ProductCrossSellingDefinition', 'product_cross_selling_translation' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSellingTranslation\\ProductCrossSellingTranslationDefinition', 'product_visibility' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductVisibility\\ProductVisibilityDefinition', 'delivery_time' => 'Shopware\\Core\\System\\DeliveryTime\\DeliveryTimeDefinition', 'newsletter_recipient' => 'Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipient\\NewsletterRecipientDefinition', 'newsletter_recipient_tag' => 'Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipientTag\\NewsletterRecipientTagDefinition', 'rule' => 'Shopware\\Core\\Content\\Rule\\RuleDefinition', 'rule_condition' => 'Shopware\\Core\\Content\\Rule\\Aggregate\\RuleCondition\\RuleConditionDefinition', 'product_stream' => 'Shopware\\Core\\Content\\ProductStream\\ProductStreamDefinition', 'product_stream_translation' => 'Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamTranslation\\ProductStreamTranslationDefinition', 'product_stream_filter' => 'Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamFilter\\ProductStreamFilterDefinition', 'product_export' => 'Shopware\\Core\\Content\\ProductExport\\ProductExportDefinition', 'property_group' => 'Shopware\\Core\\Content\\Property\\PropertyGroupDefinition', 'property_group_option' => 'Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOption\\PropertyGroupOptionDefinition', 'property_group_option_translation' => 'Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOptionTranslation\\PropertyGroupOptionTranslationDefinition', 'property_group_translation' => 'Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupTranslation\\PropertyGroupTranslationDefinition', 'cms_page' => 'Shopware\\Core\\Content\\Cms\\CmsPageDefinition', 'cms_page_translation' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsPageTranslation\\CmsPageTranslationDefinition', 'cms_section' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSection\\CmsSectionDefinition', 'cms_block' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsBlock\\CmsBlockDefinition', 'cms_slot' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlot\\CmsSlotDefinition', 'cms_slot_translation' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlotTranslation\\CmsSlotTranslationDefinition', 'mail_template' => 'Shopware\\Core\\Content\\MailTemplate\\MailTemplateDefinition', 'mail_template_translation' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTranslation\\MailTemplateTranslationDefinition', 'mail_template_type' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateType\\MailTemplateTypeDefinition', 'mail_template_type_translation' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTypeTranslation\\MailTemplateTypeTranslationDefinition', 'mail_template_sales_channel' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateSalesChannel\\MailTemplateSalesChannelDefinition', 'mail_template_media' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateMedia\\MailTemplateMediaDefinition', 'mail_header_footer' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooter\\MailHeaderFooterDefinition', 'mail_header_footer_translation' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooterTranslation\\MailHeaderFooterTranslationDefinition', 'delivery_time_translation' => 'Shopware\\Core\\System\\DeliveryTime\\Aggregate\\DeliveryTimeTranslation\\DeliveryTimeTranslationDefinition', 'import_export_profile' => 'Shopware\\Core\\Content\\ImportExport\\ImportExportProfileDefinition', 'import_export_log' => 'Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportLog\\ImportExportLogDefinition', 'import_export_file' => 'Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportFile\\ImportExportFileDefinition', 'customer' => 'Shopware\\Core\\Checkout\\Customer\\CustomerDefinition', 'customer_group_translation' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroupTranslation\\CustomerGroupTranslationDefinition', 'customer_address' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerAddress\\CustomerAddressDefinition', 'customer_recovery' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerRecovery\\CustomerRecoveryDefinition', 'customer_group' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroup\\CustomerGroupDefinition', 'customer_tag' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerTag\\CustomerTagDefinition', 'document' => 'Shopware\\Core\\Checkout\\Document\\DocumentDefinition', 'document_type' => 'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentType\\DocumentTypeDefinition', 'document_type_translation' => 'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentTypeTranslation\\DocumentTypeTranslationDefinition', 'document_base_config' => 'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfig\\DocumentBaseConfigDefinition', 'document_base_config_sales_channel' => 'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfigSalesChannel\\DocumentBaseConfigSalesChannelDefinition', 'order' => 'Shopware\\Core\\Checkout\\Order\\OrderDefinition', 'order_address' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderAddress\\OrderAddressDefinition', 'order_customer' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderCustomer\\OrderCustomerDefinition', 'order_delivery' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDelivery\\OrderDeliveryDefinition', 'order_delivery_position' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDeliveryPosition\\OrderDeliveryPositionDefinition', 'order_line_item' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderLineItem\\OrderLineItemDefinition', 'order_tag' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTag\\OrderTagDefinition', 'order_transaction' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionDefinition', 'payment_method' => 'Shopware\\Core\\Checkout\\Payment\\PaymentMethodDefinition', 'payment_method_translation' => 'Shopware\\Core\\Checkout\\Payment\\Aggregate\\PaymentMethodTranslation\\PaymentMethodTranslationDefinition', 'promotion' => 'Shopware\\Core\\Checkout\\Promotion\\PromotionDefinition', 'promotion_sales_channel' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSalesChannel\\PromotionSalesChannelDefinition', 'promotion_individual_code' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionIndividualCode\\PromotionIndividualCodeDefinition', 'promotion_discount' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscount\\PromotionDiscountDefinition', 'promotion_discount_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountRule\\PromotionDiscountRuleDefinition', 'promotion_setgroup' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroup\\PromotionSetGroupDefinition', 'promotion_setgroup_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroupRule\\PromotionSetGroupRuleDefinition', 'promotion_order_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionOrderRule\\PromotionOrderRuleDefinition', 'promotion_persona_customer' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaCustomer\\PromotionPersonaCustomerDefinition', 'promotion_persona_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaRule\\PromotionPersonaRuleDefinition', 'promotion_cart_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionCartRule\\PromotionCartRuleDefinition', 'promotion_translation' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionTranslation\\PromotionTranslationDefinition', 'promotion_discount_prices' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountPrice\\PromotionDiscountPriceDefinition', 'shipping_method' => 'Shopware\\Core\\Checkout\\Shipping\\ShippingMethodDefinition', 'shipping_method_tag' => 'Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTag\\ShippingMethodTagDefinition', 'shipping_method_price' => 'Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodPrice\\ShippingMethodPriceDefinition', 'shipping_method_translation' => 'Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTranslation\\ShippingMethodTranslationDefinition', 'theme' => 'Shopware\\Storefront\\Theme\\ThemeDefinition', 'theme_translation' => 'Shopware\\Storefront\\Theme\\Aggregate\\ThemeTranslationDefinition', 'theme_sales_channel' => 'Shopware\\Storefront\\Theme\\Aggregate\\ThemeSalesChannelDefinition', 'theme_media' => 'Shopware\\Storefront\\Theme\\Aggregate\\ThemeMediaDefinition'], ['log_entry' => 'log_entry.repository', 'acl_resource' => 'acl_resource.repository', 'acl_role' => 'acl_role.repository', 'user_role_acl' => 'user_role_acl.repository', 'custom_field' => 'custom_field.repository', 'custom_field_set' => 'custom_field_set.repository', 'custom_field_set_relation' => 'custom_field_set_relation.repository', 'version' => 'version.repository', 'version_commit' => 'version_commit.repository', 'version_commit_data' => 'version_commit_data.repository', 'event_action' => 'event_action.repository', 'dead_message' => 'dead_message.repository', 'message_queue_stats' => 'message_queue_stats.repository', 'plugin' => 'plugin.repository', 'plugin_translation' => 'plugin_translation.repository', 'scheduled_task' => 'scheduled_task.repository', 'language' => 'language.repository', 'seo_url' => 'seo_url.repository', 'seo_url_template' => 'seo_url_template.repository', 'main_category' => 'main_category.repository', 'sales_channel' => 'sales_channel.repository', 'sales_channel_translation' => 'sales_channel_translation.repository', 'sales_channel_country' => 'sales_channel_country.repository', 'sales_channel_currency' => 'sales_channel_currency.repository', 'sales_channel_domain' => 'sales_channel_domain.repository', 'sales_channel_language' => 'sales_channel_language.repository', 'sales_channel_payment_method' => 'sales_channel_payment_method.repository', 'sales_channel_shipping_method' => 'sales_channel_shipping_method.repository', 'sales_channel_type' => 'sales_channel_type.repository', 'sales_channel_type_translation' => 'sales_channel_type_translation.repository', 'country' => 'country.repository', 'country_state' => 'country_state.repository', 'country_state_translation' => 'country_state_translation.repository', 'country_translation' => 'country_translation.repository', 'currency' => 'currency.repository', 'currency_translation' => 'currency_translation.repository', 'locale' => 'locale.repository', 'locale_translation' => 'locale_translation.repository', 'snippet_set' => 'snippet_set.repository', 'snippet' => 'snippet.repository', 'salutation' => 'salutation.repository', 'salutation_translation' => 'salutation_translation.repository', 'tax' => 'tax.repository', 'tax_rule' => 'tax_rule.repository', 'tax_rule_type' => 'tax_rule_type.repository', 'tax_rule_type_translation' => 'tax_rule_type_translation.repository', 'unit' => 'unit.repository', 'unit_translation' => 'unit_translation.repository', 'user' => 'user.repository', 'user_access_key' => 'user_access_key.repository', 'user_recovery' => 'user_recovery.repository', 'integration' => 'integration.repository', 'state_machine' => 'state_machine.repository', 'state_machine_translation' => 'state_machine_translation.repository', 'state_machine_state' => 'state_machine_state.repository', 'state_machine_state_translation' => 'state_machine_state_translation.repository', 'state_machine_transition' => 'state_machine_transition.repository', 'state_machine_history' => 'state_machine_history.repository', 'system_config' => 'system_config.repository', 'number_range' => 'number_range.repository', 'number_range_sales_channel' => 'number_range_sales_channel.repository', 'number_range_state' => 'number_range_state.repository', 'number_range_type' => 'number_range_type.repository', 'number_range_type_translation' => 'number_range_type_translation.repository', 'number_range_translation' => 'number_range_translation.repository', 'tag' => 'tag.repository', 'category' => 'category.repository', 'category_translation' => 'category_translation.repository', 'category_tag' => 'category_tag.repository', 'media' => 'media.repository', 'media_default_folder' => 'media_default_folder.repository', 'media_thumbnail' => 'media_thumbnail.repository', 'media_translation' => 'media_translation.repository', 'media_folder' => 'media_folder.repository', 'media_thumbnail_size' => 'media_thumbnail_size.repository', 'media_folder_configuration' => 'media_folder_configuration.repository', 'media_folder_configuration_media_thumbnail_size' => 'media_folder_configuration_media_thumbnail_size.repository', 'media_tag' => 'media_tag.repository', 'product' => 'product.repository', 'product_category' => 'product_category.repository', 'product_tag' => 'product_tag.repository', 'product_configurator_setting' => 'product_configurator_setting.repository', 'product_price' => 'product_price.repository', 'product_property' => 'product_property.repository', 'product_search_keyword' => 'product_search_keyword.repository', 'product_keyword_dictionary' => 'product_keyword_dictionary.repository', 'product_review' => 'product_review.repository', 'product_manufacturer' => 'product_manufacturer.repository', 'product_manufacturer_translation' => 'product_manufacturer_translation.repository', 'product_media' => 'product_media.repository', 'product_translation' => 'product_translation.repository', 'product_option' => 'product_option.repository', 'product_category_tree' => 'product_category_tree.repository', 'product_cross_selling' => 'product_cross_selling.repository', 'product_cross_selling_translation' => 'product_cross_selling_translation.repository', 'product_visibility' => 'product_visibility.repository', 'delivery_time' => 'delivery_time.repository', 'newsletter_recipient' => 'newsletter_recipient.repository', 'newsletter_recipient_tag' => 'newsletter_recipient_tag.repository', 'rule' => 'rule.repository', 'rule_condition' => 'rule_condition.repository', 'product_stream' => 'product_stream.repository', 'product_stream_translation' => 'product_stream_translation.repository', 'product_stream_filter' => 'product_stream_filter.repository', 'product_export' => 'product_export.repository', 'property_group' => 'property_group.repository', 'property_group_option' => 'property_group_option.repository', 'property_group_option_translation' => 'property_group_option_translation.repository', 'property_group_translation' => 'property_group_translation.repository', 'cms_page' => 'cms_page.repository', 'cms_page_translation' => 'cms_page_translation.repository', 'cms_section' => 'cms_section.repository', 'cms_block' => 'cms_block.repository', 'cms_slot' => 'cms_slot.repository', 'cms_slot_translation' => 'cms_slot_translation.repository', 'mail_template' => 'mail_template.repository', 'mail_template_translation' => 'mail_template_translation.repository', 'mail_template_type' => 'mail_template_type.repository', 'mail_template_type_translation' => 'mail_template_type_translation.repository', 'mail_template_sales_channel' => 'mail_template_sales_channel.repository', 'mail_template_media' => 'mail_template_media.repository', 'mail_header_footer' => 'mail_header_footer.repository', 'mail_header_footer_translation' => 'mail_header_footer_translation.repository', 'delivery_time_translation' => 'delivery_time_translation.repository', 'import_export_profile' => 'import_export_profile.repository', 'import_export_log' => 'import_export_log.repository', 'import_export_file' => 'import_export_file.repository', 'customer' => 'customer.repository', 'customer_group_translation' => 'customer_group_translation.repository', 'customer_address' => 'customer_address.repository', 'customer_recovery' => 'customer_recovery.repository', 'customer_group' => 'customer_group.repository', 'customer_tag' => 'customer_tag.repository', 'document' => 'document.repository', 'document_type' => 'document_type.repository', 'document_type_translation' => 'document_type_translation.repository', 'document_base_config' => 'document_base_config.repository', 'document_base_config_sales_channel' => 'document_base_config_sales_channel.repository', 'order' => 'order.repository', 'order_address' => 'order_address.repository', 'order_customer' => 'order_customer.repository', 'order_delivery' => 'order_delivery.repository', 'order_delivery_position' => 'order_delivery_position.repository', 'order_line_item' => 'order_line_item.repository', 'order_tag' => 'order_tag.repository', 'order_transaction' => 'order_transaction.repository', 'payment_method' => 'payment_method.repository', 'payment_method_translation' => 'payment_method_translation.repository', 'promotion' => 'promotion.repository', 'promotion_sales_channel' => 'promotion_sales_channel.repository', 'promotion_individual_code' => 'promotion_individual_code.repository', 'promotion_discount' => 'promotion_discount.repository', 'promotion_discount_rule' => 'promotion_discount_rule.repository', 'promotion_setgroup' => 'promotion_setgroup.repository', 'promotion_setgroup_rule' => 'promotion_setgroup_rule.repository', 'promotion_order_rule' => 'promotion_order_rule.repository', 'promotion_persona_customer' => 'promotion_persona_customer.repository', 'promotion_persona_rule' => 'promotion_persona_rule.repository', 'promotion_cart_rule' => 'promotion_cart_rule.repository', 'promotion_translation' => 'promotion_translation.repository', 'promotion_discount_prices' => 'promotion_discount_prices.repository', 'shipping_method' => 'shipping_method.repository', 'shipping_method_tag' => 'shipping_method_tag.repository', 'shipping_method_price' => 'shipping_method_price.repository', 'shipping_method_translation' => 'shipping_method_translation.repository', 'theme' => 'theme.repository', 'theme_translation' => 'theme_translation.repository', 'theme_sales_channel' => 'theme_sales_channel.repository', 'theme_media' => 'theme_media.repository']);
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\ExtensionRegistry' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\ExtensionRegistry
     */
    protected function getExtensionRegistryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/ExtensionRegistry.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\ExtensionRegistry'] = new \Shopware\Core\Framework\DataAbstractionLayer\ExtensionRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Storefront\\Theme\\Extension\\SalesChannelExtension'] ?? ($this->privates['Shopware\\Storefront\\Theme\\Extension\\SalesChannelExtension'] = new \Shopware\Storefront\Theme\Extension\SalesChannelExtension()));
            yield 1 => ($this->privates['Shopware\\Storefront\\Theme\\Extension\\LanguageExtension'] ?? ($this->privates['Shopware\\Storefront\\Theme\\Extension\\LanguageExtension'] = new \Shopware\Storefront\Theme\Extension\LanguageExtension()));
            yield 2 => ($this->privates['Shopware\\Storefront\\Theme\\Extension\\MediaExtension'] ?? ($this->privates['Shopware\\Storefront\\Theme\\Extension\\MediaExtension'] = new \Shopware\Storefront\Theme\Extension\MediaExtension()));
        }, 3));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BlobFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BlobFieldSerializer
     */
    protected function getBlobFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/BlobFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\BlobFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BlobFieldSerializer();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BoolFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BoolFieldSerializer
     */
    protected function getBoolFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/BoolFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\BoolFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BoolFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CalculatedPriceFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CalculatedPriceFieldSerializer
     */
    protected function getCalculatedPriceFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/JsonFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/CalculatedPriceFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\CalculatedPriceFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CalculatedPriceFieldSerializer(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CartPriceFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CartPriceFieldSerializer
     */
    protected function getCartPriceFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/JsonFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/CartPriceFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\CartPriceFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CartPriceFieldSerializer(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ConfigJsonFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ConfigJsonFieldSerializer
     */
    protected function getConfigJsonFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/JsonFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/ConfigJsonFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ConfigJsonFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ConfigJsonFieldSerializer(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CreatedAtFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CreatedAtFieldSerializer
     */
    protected function getCreatedAtFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/DateTimeFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/CreatedAtFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\CreatedAtFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CreatedAtFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CustomFieldsSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CustomFieldsSerializer
     */
    protected function getCustomFieldsSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/JsonFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/CustomFieldsSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\CustomFieldsSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CustomFieldsSerializer(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['validator'] ?? $this->getValidatorService()), ($this->privates['Shopware\\Core\\System\\CustomField\\CustomFieldService'] ?? $this->getCustomFieldServiceService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\WriteCommandExtractor'] ?? $this->getWriteCommandExtractorService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateFieldSerializer
     */
    protected function getDateFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/DateFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\DateFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateTimeFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateTimeFieldSerializer
     */
    protected function getDateTimeFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/DateTimeFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\DateTimeFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateTimeFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\EmailFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\EmailFieldSerializer
     */
    protected function getEmailFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/EmailFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\EmailFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\EmailFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FkFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FkFieldSerializer
     */
    protected function getFkFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FkFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\FkFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FkFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FloatFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FloatFieldSerializer
     */
    protected function getFloatFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FloatFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\FloatFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FloatFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IdFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IdFieldSerializer
     */
    protected function getIdFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/IdFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\IdFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IdFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IntFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IntFieldSerializer
     */
    protected function getIntFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/IntFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\IntFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IntFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\JsonFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\JsonFieldSerializer
     */
    protected function getJsonFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/JsonFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\JsonFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\JsonFieldSerializer(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ListFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ListFieldSerializer
     */
    protected function getListFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/ListFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ListFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ListFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ListingPriceFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ListingPriceFieldSerializer
     */
    protected function getListingPriceFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/ListingPriceFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ListingPriceFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ListingPriceFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\LongTextFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\LongTextFieldSerializer
     */
    protected function getLongTextFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/LongTextFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\LongTextFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\LongTextFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\LongTextWithHtmlFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\LongTextWithHtmlFieldSerializer
     */
    protected function getLongTextWithHtmlFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/LongTextWithHtmlFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\LongTextWithHtmlFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\LongTextWithHtmlFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToManyAssociationFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToManyAssociationFieldSerializer
     */
    protected function getManyToManyAssociationFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/ManyToManyAssociationFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ManyToManyAssociationFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToManyAssociationFieldSerializer(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\WriteCommandExtractor'] ?? $this->getWriteCommandExtractorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToOneAssociationFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToOneAssociationFieldSerializer
     */
    protected function getManyToOneAssociationFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/ManyToOneAssociationFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ManyToOneAssociationFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToOneAssociationFieldSerializer(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\WriteCommandExtractor'] ?? $this->getWriteCommandExtractorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToManyAssociationFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToManyAssociationFieldSerializer
     */
    protected function getOneToManyAssociationFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/OneToManyAssociationFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\OneToManyAssociationFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToManyAssociationFieldSerializer(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\WriteCommandExtractor'] ?? $this->getWriteCommandExtractorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToOneAssociationFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToOneAssociationFieldSerializer
     */
    protected function getOneToOneAssociationFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/OneToOneAssociationFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\OneToOneAssociationFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToOneAssociationFieldSerializer(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\WriteCommandExtractor'] ?? $this->getWriteCommandExtractorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PasswordFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PasswordFieldSerializer
     */
    protected function getPasswordFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/PasswordFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\PasswordFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PasswordFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceDefinitionFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceDefinitionFieldSerializer
     */
    protected function getPriceDefinitionFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/JsonFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/PriceDefinitionFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\PriceDefinitionFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceDefinitionFieldSerializer(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['validator'] ?? $this->getValidatorService()), ($this->privates['Shopware\\Core\\Framework\\Rule\\Collector\\RuleConditionRegistry'] ?? $this->getRuleConditionRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceFieldSerializer
     */
    protected function getPriceFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/PriceFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\PriceFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceFieldSerializer(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['validator'] ?? $this->getValidatorService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ReferenceVersionFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ReferenceVersionFieldSerializer
     */
    protected function getReferenceVersionFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/ReferenceVersionFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\ReferenceVersionFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ReferenceVersionFieldSerializer();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\RemoteAddressFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\RemoteAddressFieldSerializer
     */
    protected function getRemoteAddressFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/RemoteAddressFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\RemoteAddressFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\RemoteAddressFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\StringFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\StringFieldSerializer
     */
    protected function getStringFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/StringFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\StringFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\StringFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslatedFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslatedFieldSerializer
     */
    protected function getTranslatedFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/TranslatedFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\TranslatedFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslatedFieldSerializer();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslationsAssociationFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslationsAssociationFieldSerializer
     */
    protected function getTranslationsAssociationFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/TranslationsAssociationFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\TranslationsAssociationFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslationsAssociationFieldSerializer(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\WriteCommandExtractor'] ?? $this->getWriteCommandExtractorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\UpdatedAtFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\UpdatedAtFieldSerializer
     */
    protected function getUpdatedAtFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/DateTimeFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/UpdatedAtFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\UpdatedAtFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\UpdatedAtFieldSerializer(($this->services['validator'] ?? $this->getValidatorService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionDataPayloadFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionDataPayloadFieldSerializer
     */
    protected function getVersionDataPayloadFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/VersionDataPayloadFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\VersionDataPayloadFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionDataPayloadFieldSerializer();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionFieldSerializer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionFieldSerializer
     */
    protected function getVersionFieldSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/FieldSerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/FieldSerializer/VersionFieldSerializer.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\FieldSerializer\\VersionFieldSerializer'] = new \Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionFieldSerializer();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Indexing\MessageQueue\IndexerMessageSender' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Indexing\MessageQueue\IndexerMessageSender
     */
    protected function getIndexerMessageSenderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/MessageQueue/IndexerMessageSender.php';

        return $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\MessageQueue\\IndexerMessageSender'] = new \Shopware\Core\Framework\DataAbstractionLayer\Indexing\MessageQueue\IndexerMessageSender(($this->services['message_bus'] ?? $this->getMessageBusService()), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\InheritanceIndexer'] ?? $this->getInheritanceIndexerService());
            yield 1 => ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\ChildCountIndexer'] ?? $this->getChildCountIndexerService());
            yield 2 => ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\TreeIndexer'] ?? $this->getTreeIndexerService());
            yield 3 => ($this->privates['Shopware\\Core\\Content\\Category\\DataAbstractionLayer\\Indexing\\BreadcrumbIndexer'] ?? $this->getBreadcrumbIndexerService());
            yield 4 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductRatingAverageIndexer'] ?? $this->getProductRatingAverageIndexerService());
            yield 5 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductStockIndexer'] ?? $this->getProductStockIndexerService());
            yield 6 => ($this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaFolderConfigIndexer'] ?? $this->getMediaFolderConfigIndexerService());
            yield 7 => ($this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaFolderSizeIndexer'] ?? $this->getMediaFolderSizeIndexerService());
            yield 8 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductCategoryTreeIndexer'] ?? $this->getProductCategoryTreeIndexerService());
            yield 9 => ($this->privates['Shopware\\Core\\Checkout\\Promotion\\DataAbstractionLayer\\Indexing\\PromotionRedemptionIndexer'] ?? $this->getPromotionRedemptionIndexerService());
            yield 10 => ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\ManyToManyIdFieldIndexer'] ?? $this->getManyToManyIdFieldIndexerService());
            yield 11 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductListingPriceIndexer'] ?? $this->getProductListingPriceIndexerService());
            yield 12 => ($this->services['Shopware\\Core\\Content\\Seo\\DataAbstractionLayer\\Indexing\\SeoUrlIndexer'] ?? $this->getSeoUrlIndexerService());
            yield 13 => ($this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaThumbnailIndexer'] ?? $this->getMediaThumbnailIndexerService());
            yield 14 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\VariantListingIndexer'] ?? $this->getVariantListingIndexerService());
            yield 15 => ($this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\Indexing\\RulePayloadIndexer'] ?? $this->getRulePayloadIndexerService());
            yield 16 => ($this->privates['Shopware\\Core\\Content\\ProductStream\\DataAbstractionLayer\\Indexing\\ProductStreamIndexer'] ?? $this->getProductStreamIndexerService());
            yield 17 => ($this->privates['Shopware\\Core\\Checkout\\Promotion\\DataAbstractionLayer\\Indexing\\PromotionExclusionIndexer'] ?? $this->getPromotionExclusionIndexerService());
            yield 18 => ($this->services['Shopware\\Core\\Content\\Product\\SearchKeyword\\ProductSearchKeywordIndexer'] ?? $this->getProductSearchKeywordIndexerService());
            yield 19 => ($this->services['Shopware\\Elasticsearch\\Framework\\Indexing\\EntityIndexer'] ?? $this->getEntityIndexerService());
        }, 20));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition
     */
    protected function getVersionCommitDataDefinitionService()
    {
        $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommitData\\VersionCommitDataDefinition'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition
     */
    protected function getVersionCommitDefinitionService()
    {
        $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommit\\VersionCommitDefinition'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition
     */
    protected function getVersionDefinitionService()
    {
        $this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\VersionDefinition'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Event\BusinessEventRegistry' shared service.
     *
     * @return \Shopware\Core\Framework\Event\BusinessEventRegistry
     */
    protected function getBusinessEventRegistryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Event/BusinessEventRegistry.php';

        $this->services['Shopware\\Core\\Framework\\Event\\BusinessEventRegistry'] = $instance = new \Shopware\Core\Framework\Event\BusinessEventRegistry(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        $instance->addMultiple([]);
        $instance->addMultiple([]);
        $instance->addMultiple([]);
        $instance->addMultiple([]);
        $instance->addMultiple([]);
        $instance->addMultiple([]);
        $instance->addMultiple([]);
        $instance->addMultiple(['shopware.global_business_event' => [], 'checkout.customer.before.login' => ['email' => ['type' => 'string']], 'checkout.customer.login' => ['customer' => ['type' => 'entity', 'entityClass' => 'Shopware\\Core\\Checkout\\Customer\\CustomerDefinition'], 'contextToken' => ['type' => 'string']], 'checkout.customer.logout' => ['customer' => ['type' => 'entity', 'entityClass' => 'Shopware\\Core\\Checkout\\Customer\\CustomerDefinition']], 'user.recovery.request' => ['userRecovery' => ['type' => 'entity', 'entityClass' => 'Shopware\\Core\\System\\User\\Aggregate\\UserRecovery\\UserRecoveryDefinition'], 'resetUrl' => ['type' => 'string']], 'checkout.customer.changed-payment-method' => ['customer' => ['type' => 'entity', 'entityClass' => 'Shopware\\Core\\Checkout\\Customer\\CustomerDefinition']]]);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Event\EventAction\EventActionDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Event\EventAction\EventActionDefinition
     */
    protected function getEventActionDefinitionService()
    {
        $this->services['Shopware\\Core\\Framework\\Event\\EventAction\\EventActionDefinition'] = $instance = new \Shopware\Core\Framework\Event\EventAction\EventActionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Log\LogEntryDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Log\LogEntryDefinition
     */
    protected function getLogEntryDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Log/LogEntryDefinition.php';

        $this->services['Shopware\\Core\\Framework\\Log\\LogEntryDefinition'] = $instance = new \Shopware\Core\Framework\Log\LogEntryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\MessageQueue\Api\ConsumeMessagesController' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\Api\ConsumeMessagesController
     */
    protected function getConsumeMessagesControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Api/ConsumeMessagesController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/EventListener/StopWorkerOnSigtermSignalListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/EventListener/DispatchPcntlSignalListener.php';

        $this->services['Shopware\\Core\\Framework\\MessageQueue\\Api\\ConsumeMessagesController'] = $instance = new \Shopware\Core\Framework\MessageQueue\Api\ConsumeMessagesController(($this->privates['messenger.receiver_locator'] ?? $this->getMessenger_ReceiverLocatorService()), ($this->services['message_bus'] ?? $this->getMessageBusService()), 30, ($this->privates['messenger.listener.stop_worker_on_restart_signal_listener'] ?? $this->getMessenger_Listener_StopWorkerOnRestartSignalListenerService()), ($this->privates['messenger.listener.stop_worker_on_sigterm_signal_listener'] ?? ($this->privates['messenger.listener.stop_worker_on_sigterm_signal_listener'] = new \Symfony\Component\Messenger\EventListener\StopWorkerOnSigtermSignalListener())), ($this->privates['messenger.listener.dispatch_pcntl_signal_listener'] ?? ($this->privates['messenger.listener.dispatch_pcntl_signal_listener'] = new \Symfony\Component\Messenger\EventListener\DispatchPcntlSignalListener())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\MessageQueue\DeadMessage\DeadMessageDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\DeadMessage\DeadMessageDefinition
     */
    protected function getDeadMessageDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/DeadMessage/DeadMessageDefinition.php';

        $this->services['Shopware\\Core\\Framework\\MessageQueue\\DeadMessage\\DeadMessageDefinition'] = $instance = new \Shopware\Core\Framework\MessageQueue\DeadMessage\DeadMessageDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\MessageQueue\MessageQueueStatsDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\MessageQueueStatsDefinition
     */
    protected function getMessageQueueStatsDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/MessageQueueStatsDefinition.php';

        $this->services['Shopware\\Core\\Framework\\MessageQueue\\MessageQueueStatsDefinition'] = $instance = new \Shopware\Core\Framework\MessageQueue\MessageQueueStatsDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\MessageQueue\ScheduledTask\Api\ScheduledTaskController' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\ScheduledTask\Api\ScheduledTaskController
     */
    protected function getScheduledTaskControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/Api/ScheduledTaskController.php';

        $this->services['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Api\\ScheduledTaskController'] = $instance = new \Shopware\Core\Framework\MessageQueue\ScheduledTask\Api\ScheduledTaskController(($this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Scheduler\\TaskScheduler'] ?? $this->getTaskSchedulerService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition
     */
    protected function getScheduledTaskDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/ScheduledTaskDefinition.php';

        $this->services['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\ScheduledTaskDefinition'] = $instance = new \Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Migration\Api\MigrationController' shared service.
     *
     * @return \Shopware\Core\Framework\Migration\Api\MigrationController
     */
    protected function getMigrationControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/Api/MigrationController.php';

        $this->services['Shopware\\Core\\Framework\\Migration\\Api\\MigrationController'] = $instance = new \Shopware\Core\Framework\Migration\Api\MigrationController(($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationCollectionLoader'] ?? $this->getMigrationCollectionLoaderService()), ($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationRuntime'] ?? $this->getMigrationRuntimeService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Migration\IndexerQueuer' shared service.
     *
     * @return \Shopware\Core\Framework\Migration\IndexerQueuer
     */
    protected function getIndexerQueuerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/IndexerQueuer.php';

        return $this->services['Shopware\\Core\\Framework\\Migration\\IndexerQueuer'] = new \Shopware\Core\Framework\Migration\IndexerQueuer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition
     */
    protected function getPluginTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Aggregate/PluginTranslation/PluginTranslationDefinition.php';

        $this->services['Shopware\\Core\\Framework\\Plugin\\Aggregate\\PluginTranslation\\PluginTranslationDefinition'] = $instance = new \Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Plugin\Api\PluginController' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Api\PluginController
     */
    protected function getPluginControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Api/PluginController.php';

        return $this->services['Shopware\\Core\\Framework\\Plugin\\Api\\PluginController'] = new \Shopware\Core\Framework\Plugin\Api\PluginController(($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginService'] ?? $this->getPluginServiceService()), ($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginLifecycleService'] ?? $this->getPluginLifecycleServiceService()), ($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginManagementService'] ?? $this->getPluginManagementServiceService()), ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService()), ($this->services['Shopware\\Core\\Framework\\Plugin\\PluginDefinition'] ?? $this->getPluginDefinitionService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Plugin\KernelPluginCollection' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\KernelPluginCollection
     */
    protected function getKernelPluginCollectionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/KernelPluginCollection.php';

        return $this->services['Shopware\\Core\\Framework\\Plugin\\KernelPluginCollection'] = ($this->services['Shopware\\Core\\Framework\\Plugin\\KernelPluginLoader\\KernelPluginLoader'] ?? $this->getKernelPluginLoaderService())->getPluginInstances();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Plugin\KernelPluginLoader\KernelPluginLoader' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\KernelPluginLoader\KernelPluginLoader
     */
    protected function getKernelPluginLoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ContainerAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Bundle/BundleInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ContainerAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Bundle/Bundle.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/KernelPluginLoader/KernelPluginLoader.php';

        return $this->services['Shopware\\Core\\Framework\\Plugin\\KernelPluginLoader\\KernelPluginLoader'] = ($this->services['kernel'] ?? $this->get('kernel', 1))->getPluginLoader();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Plugin\PluginDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\PluginDefinition
     */
    protected function getPluginDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/PluginDefinition.php';

        $this->services['Shopware\\Core\\Framework\\Plugin\\PluginDefinition'] = $instance = new \Shopware\Core\Framework\Plugin\PluginDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Plugin\Util\PluginIdProvider' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Util\PluginIdProvider
     */
    protected function getPluginIdProviderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Util/PluginIdProvider.php';

        return $this->services['Shopware\\Core\\Framework\\Plugin\\Util\\PluginIdProvider'] = new \Shopware\Core\Framework\Plugin\Util\PluginIdProvider(($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Resources\snippet\de_DE\SnippetFile_de_DE' shared service.
     *
     * @return \Shopware\Core\Framework\Resources\snippet\de_DE\SnippetFile_de_DE
     */
    protected function getSnippetFileDeDEService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/Files/SnippetFileInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Resources/snippet/de_DE/SnippetFile_de_DE.php';

        return $this->services['Shopware\\Core\\Framework\\Resources\\snippet\\de_DE\\SnippetFile_de_DE'] = new \Shopware\Core\Framework\Resources\snippet\de_DE\SnippetFile_de_DE();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Resources\snippet\en_GB\SnippetFile_en_GB' shared service.
     *
     * @return \Shopware\Core\Framework\Resources\snippet\en_GB\SnippetFile_en_GB
     */
    protected function getSnippetFileEnGBService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/Files/SnippetFileInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Resources/snippet/en_GB/SnippetFile_en_GB.php';

        return $this->services['Shopware\\Core\\Framework\\Resources\\snippet\\en_GB\\SnippetFile_en_GB'] = new \Shopware\Core\Framework\Resources\snippet\en_GB\SnippetFile_en_GB();
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Routing\RequestTransformerInterface' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Routing\RequestTransformer
     */
    protected function getRequestTransformerInterfaceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Routing/RequestTransformerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Routing/RequestTransformer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Routing/RequestTransformer.php';

        return $this->services['Shopware\\Core\\Framework\\Routing\\RequestTransformerInterface'] = new \Shopware\Storefront\Framework\Routing\RequestTransformer(new \Shopware\Core\Framework\Routing\RequestTransformer(), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['Shopware\\Core\\Content\\Seo\\SeoResolver'] ?? $this->getSeoResolverService()), ($this->privates['cache.object'] ?? $this->getCache_ObjectService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Store\Api\FirstRunWizardController' shared service.
     *
     * @return \Shopware\Core\Framework\Store\Api\FirstRunWizardController
     */
    protected function getFirstRunWizardControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Store/Api/FirstRunWizardController.php';

        return $this->services['Shopware\\Core\\Framework\\Store\\Api\\FirstRunWizardController'] = new \Shopware\Core\Framework\Store\Api\FirstRunWizardController(($this->privates['Shopware\\Core\\Framework\\Store\\Services\\FirstRunWizardClient'] ?? $this->getFirstRunWizardClientService()), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->services['user.repository'] ?? $this->getUser_RepositoryService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Store\Api\StoreController' shared service.
     *
     * @return \Shopware\Core\Framework\Store\Api\StoreController
     */
    protected function getStoreControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Store/Api/StoreController.php';

        return $this->services['Shopware\\Core\\Framework\\Store\\Api\\StoreController'] = new \Shopware\Core\Framework\Store\Api\StoreController(($this->privates['Shopware\\Core\\Framework\\Store\\Services\\StoreClient'] ?? $this->getStoreClientService()), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginManagementService'] ?? $this->getPluginManagementServiceService()), ($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginLifecycleService'] ?? $this->getPluginLifecycleServiceService()), ($this->services['user.repository'] ?? $this->getUser_RepositoryService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\RequestCriteriaBuilder'] ?? $this->getRequestCriteriaBuilderService()));
    }

    /*
     * Gets the public 'Shopware\Core\Framework\Update\Api\UpdateController' shared service.
     *
     * @return \Shopware\Core\Framework\Update\Api\UpdateController
     */
    protected function getUpdateControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Api/UpdateController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Services/ApiClient.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Services/RequirementsValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Services/PluginCompatibility.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Store/Services/OpenSSLVerifier.php';

        $a = ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService());
        $b = ($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginLifecycleService'] ?? $this->getPluginLifecycleServiceService());

        $this->services['Shopware\\Core\\Framework\\Update\\Api\\UpdateController'] = $instance = new \Shopware\Core\Framework\Update\Api\UpdateController(\dirname(__DIR__, 4), new \Shopware\Core\Framework\Update\Services\ApiClient('6.1.5', ($this->privates['cache.object'] ?? $this->getCache_ObjectService()), $a, ($this->privates['Shopware\\Core\\Framework\\Store\\Services\\OpenSSLVerifier'] ?? ($this->privates['Shopware\\Core\\Framework\\Store\\Services\\OpenSSLVerifier'] = new \Shopware\Core\Framework\Store\Services\OpenSSLVerifier([0 => (\dirname(__DIR__, 4).'/vendor/shopware/platform/src/Core/Framework/Store/public.key'), 1 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Store/public.key')]))), true), new \Shopware\Core\Framework\Update\Services\RequirementsValidator(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\Update\\Checkers\\PhpVersionCheck'] ?? ($this->privates['Shopware\\Core\\Framework\\Update\\Checkers\\PhpVersionCheck'] = new \Shopware\Core\Framework\Update\Checkers\PhpVersionCheck()));
            yield 1 => ($this->privates['Shopware\\Core\\Framework\\Update\\Checkers\\LicenseCheck'] ?? $this->getLicenseCheckService());
            yield 2 => ($this->privates['Shopware\\Core\\Framework\\Update\\Checkers\\WriteableCheck'] ?? $this->getWriteableCheckService());
            yield 3 => ($this->privates['Shopware\\Core\\Framework\\Update\\Checkers\\MysqlVersionCheck'] ?? $this->getMysqlVersionCheckService());
        }, 4)), new \Shopware\Core\Framework\Update\Services\PluginCompatibility(($this->privates['Shopware\\Core\\Framework\\Store\\Services\\StoreClient'] ?? $this->getStoreClientService()), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $b), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), $a, $b, ($this->services['user.repository'] ?? $this->getUser_RepositoryService()), '6.1.5', $this->getEnv('bool:SHOPWARE_UPDATE_TEST'));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition
     */
    protected function getCountryStateTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Country/Aggregate/CountryStateTranslation/CountryStateTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\Country\\Aggregate\\CountryStateTranslation\\CountryStateTranslationDefinition'] = $instance = new \Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Country\Aggregate\CountryState\CountryStateDefinition' shared service.
     *
     * @return \Shopware\Core\System\Country\Aggregate\CountryState\CountryStateDefinition
     */
    protected function getCountryStateDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\CountryStateDefinition'] = $instance = new \Shopware\Core\System\Country\Aggregate\CountryState\CountryStateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition' shared service.
     *
     * @return \Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition
     */
    protected function getSalesChannelCountryStateDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Country/Aggregate/CountryState/SalesChannel/SalesChannelCountryStateDefinition.php';

        $this->services['Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\SalesChannel\\SalesChannelCountryStateDefinition'] = $instance = new \Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition
     */
    protected function getCountryTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Country/Aggregate/CountryTranslation/CountryTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\Country\\Aggregate\\CountryTranslation\\CountryTranslationDefinition'] = $instance = new \Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Country\CountryDefinition' shared service.
     *
     * @return \Shopware\Core\System\Country\CountryDefinition
     */
    protected function getCountryDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\Country\\CountryDefinition'] = $instance = new \Shopware\Core\System\Country\CountryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition' shared service.
     *
     * @return \Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition
     */
    protected function getSalesChannelCountryDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Country/SalesChannel/SalesChannelCountryDefinition.php';

        $this->services['Shopware\\Core\\System\\Country\\SalesChannel\\SalesChannelCountryDefinition'] = $instance = new \Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition
     */
    protected function getCurrencyTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Currency/Aggregate/CurrencyTranslation/CurrencyTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\Currency\\Aggregate\\CurrencyTranslation\\CurrencyTranslationDefinition'] = $instance = new \Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Currency\CurrencyDefinition' shared service.
     *
     * @return \Shopware\Core\System\Currency\CurrencyDefinition
     */
    protected function getCurrencyDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\Currency\\CurrencyDefinition'] = $instance = new \Shopware\Core\System\Currency\CurrencyDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Currency\CurrencyFormatter' shared service.
     *
     * @return \Shopware\Core\System\Currency\CurrencyFormatter
     */
    protected function getCurrencyFormatterService()
    {
        return $this->services['Shopware\\Core\\System\\Currency\\CurrencyFormatter'] = new \Shopware\Core\System\Currency\CurrencyFormatter(($this->services['language.repository'] ?? $this->getLanguage_RepositoryService()));
    }

    /*
     * Gets the public 'Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition' shared service.
     *
     * @return \Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition
     */
    protected function getSalesChannelCurrencyDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\Currency\\SalesChannel\\SalesChannelCurrencyDefinition'] = $instance = new \Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition' shared service.
     *
     * @return \Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition
     */
    protected function getCustomFieldSetRelationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/CustomField/Aggregate/CustomFieldSetRelation/CustomFieldSetRelationDefinition.php';

        $this->services['Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSetRelation\\CustomFieldSetRelationDefinition'] = $instance = new \Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition' shared service.
     *
     * @return \Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition
     */
    protected function getCustomFieldSetDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/CustomField/Aggregate/CustomFieldSet/CustomFieldSetDefinition.php';

        $this->services['Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSet\\CustomFieldSetDefinition'] = $instance = new \Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\CustomField\Api\CustomFieldSetActionController' shared service.
     *
     * @return \Shopware\Core\System\CustomField\Api\CustomFieldSetActionController
     */
    protected function getCustomFieldSetActionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/CustomField/Api/CustomFieldSetActionController.php';

        $this->services['Shopware\\Core\\System\\CustomField\\Api\\CustomFieldSetActionController'] = $instance = new \Shopware\Core\System\CustomField\Api\CustomFieldSetActionController(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\CustomField\CustomFieldDefinition' shared service.
     *
     * @return \Shopware\Core\System\CustomField\CustomFieldDefinition
     */
    protected function getCustomFieldDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/CustomField/CustomFieldDefinition.php';

        $this->services['Shopware\\Core\\System\\CustomField\\CustomFieldDefinition'] = $instance = new \Shopware\Core\System\CustomField\CustomFieldDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition
     */
    protected function getDeliveryTimeTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/DeliveryTime/Aggregate/DeliveryTimeTranslation/DeliveryTimeTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\DeliveryTime\\Aggregate\\DeliveryTimeTranslation\\DeliveryTimeTranslationDefinition'] = $instance = new \Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition' shared service.
     *
     * @return \Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition
     */
    protected function getDeliveryTimeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/DeliveryTime/DeliveryTimeDefinition.php';

        $this->services['Shopware\\Core\\System\\DeliveryTime\\DeliveryTimeDefinition'] = $instance = new \Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Integration\IntegrationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Integration\IntegrationDefinition
     */
    protected function getIntegrationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Integration/IntegrationDefinition.php';

        $this->services['Shopware\\Core\\System\\Integration\\IntegrationDefinition'] = $instance = new \Shopware\Core\System\Integration\IntegrationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Language\LanguageDefinition' shared service.
     *
     * @return \Shopware\Core\System\Language\LanguageDefinition
     */
    protected function getLanguageDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\Language\\LanguageDefinition'] = $instance = new \Shopware\Core\System\Language\LanguageDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition' shared service.
     *
     * @return \Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition
     */
    protected function getSalesChannelLanguageDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\Language\\SalesChannel\\SalesChannelLanguageDefinition'] = $instance = new \Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition
     */
    protected function getLocaleTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Locale/Aggregate/LocaleTranslation/LocaleTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\Locale\\Aggregate\\LocaleTranslation\\LocaleTranslationDefinition'] = $instance = new \Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Locale\LocaleDefinition' shared service.
     *
     * @return \Shopware\Core\System\Locale\LocaleDefinition
     */
    protected function getLocaleDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Locale/LocaleDefinition.php';

        $this->services['Shopware\\Core\\System\\Locale\\LocaleDefinition'] = $instance = new \Shopware\Core\System\Locale\LocaleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition
     */
    protected function getNumberRangeSalesChannelDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeSalesChannel/NumberRangeSalesChannelDefinition.php';

        $this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeSalesChannel\\NumberRangeSalesChannelDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition
     */
    protected function getNumberRangeStateDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeState/NumberRangeStateDefinition.php';

        $this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeState\\NumberRangeStateDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition
     */
    protected function getNumberRangeTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeTranslation/NumberRangeTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTranslation\\NumberRangeTranslationDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition
     */
    protected function getNumberRangeTypeTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeTypeTranslation/NumberRangeTypeTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTypeTranslation\\NumberRangeTypeTranslationDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition
     */
    protected function getNumberRangeTypeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeType/NumberRangeTypeDefinition.php';

        $this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeType\\NumberRangeTypeDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\NumberRange\Api\NumberRangeController' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Api\NumberRangeController
     */
    protected function getNumberRangeControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Api/NumberRangeController.php';

        $this->services['Shopware\\Core\\System\\NumberRange\\Api\\NumberRangeController'] = $instance = new \Shopware\Core\System\NumberRange\Api\NumberRangeController(($this->privates['Shopware\\Core\\System\\NumberRange\\ValueGenerator\\NumberRangeValueGeneratorInterface'] ?? $this->getNumberRangeValueGeneratorInterfaceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\NumberRange\NumberRangeDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\NumberRangeDefinition
     */
    protected function getNumberRangeDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\NumberRange\\NumberRangeDefinition'] = $instance = new \Shopware\Core\System\NumberRange\NumberRangeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition
     */
    protected function getSalesChannelCountryDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelCountry/SalesChannelCountryDefinition.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCountry\\SalesChannelCountryDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition
     */
    protected function getSalesChannelCurrencyDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelCurrency/SalesChannelCurrencyDefinition.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCurrency\\SalesChannelCurrencyDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition
     */
    protected function getSalesChannelDomainDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelDomain\\SalesChannelDomainDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition
     */
    protected function getSalesChannelLanguageDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelLanguage/SalesChannelLanguageDefinition.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelLanguage\\SalesChannelLanguageDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition
     */
    protected function getSalesChannelPaymentMethodDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelPaymentMethod/SalesChannelPaymentMethodDefinition.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelPaymentMethod\\SalesChannelPaymentMethodDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition
     */
    protected function getSalesChannelShippingMethodDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelShippingMethod/SalesChannelShippingMethodDefinition.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelShippingMethod\\SalesChannelShippingMethodDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition
     */
    protected function getSalesChannelTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelTranslation/SalesChannelTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTranslation\\SalesChannelTranslationDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition
     */
    protected function getSalesChannelTypeTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelTypeTranslation/SalesChannelTypeTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTypeTranslation\\SalesChannelTypeTranslationDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition
     */
    protected function getSalesChannelTypeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelType/SalesChannelTypeDefinition.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelType\\SalesChannelTypeDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Entity\SalesChannelApiController' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelApiController
     */
    protected function getSalesChannelApiControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Entity/SalesChannelApiController.php';

        return $this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelApiController'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelApiController(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\RequestCriteriaBuilder'] ?? $this->getRequestCriteriaBuilderService()), ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService()));
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry
     */
    protected function getSalesChannelDefinitionInstanceRegistryService()
    {
        return $this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry('sales_channel_definition.', $this, ['log_entry' => 'Shopware\\Core\\Framework\\Log\\LogEntryDefinition', 'acl_resource' => 'Shopware\\Core\\Framework\\Api\\Acl\\Resource\\AclResourceDefinition', 'acl_role' => 'Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclRoleDefinition', 'user_role_acl' => 'Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclUserRoleDefinition', 'custom_field' => 'Shopware\\Core\\System\\CustomField\\CustomFieldDefinition', 'custom_field_set' => 'Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSet\\CustomFieldSetDefinition', 'custom_field_set_relation' => 'Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSetRelation\\CustomFieldSetRelationDefinition', 'version' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\VersionDefinition', 'version_commit' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommit\\VersionCommitDefinition', 'version_commit_data' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommitData\\VersionCommitDataDefinition', 'event_action' => 'Shopware\\Core\\Framework\\Event\\EventAction\\EventActionDefinition', 'dead_message' => 'Shopware\\Core\\Framework\\MessageQueue\\DeadMessage\\DeadMessageDefinition', 'message_queue_stats' => 'Shopware\\Core\\Framework\\MessageQueue\\MessageQueueStatsDefinition', 'plugin' => 'Shopware\\Core\\Framework\\Plugin\\PluginDefinition', 'plugin_translation' => 'Shopware\\Core\\Framework\\Plugin\\Aggregate\\PluginTranslation\\PluginTranslationDefinition', 'scheduled_task' => 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\ScheduledTaskDefinition', 'language' => 'Shopware\\Core\\System\\Language\\SalesChannel\\SalesChannelLanguageDefinition', 'seo_url' => 'Shopware\\Core\\Content\\Seo\\SeoUrl\\SalesChannel\\SalesChannelSeoUrlDefinition', 'seo_url_template' => 'Shopware\\Core\\Content\\Seo\\SeoUrlTemplate\\SeoUrlTemplateDefinition', 'main_category' => 'Shopware\\Core\\Content\\Seo\\MainCategory\\SalesChannel\\SalesChannelMainCategoryDefinition', 'sales_channel' => 'Shopware\\Core\\System\\SalesChannel\\SalesChannelDefinition', 'sales_channel_translation' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTranslation\\SalesChannelTranslationDefinition', 'sales_channel_country' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCountry\\SalesChannelCountryDefinition', 'sales_channel_currency' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCurrency\\SalesChannelCurrencyDefinition', 'sales_channel_domain' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelDomain\\SalesChannelDomainDefinition', 'sales_channel_language' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelLanguage\\SalesChannelLanguageDefinition', 'sales_channel_payment_method' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelPaymentMethod\\SalesChannelPaymentMethodDefinition', 'sales_channel_shipping_method' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelShippingMethod\\SalesChannelShippingMethodDefinition', 'sales_channel_type' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelType\\SalesChannelTypeDefinition', 'sales_channel_type_translation' => 'Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTypeTranslation\\SalesChannelTypeTranslationDefinition', 'country' => 'Shopware\\Core\\System\\Country\\SalesChannel\\SalesChannelCountryDefinition', 'country_state' => 'Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\SalesChannel\\SalesChannelCountryStateDefinition', 'country_state_translation' => 'Shopware\\Core\\System\\Country\\Aggregate\\CountryStateTranslation\\CountryStateTranslationDefinition', 'country_translation' => 'Shopware\\Core\\System\\Country\\Aggregate\\CountryTranslation\\CountryTranslationDefinition', 'currency' => 'Shopware\\Core\\System\\Currency\\SalesChannel\\SalesChannelCurrencyDefinition', 'currency_translation' => 'Shopware\\Core\\System\\Currency\\Aggregate\\CurrencyTranslation\\CurrencyTranslationDefinition', 'locale' => 'Shopware\\Core\\System\\Locale\\LocaleDefinition', 'locale_translation' => 'Shopware\\Core\\System\\Locale\\Aggregate\\LocaleTranslation\\LocaleTranslationDefinition', 'snippet_set' => 'Shopware\\Core\\System\\Snippet\\Aggregate\\SnippetSet\\SnippetSetDefinition', 'snippet' => 'Shopware\\Core\\System\\Snippet\\SnippetDefinition', 'salutation' => 'Shopware\\Core\\System\\Salutation\\SalesChannel\\SalesChannelSalutationDefinition', 'salutation_translation' => 'Shopware\\Core\\System\\Salutation\\Aggregate\\SalutationTranslation\\SalutationTranslationDefinition', 'tax' => 'Shopware\\Core\\System\\Tax\\TaxDefinition', 'tax_rule' => 'Shopware\\Core\\System\\Tax\\Aggregate\\TaxRule\\TaxRuleDefinition', 'tax_rule_type' => 'Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleType\\TaxRuleTypeDefinition', 'tax_rule_type_translation' => 'Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleTypeTranslation\\TaxRuleTypeTranslationDefinition', 'unit' => 'Shopware\\Core\\System\\Unit\\UnitDefinition', 'unit_translation' => 'Shopware\\Core\\System\\Unit\\Aggregate\\UnitTranslation\\UnitTranslationDefinition', 'user' => 'Shopware\\Core\\System\\User\\UserDefinition', 'user_access_key' => 'Shopware\\Core\\System\\User\\Aggregate\\UserAccessKey\\UserAccessKeyDefinition', 'user_recovery' => 'Shopware\\Core\\System\\User\\Aggregate\\UserRecovery\\UserRecoveryDefinition', 'integration' => 'Shopware\\Core\\System\\Integration\\IntegrationDefinition', 'state_machine' => 'Shopware\\Core\\System\\StateMachine\\StateMachineDefinition', 'state_machine_translation' => 'Shopware\\Core\\System\\StateMachine\\StateMachineTranslationDefinition', 'state_machine_state' => 'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateDefinition', 'state_machine_state_translation' => 'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateTranslationDefinition', 'state_machine_transition' => 'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineTransition\\StateMachineTransitionDefinition', 'state_machine_history' => 'Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineHistory\\StateMachineHistoryDefinition', 'system_config' => 'Shopware\\Core\\System\\SystemConfig\\SystemConfigDefinition', 'number_range' => 'Shopware\\Core\\System\\NumberRange\\NumberRangeDefinition', 'number_range_sales_channel' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeSalesChannel\\NumberRangeSalesChannelDefinition', 'number_range_state' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeState\\NumberRangeStateDefinition', 'number_range_type' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeType\\NumberRangeTypeDefinition', 'number_range_type_translation' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTypeTranslation\\NumberRangeTypeTranslationDefinition', 'number_range_translation' => 'Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTranslation\\NumberRangeTranslationDefinition', 'tag' => 'Shopware\\Core\\System\\Tag\\TagDefinition', 'category' => 'Shopware\\Core\\Content\\Category\\SalesChannel\\SalesChannelCategoryDefinition', 'category_translation' => 'Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTranslation\\CategoryTranslationDefinition', 'category_tag' => 'Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTag\\CategoryTagDefinition', 'media' => 'Shopware\\Core\\Content\\Media\\MediaDefinition', 'media_default_folder' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaDefaultFolder\\MediaDefaultFolderDefinition', 'media_thumbnail' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnail\\MediaThumbnailDefinition', 'media_translation' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaTranslation\\MediaTranslationDefinition', 'media_folder' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolder\\MediaFolderDefinition', 'media_thumbnail_size' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnailSize\\MediaThumbnailSizeDefinition', 'media_folder_configuration' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfiguration\\MediaFolderConfigurationDefinition', 'media_folder_configuration_media_thumbnail_size' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfigurationMediaThumbnailSize\\MediaFolderConfigurationMediaThumbnailSizeDefinition', 'media_tag' => 'Shopware\\Core\\Content\\Media\\Aggregate\\MediaTag\\MediaTagDefinition', 'product' => 'Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductDefinition', 'product_category' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategory\\ProductCategoryDefinition', 'product_tag' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductTag\\ProductTagDefinition', 'product_configurator_setting' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductConfiguratorSetting\\ProductConfiguratorSettingDefinition', 'product_price' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductPrice\\ProductPriceDefinition', 'product_property' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductProperty\\ProductPropertyDefinition', 'product_search_keyword' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductSearchKeyword\\ProductSearchKeywordDefinition', 'product_keyword_dictionary' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductKeywordDictionary\\ProductKeywordDictionaryDefinition', 'product_review' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductReview\\ProductReviewDefinition', 'product_manufacturer' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturer\\ProductManufacturerDefinition', 'product_manufacturer_translation' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturerTranslation\\ProductManufacturerTranslationDefinition', 'product_media' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductMedia\\ProductMediaDefinition', 'product_translation' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductTranslation\\ProductTranslationDefinition', 'product_option' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductOption\\ProductOptionDefinition', 'product_category_tree' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategoryTree\\ProductCategoryTreeDefinition', 'product_cross_selling' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSelling\\ProductCrossSellingDefinition', 'product_cross_selling_translation' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSellingTranslation\\ProductCrossSellingTranslationDefinition', 'product_visibility' => 'Shopware\\Core\\Content\\Product\\Aggregate\\ProductVisibility\\ProductVisibilityDefinition', 'delivery_time' => 'Shopware\\Core\\System\\DeliveryTime\\DeliveryTimeDefinition', 'newsletter_recipient' => 'Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipient\\NewsletterRecipientDefinition', 'newsletter_recipient_tag' => 'Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipientTag\\NewsletterRecipientTagDefinition', 'rule' => 'Shopware\\Core\\Content\\Rule\\RuleDefinition', 'rule_condition' => 'Shopware\\Core\\Content\\Rule\\Aggregate\\RuleCondition\\RuleConditionDefinition', 'product_stream' => 'Shopware\\Core\\Content\\ProductStream\\ProductStreamDefinition', 'product_stream_translation' => 'Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamTranslation\\ProductStreamTranslationDefinition', 'product_stream_filter' => 'Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamFilter\\ProductStreamFilterDefinition', 'product_export' => 'Shopware\\Core\\Content\\ProductExport\\ProductExportDefinition', 'property_group' => 'Shopware\\Core\\Content\\Property\\PropertyGroupDefinition', 'property_group_option' => 'Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOption\\PropertyGroupOptionDefinition', 'property_group_option_translation' => 'Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOptionTranslation\\PropertyGroupOptionTranslationDefinition', 'property_group_translation' => 'Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupTranslation\\PropertyGroupTranslationDefinition', 'cms_page' => 'Shopware\\Core\\Content\\Cms\\CmsPageDefinition', 'cms_page_translation' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsPageTranslation\\CmsPageTranslationDefinition', 'cms_section' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSection\\CmsSectionDefinition', 'cms_block' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsBlock\\CmsBlockDefinition', 'cms_slot' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlot\\CmsSlotDefinition', 'cms_slot_translation' => 'Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlotTranslation\\CmsSlotTranslationDefinition', 'mail_template' => 'Shopware\\Core\\Content\\MailTemplate\\MailTemplateDefinition', 'mail_template_translation' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTranslation\\MailTemplateTranslationDefinition', 'mail_template_type' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateType\\MailTemplateTypeDefinition', 'mail_template_type_translation' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTypeTranslation\\MailTemplateTypeTranslationDefinition', 'mail_template_sales_channel' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateSalesChannel\\MailTemplateSalesChannelDefinition', 'mail_template_media' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateMedia\\MailTemplateMediaDefinition', 'mail_header_footer' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooter\\MailHeaderFooterDefinition', 'mail_header_footer_translation' => 'Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooterTranslation\\MailHeaderFooterTranslationDefinition', 'delivery_time_translation' => 'Shopware\\Core\\System\\DeliveryTime\\Aggregate\\DeliveryTimeTranslation\\DeliveryTimeTranslationDefinition', 'import_export_profile' => 'Shopware\\Core\\Content\\ImportExport\\ImportExportProfileDefinition', 'import_export_log' => 'Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportLog\\ImportExportLogDefinition', 'import_export_file' => 'Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportFile\\ImportExportFileDefinition', 'customer' => 'Shopware\\Core\\Checkout\\Customer\\CustomerDefinition', 'customer_group_translation' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroupTranslation\\CustomerGroupTranslationDefinition', 'customer_address' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerAddress\\CustomerAddressDefinition', 'customer_recovery' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerRecovery\\CustomerRecoveryDefinition', 'customer_group' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroup\\CustomerGroupDefinition', 'customer_tag' => 'Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerTag\\CustomerTagDefinition', 'document' => 'Shopware\\Core\\Checkout\\Document\\DocumentDefinition', 'document_type' => 'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentType\\DocumentTypeDefinition', 'document_type_translation' => 'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentTypeTranslation\\DocumentTypeTranslationDefinition', 'document_base_config' => 'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfig\\DocumentBaseConfigDefinition', 'document_base_config_sales_channel' => 'Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfigSalesChannel\\DocumentBaseConfigSalesChannelDefinition', 'order' => 'Shopware\\Core\\Checkout\\Order\\OrderDefinition', 'order_address' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderAddress\\OrderAddressDefinition', 'order_customer' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderCustomer\\OrderCustomerDefinition', 'order_delivery' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDelivery\\OrderDeliveryDefinition', 'order_delivery_position' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDeliveryPosition\\OrderDeliveryPositionDefinition', 'order_line_item' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderLineItem\\OrderLineItemDefinition', 'order_tag' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTag\\OrderTagDefinition', 'order_transaction' => 'Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionDefinition', 'payment_method' => 'Shopware\\Core\\Checkout\\Payment\\SalesChannel\\SalesChannelPaymentMethodDefinition', 'payment_method_translation' => 'Shopware\\Core\\Checkout\\Payment\\Aggregate\\PaymentMethodTranslation\\PaymentMethodTranslationDefinition', 'promotion' => 'Shopware\\Core\\Checkout\\Promotion\\PromotionDefinition', 'promotion_sales_channel' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSalesChannel\\PromotionSalesChannelDefinition', 'promotion_individual_code' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionIndividualCode\\PromotionIndividualCodeDefinition', 'promotion_discount' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscount\\PromotionDiscountDefinition', 'promotion_discount_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountRule\\PromotionDiscountRuleDefinition', 'promotion_setgroup' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroup\\PromotionSetGroupDefinition', 'promotion_setgroup_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroupRule\\PromotionSetGroupRuleDefinition', 'promotion_order_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionOrderRule\\PromotionOrderRuleDefinition', 'promotion_persona_customer' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaCustomer\\PromotionPersonaCustomerDefinition', 'promotion_persona_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaRule\\PromotionPersonaRuleDefinition', 'promotion_cart_rule' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionCartRule\\PromotionCartRuleDefinition', 'promotion_translation' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionTranslation\\PromotionTranslationDefinition', 'promotion_discount_prices' => 'Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountPrice\\PromotionDiscountPriceDefinition', 'shipping_method' => 'Shopware\\Core\\Checkout\\Shipping\\SalesChannel\\SalesChannelShippingMethodDefinition', 'shipping_method_tag' => 'Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTag\\ShippingMethodTagDefinition', 'shipping_method_price' => 'Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodPrice\\ShippingMethodPriceDefinition', 'shipping_method_translation' => 'Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTranslation\\ShippingMethodTranslationDefinition', 'theme' => 'Shopware\\Storefront\\Theme\\ThemeDefinition', 'theme_translation' => 'Shopware\\Storefront\\Theme\\Aggregate\\ThemeTranslationDefinition', 'theme_sales_channel' => 'Shopware\\Storefront\\Theme\\Aggregate\\ThemeSalesChannelDefinition', 'theme_media' => 'Shopware\\Storefront\\Theme\\Aggregate\\ThemeMediaDefinition'], ['language' => 'sales_channel.language.repository', 'seo_url' => 'sales_channel.seo_url.repository', 'main_category' => 'sales_channel.main_category.repository', 'country' => 'sales_channel.country.repository', 'country_state' => 'sales_channel.country_state.repository', 'currency' => 'sales_channel.currency.repository', 'salutation' => 'sales_channel.salutation.repository', 'category' => 'sales_channel.category.repository', 'product' => 'sales_channel.product.repository', 'payment_method' => 'sales_channel.payment_method.repository', 'shipping_method' => 'sales_channel.shipping_method.repository']);
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\SalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\SalesChannelDefinition
     */
    protected function getSalesChannelDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\SalesChannel\\SalesChannelDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\SalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelApiSchemaController' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelApiSchemaController
     */
    protected function getSalesChannelApiSchemaControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/SalesChannel/SalesChannelApiSchemaController.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\SalesChannel\\SalesChannelApiSchemaController'] = $instance = new \Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelApiSchemaController(($this->privates['Shopware\\Core\\Framework\\Api\\ApiDefinition\\DefinitionService'] ?? $this->getDefinitionServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelContextController' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelContextController
     */
    protected function getSalesChannelContextControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/SalesChannel/SalesChannelContextController.php';

        $this->services['Shopware\\Core\\System\\SalesChannel\\SalesChannel\\SalesChannelContextController'] = $instance = new \Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelContextController(($this->privates['Shopware\\Core\\System\\SalesChannel\\SalesChannel\\SalesChannelContextSwitcher'] ?? $this->getSalesChannelContextSwitcherService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition
     */
    protected function getSalutationTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Salutation/Aggregate/SalutationTranslation/SalutationTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\Salutation\\Aggregate\\SalutationTranslation\\SalutationTranslationDefinition'] = $instance = new \Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition
     */
    protected function getSalesChannelSalutationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Salutation/SalutationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Salutation/SalesChannel/SalesChannelSalutationDefinition.php';

        $this->services['Shopware\\Core\\System\\Salutation\\SalesChannel\\SalesChannelSalutationDefinition'] = $instance = new \Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Salutation\SalutationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Salutation\SalutationDefinition
     */
    protected function getSalutationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Salutation/SalutationDefinition.php';

        $this->services['Shopware\\Core\\System\\Salutation\\SalutationDefinition'] = $instance = new \Shopware\Core\System\Salutation\SalutationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition' shared service.
     *
     * @return \Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition
     */
    protected function getSnippetSetDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\Snippet\\Aggregate\\SnippetSet\\SnippetSetDefinition'] = $instance = new \Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Snippet\Api\SnippetController' shared service.
     *
     * @return \Shopware\Core\System\Snippet\Api\SnippetController
     */
    protected function getSnippetControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/Api/SnippetController.php';

        return $this->services['Shopware\\Core\\System\\Snippet\\Api\\SnippetController'] = new \Shopware\Core\System\Snippet\Api\SnippetController(($this->privates['Shopware\\Core\\System\\Snippet\\SnippetService'] ?? $this->getSnippetServiceService()), ($this->services['Shopware\\Core\\System\\Snippet\\Files\\SnippetFileCollection'] ?? $this->getSnippetFileCollectionService()));
    }

    /*
     * Gets the public 'Shopware\Core\System\Snippet\Files\SnippetFileCollection' shared service.
     *
     * @return \Shopware\Core\System\Snippet\Files\SnippetFileCollection
     */
    protected function getSnippetFileCollectionService()
    {
        return $this->services['Shopware\\Core\\System\\Snippet\\Files\\SnippetFileCollection'] = new \Shopware\Core\System\Snippet\Files\SnippetFileCollection(new RewindableGenerator(function () {
            yield 0 => ($this->services['Shopware\\Core\\Framework\\Resources\\snippet\\de_DE\\SnippetFile_de_DE'] ?? ($this->services['Shopware\\Core\\Framework\\Resources\\snippet\\de_DE\\SnippetFile_de_DE'] = new \Shopware\Core\Framework\Resources\snippet\de_DE\SnippetFile_de_DE()));
            yield 1 => ($this->services['Shopware\\Core\\Framework\\Resources\\snippet\\en_GB\\SnippetFile_en_GB'] ?? ($this->services['Shopware\\Core\\Framework\\Resources\\snippet\\en_GB\\SnippetFile_en_GB'] = new \Shopware\Core\Framework\Resources\snippet\en_GB\SnippetFile_en_GB()));
            yield 2 => ($this->services['Shopware\\Storefront\\Resources\\snippet\\de_DE\\SnippetFile_de_DE'] ?? ($this->services['Shopware\\Storefront\\Resources\\snippet\\de_DE\\SnippetFile_de_DE'] = new \Shopware\Storefront\Resources\snippet\de_DE\SnippetFile_de_DE()));
            yield 3 => ($this->services['Shopware\\Storefront\\Resources\\snippet\\en_GB\\SnippetFile_en_GB'] ?? ($this->services['Shopware\\Storefront\\Resources\\snippet\\en_GB\\SnippetFile_en_GB'] = new \Shopware\Storefront\Resources\snippet\en_GB\SnippetFile_en_GB()));
        }, 4));
    }

    /*
     * Gets the public 'Shopware\Core\System\Snippet\Filter\SnippetFilterFactory' shared service.
     *
     * @return \Shopware\Core\System\Snippet\Filter\SnippetFilterFactory
     */
    protected function getSnippetFilterFactoryService()
    {
        return $this->services['Shopware\\Core\\System\\Snippet\\Filter\\SnippetFilterFactory'] = new \Shopware\Core\System\Snippet\Filter\SnippetFilterFactory(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\AuthorFilter'] ?? ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\AuthorFilter'] = new \Shopware\Core\System\Snippet\Filter\AuthorFilter()));
            yield 1 => ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\AddedFilter'] ?? ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\AddedFilter'] = new \Shopware\Core\System\Snippet\Filter\AddedFilter()));
            yield 2 => ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\EditedFilter'] ?? ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\EditedFilter'] = new \Shopware\Core\System\Snippet\Filter\EditedFilter()));
            yield 3 => ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\EmptySnippetFilter'] ?? ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\EmptySnippetFilter'] = new \Shopware\Core\System\Snippet\Filter\EmptySnippetFilter()));
            yield 4 => ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\NamespaceFilter'] ?? ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\NamespaceFilter'] = new \Shopware\Core\System\Snippet\Filter\NamespaceFilter()));
            yield 5 => ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\TermFilter'] ?? ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\TermFilter'] = new \Shopware\Core\System\Snippet\Filter\TermFilter()));
            yield 6 => ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\TranslationKeyFilter'] ?? ($this->privates['Shopware\\Core\\System\\Snippet\\Filter\\TranslationKeyFilter'] = new \Shopware\Core\System\Snippet\Filter\TranslationKeyFilter()));
        }, 7));
    }

    /*
     * Gets the public 'Shopware\Core\System\Snippet\SnippetDefinition' shared service.
     *
     * @return \Shopware\Core\System\Snippet\SnippetDefinition
     */
    protected function getSnippetDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\Snippet\\SnippetDefinition'] = $instance = new \Shopware\Core\System\Snippet\SnippetDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition
     */
    protected function getStateMachineHistoryDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineHistory\\StateMachineHistoryDefinition'] = $instance = new \Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition
     */
    protected function getStateMachineStateDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateDefinition'] = $instance = new \Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition
     */
    protected function getStateMachineStateTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/Aggregation/StateMachineState/StateMachineStateTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateTranslationDefinition'] = $instance = new \Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition
     */
    protected function getStateMachineTransitionDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/Aggregation/StateMachineTransition/StateMachineTransitionDefinition.php';

        $this->services['Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineTransition\\StateMachineTransitionDefinition'] = $instance = new \Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\StateMachine\Api\StateMachineActionController' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Api\StateMachineActionController
     */
    protected function getStateMachineActionControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/Api/StateMachineActionController.php';

        $this->services['Shopware\\Core\\System\\StateMachine\\Api\\StateMachineActionController'] = $instance = new \Shopware\Core\System\StateMachine\Api\StateMachineActionController(($this->privates['Shopware\\Core\\System\\StateMachine\\StateMachineRegistry'] ?? $this->getStateMachineRegistryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\StateMachine\StateMachineDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\StateMachineDefinition
     */
    protected function getStateMachineDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\StateMachine\\StateMachineDefinition'] = $instance = new \Shopware\Core\System\StateMachine\StateMachineDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\StateMachine\StateMachineTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\StateMachineTranslationDefinition
     */
    protected function getStateMachineTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/StateMachineTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\StateMachine\\StateMachineTranslationDefinition'] = $instance = new \Shopware\Core\System\StateMachine\StateMachineTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SystemConfig\Api\SystemConfigController' shared service.
     *
     * @return \Shopware\Core\System\SystemConfig\Api\SystemConfigController
     */
    protected function getSystemConfigControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SystemConfig/Api/SystemConfigController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SystemConfig/Service/ConfigurationService.php';

        return $this->services['Shopware\\Core\\System\\SystemConfig\\Api\\SystemConfigController'] = new \Shopware\Core\System\SystemConfig\Api\SystemConfigController(new \Shopware\Core\System\SystemConfig\Service\ConfigurationService(($this->services['kernel'] ?? $this->get('kernel', 1))->getBundles(), ($this->privates['Shopware\\Core\\System\\SystemConfig\\Util\\ConfigReader'] ?? ($this->privates['Shopware\\Core\\System\\SystemConfig\\Util\\ConfigReader'] = new \Shopware\Core\System\SystemConfig\Util\ConfigReader()))), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()));
    }

    /*
     * Gets the public 'Shopware\Core\System\SystemConfig\SystemConfigDefinition' shared service.
     *
     * @return \Shopware\Core\System\SystemConfig\SystemConfigDefinition
     */
    protected function getSystemConfigDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigDefinition'] = $instance = new \Shopware\Core\System\SystemConfig\SystemConfigDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\SystemConfig\SystemConfigService' shared service.
     *
     * @return \Shopware\Core\System\SystemConfig\SystemConfigService
     */
    protected function getSystemConfigServiceService()
    {
        return $this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] = new \Shopware\Core\System\SystemConfig\SystemConfigService(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['system_config.repository'] ?? $this->getSystemConfig_RepositoryService()), ($this->privates['Shopware\\Core\\System\\SystemConfig\\Util\\ConfigReader'] ?? ($this->privates['Shopware\\Core\\System\\SystemConfig\\Util\\ConfigReader'] = new \Shopware\Core\System\SystemConfig\Util\ConfigReader())));
    }

    /*
     * Gets the public 'Shopware\Core\System\Tag\TagDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tag\TagDefinition
     */
    protected function getTagDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Tag/TagDefinition.php';

        $this->services['Shopware\\Core\\System\\Tag\\TagDefinition'] = $instance = new \Shopware\Core\System\Tag\TagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition
     */
    protected function getTaxRuleTypeTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Tax/Aggregate/TaxRuleTypeTranslation/TaxRuleTypeTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleTypeTranslation\\TaxRuleTypeTranslationDefinition'] = $instance = new \Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition
     */
    protected function getTaxRuleTypeDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Tax/Aggregate/TaxRuleType/TaxRuleTypeDefinition.php';

        $this->services['Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleType\\TaxRuleTypeDefinition'] = $instance = new \Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition
     */
    protected function getTaxRuleDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Tax/Aggregate/TaxRule/TaxRuleDefinition.php';

        $this->services['Shopware\\Core\\System\\Tax\\Aggregate\\TaxRule\\TaxRuleDefinition'] = $instance = new \Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Tax\TaxDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tax\TaxDefinition
     */
    protected function getTaxDefinitionService()
    {
        $this->services['Shopware\\Core\\System\\Tax\\TaxDefinition'] = $instance = new \Shopware\Core\System\Tax\TaxDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition
     */
    protected function getUnitTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Unit/Aggregate/UnitTranslation/UnitTranslationDefinition.php';

        $this->services['Shopware\\Core\\System\\Unit\\Aggregate\\UnitTranslation\\UnitTranslationDefinition'] = $instance = new \Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\Unit\UnitDefinition' shared service.
     *
     * @return \Shopware\Core\System\Unit\UnitDefinition
     */
    protected function getUnitDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Unit/UnitDefinition.php';

        $this->services['Shopware\\Core\\System\\Unit\\UnitDefinition'] = $instance = new \Shopware\Core\System\Unit\UnitDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition' shared service.
     *
     * @return \Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition
     */
    protected function getUserAccessKeyDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Aggregate/UserAccessKey/UserAccessKeyDefinition.php';

        $this->services['Shopware\\Core\\System\\User\\Aggregate\\UserAccessKey\\UserAccessKeyDefinition'] = $instance = new \Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition' shared service.
     *
     * @return \Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition
     */
    protected function getUserRecoveryDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Aggregate/UserRecovery/UserRecoveryDefinition.php';

        $this->services['Shopware\\Core\\System\\User\\Aggregate\\UserRecovery\\UserRecoveryDefinition'] = $instance = new \Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\User\Api\UserRecoveryController' shared service.
     *
     * @return \Shopware\Core\System\User\Api\UserRecoveryController
     */
    protected function getUserRecoveryControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Api/UserRecoveryController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Recovery/UserRecoveryService.php';

        $this->services['Shopware\\Core\\System\\User\\Api\\UserRecoveryController'] = $instance = new \Shopware\Core\System\User\Api\UserRecoveryController(new \Shopware\Core\System\User\Recovery\UserRecoveryService(($this->services['user_recovery.repository'] ?? $this->getUserRecovery_RepositoryService()), ($this->services['user.repository'] ?? $this->getUser_RepositoryService()), ($this->services['router'] ?? $this->getRouterService()), ($this->privates['Shopware\\Core\\Framework\\Event\\BusinessEventDispatcher'] ?? $this->getBusinessEventDispatcherService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\User\Api\UserValidationController' shared service.
     *
     * @return \Shopware\Core\System\User\Api\UserValidationController
     */
    protected function getUserValidationControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Api/UserValidationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Service/UserValidationService.php';

        $this->services['Shopware\\Core\\System\\User\\Api\\UserValidationController'] = $instance = new \Shopware\Core\System\User\Api\UserValidationController(new \Shopware\Core\System\User\Service\UserValidationService(($this->services['user.repository'] ?? $this->getUser_RepositoryService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Core\System\User\UserDefinition' shared service.
     *
     * @return \Shopware\Core\System\User\UserDefinition
     */
    protected function getUserDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/UserDefinition.php';

        $this->services['Shopware\\Core\\System\\User\\UserDefinition'] = $instance = new \Shopware\Core\System\User\UserDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Elasticsearch\Framework\ElasticsearchHelper' shared service.
     *
     * @return \Shopware\Elasticsearch\Framework\ElasticsearchHelper
     */
    protected function getElasticsearchHelperService()
    {
        return $this->services['Shopware\\Elasticsearch\\Framework\\ElasticsearchHelper'] = new \Shopware\Elasticsearch\Framework\ElasticsearchHelper('prod', $this->getEnv('bool:default:default_whitespace:SHOPWARE_ES_ENABLED'), $this->getEnv('bool:default:default_whitespace:SHOPWARE_ES_INDEXING_ENABLED'), $this->getEnv('default:default_elasticsearch_prefix:SHOPWARE_ES_INDEX_PREFIX'), ($this->services['Elasticsearch\\Client'] ?? $this->getClientService()), ($this->privates['Shopware\\Elasticsearch\\Framework\\ElasticsearchRegistry'] ?? $this->getElasticsearchRegistryService()), ($this->privates['Shopware\\Elasticsearch\\Framework\\DataAbstractionLayer\\CriteriaParser'] ?? $this->getCriteriaParserService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /*
     * Gets the public 'Shopware\Elasticsearch\Framework\Indexing\CreateAliasTaskHandler' shared service.
     *
     * @return \Shopware\Elasticsearch\Framework\Indexing\CreateAliasTaskHandler
     */
    protected function getCreateAliasTaskHandlerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/ScheduledTaskHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Indexing/CreateAliasTaskHandler.php';

        return $this->services['Shopware\\Elasticsearch\\Framework\\Indexing\\CreateAliasTaskHandler'] = new \Shopware\Elasticsearch\Framework\Indexing\CreateAliasTaskHandler(($this->services['scheduled_task.repository'] ?? $this->getScheduledTask_RepositoryService()), ($this->services['Elasticsearch\\Client'] ?? $this->getClientService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /*
     * Gets the public 'Shopware\Elasticsearch\Framework\Indexing\EntityIndexer' shared service.
     *
     * @return \Shopware\Elasticsearch\Framework\Indexing\EntityIndexer
     */
    protected function getEntityIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Indexing/EntityIndexer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Indexing/IndexCreator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Indexing/IndexMessageDispatcher.php';

        return $this->services['Shopware\\Elasticsearch\\Framework\\Indexing\\EntityIndexer'] = new \Shopware\Elasticsearch\Framework\Indexing\EntityIndexer(($this->privates['Shopware\\Elasticsearch\\Framework\\ElasticsearchRegistry'] ?? $this->getElasticsearchRegistryService()), ($this->services['Shopware\\Elasticsearch\\Framework\\ElasticsearchHelper'] ?? $this->getElasticsearchHelperService()), ($this->services['language.repository'] ?? $this->getLanguage_RepositoryService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), new \Shopware\Elasticsearch\Framework\Indexing\IndexCreator(($this->services['Elasticsearch\\Client'] ?? $this->getClientService()), $this->parameters['elasticsearch.index.config']), new \Shopware\Elasticsearch\Framework\Indexing\IndexMessageDispatcher(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['message_bus'] ?? $this->getMessageBusService())), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\AccountOrderController' shared service.
     *
     * @return \Shopware\Storefront\Controller\AccountOrderController
     */
    protected function getAccountOrderControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/AccountOrderController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Account/Order/AccountOrderPageLoader.php';

        $a = ($this->services['order.repository'] ?? $this->getOrder_RepositoryService());

        $this->services['Shopware\\Storefront\\Controller\\AccountOrderController'] = $instance = new \Shopware\Storefront\Controller\AccountOrderController(new \Shopware\Storefront\Page\Account\Order\AccountOrderPageLoader(($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), $a), $a);

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\AccountPaymentController' shared service.
     *
     * @return \Shopware\Storefront\Controller\AccountPaymentController
     */
    protected function getAccountPaymentControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/AccountPaymentController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Account/PaymentMethod/AccountPaymentMethodPageLoader.php';

        $this->services['Shopware\\Storefront\\Controller\\AccountPaymentController'] = $instance = new \Shopware\Storefront\Controller\AccountPaymentController(new \Shopware\Storefront\Page\Account\PaymentMethod\AccountPaymentMethodPageLoader(($this->services['sales_channel.payment_method.repository'] ?? $this->getSalesChannel_PaymentMethod_RepositoryService()), ($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService())), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountService'] ?? $this->getAccountServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\AccountProfileController' shared service.
     *
     * @return \Shopware\Storefront\Controller\AccountProfileController
     */
    protected function getAccountProfileControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/AccountProfileController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Account/Overview/AccountOverviewPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Account/Profile/AccountProfilePageLoader.php';

        $a = ($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService());
        $b = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        $this->services['Shopware\\Storefront\\Controller\\AccountProfileController'] = $instance = new \Shopware\Storefront\Controller\AccountProfileController(new \Shopware\Storefront\Page\Account\Overview\AccountOverviewPageLoader($a, $b, ($this->services['order.repository'] ?? $this->getOrder_RepositoryService())), new \Shopware\Storefront\Page\Account\Profile\AccountProfilePageLoader($a, $b, ($this->services['sales_channel.salutation.repository'] ?? $this->getSalesChannel_Salutation_RepositoryService())), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountService'] ?? $this->getAccountServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\AddressController' shared service.
     *
     * @return \Shopware\Storefront\Controller\AddressController
     */
    protected function getAddressControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/AddressController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Address/Listing/AddressListingPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Address/Detail/AddressDetailPageLoader.php';

        $a = ($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService());
        $b = ($this->services['sales_channel.country.repository'] ?? $this->getSalesChannel_Country_RepositoryService());
        $c = ($this->services['sales_channel.salutation.repository'] ?? $this->getSalesChannel_Salutation_RepositoryService());
        $d = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());
        $e = ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AddressService'] ?? $this->getAddressServiceService());

        $this->services['Shopware\\Storefront\\Controller\\AddressController'] = $instance = new \Shopware\Storefront\Controller\AddressController(new \Shopware\Storefront\Page\Address\Listing\AddressListingPageLoader($a, $b, $c, ($this->services['customer_address.repository'] ?? $this->getCustomerAddress_RepositoryService()), $d, ($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService())), new \Shopware\Storefront\Page\Address\Detail\AddressDetailPageLoader($a, $b, $c, $e, $d), $e, ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountService'] ?? $this->getAccountServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\AuthController' shared service.
     *
     * @return \Shopware\Storefront\Controller\AuthController
     */
    protected function getAuthController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/AuthController.php';

        $this->services['Shopware\\Storefront\\Controller\\AuthController'] = $instance = new \Shopware\Storefront\Controller\AuthController(($this->privates['Shopware\\Storefront\\Page\\Account\\Login\\AccountLoginPageLoader'] ?? $this->getAccountLoginPageLoaderService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountService'] ?? $this->getAccountServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\CartLineItemController' shared service.
     *
     * @return \Shopware\Storefront\Controller\CartLineItemController
     */
    protected function getCartLineItemControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/CartLineItemController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionItemBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Cart/ProductLineItemFactory.php';

        $this->services['Shopware\\Storefront\\Controller\\CartLineItemController'] = $instance = new \Shopware\Storefront\Controller\CartLineItemController(($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()), ($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService()), ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionItemBuilder'] ?? ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionItemBuilder'] = new \Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder())), ($this->privates['Shopware\\Core\\Content\\Product\\Cart\\ProductLineItemFactory'] ?? ($this->privates['Shopware\\Core\\Content\\Product\\Cart\\ProductLineItemFactory'] = new \Shopware\Core\Content\Product\Cart\ProductLineItemFactory())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\CheckoutController' shared service.
     *
     * @return \Shopware\Storefront\Controller\CheckoutController
     */
    protected function getCheckoutControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/CheckoutController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Checkout/Cart/CheckoutCartPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Checkout/Confirm/CheckoutConfirmPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Checkout/Finish/CheckoutFinishPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/SalesChannel/OrderService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/ValidationServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/DataValidationFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Validation/OrderValidationFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Checkout/Offcanvas/OffcanvasCartPageLoader.php';

        $a = ($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService());
        $b = ($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService());
        $c = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());
        $d = ($this->services['sales_channel.payment_method.repository'] ?? $this->getSalesChannel_PaymentMethod_RepositoryService());
        $e = ($this->services['sales_channel.shipping_method.repository'] ?? $this->getSalesChannel_ShippingMethod_RepositoryService());
        $f = ($this->services['order.repository'] ?? $this->getOrder_RepositoryService());

        $this->services['Shopware\\Storefront\\Controller\\CheckoutController'] = $instance = new \Shopware\Storefront\Controller\CheckoutController($a, new \Shopware\Storefront\Page\Checkout\Cart\CheckoutCartPageLoader($b, $c, $a, $d, $e, ($this->services['sales_channel.country.repository'] ?? $this->getSalesChannel_Country_RepositoryService())), new \Shopware\Storefront\Page\Checkout\Confirm\CheckoutConfirmPageLoader($d, $e, $c, $a), new \Shopware\Storefront\Page\Checkout\Finish\CheckoutFinishPageLoader($c, $f, $b), new \Shopware\Core\Checkout\Order\SalesChannel\OrderService(($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), new \Shopware\Core\Checkout\Order\Validation\OrderValidationFactory(), $c, $a), ($this->privates['Shopware\\Core\\Checkout\\Payment\\PaymentService'] ?? $this->getPaymentServiceService()), new \Shopware\Storefront\Page\Checkout\Offcanvas\OffcanvasCartPageLoader($c, $a, $b, $e), $f);

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\CmsController' shared service.
     *
     * @return \Shopware\Storefront\Controller\CmsController
     */
    protected function getCmsControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/CmsController.php';

        $this->services['Shopware\\Storefront\\Controller\\CmsController'] = $instance = new \Shopware\Storefront\Controller\CmsController(($this->privates['Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageLoader'] ?? $this->getSalesChannelCmsPageLoaderService()), ($this->services['sales_channel.category.repository'] ?? $this->getSalesChannel_Category_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingGateway'] ?? $this->getProductListingGatewayService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\ContextController' shared service.
     *
     * @return \Shopware\Storefront\Controller\ContextController
     */
    protected function getContextControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/ContextController.php';

        $this->services['Shopware\\Storefront\\Controller\\ContextController'] = $instance = new \Shopware\Storefront\Controller\ContextController(($this->privates['Shopware\\Core\\System\\SalesChannel\\SalesChannel\\SalesChannelContextSwitcher'] ?? $this->getSalesChannelContextSwitcherService()), ($this->services['sales_channel_domain.repository'] ?? $this->getSalesChannelDomain_RepositoryService()), ($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['router.default'] ?? $this->getRouter_DefaultService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\CookieController' shared service.
     *
     * @return \Shopware\Storefront\Controller\CookieController
     */
    protected function getCookieControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/CookieController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cookie/CookieProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cookie/CookieProvider.php';

        return $this->services['Shopware\\Storefront\\Controller\\CookieController'] = new \Shopware\Storefront\Controller\CookieController(new \Shopware\Storefront\Framework\Cookie\CookieProvider());
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\CountryStateController' shared service.
     *
     * @return \Shopware\Storefront\Controller\CountryStateController
     */
    protected function getCountryStateControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/CountryStateController.php';

        $this->services['Shopware\\Storefront\\Controller\\CountryStateController'] = $instance = new \Shopware\Storefront\Controller\CountryStateController(($this->services['sales_channel.country.repository'] ?? $this->getSalesChannel_Country_RepositoryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\CsrfController' shared service.
     *
     * @return \Shopware\Storefront\Controller\CsrfController
     */
    protected function getCsrfControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/CsrfController.php';

        return $this->services['Shopware\\Storefront\\Controller\\CsrfController'] = new \Shopware\Storefront\Controller\CsrfController(($this->services['security.csrf.token_manager'] ?? $this->getSecurity_Csrf_TokenManagerService()), true, 'twig');
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\ErrorController' shared service.
     *
     * @return \Shopware\Storefront\Controller\ErrorController
     */
    protected function getErrorControllerService()
    {
        $this->services['Shopware\\Storefront\\Controller\\ErrorController'] = $instance = new \Shopware\Storefront\Controller\ErrorController(new \Shopware\Storefront\Framework\Twig\ErrorTemplateResolver(($this->services['twig'] ?? $this->getTwigService())), ($this->privates['session.flash_bag'] ?? ($this->privates['session.flash_bag'] = new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag())), ($this->privates['Shopware\\Storefront\\Pagelet\\Header\\HeaderPageletLoader'] ?? $this->getHeaderPageletLoaderService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), new \Shopware\Storefront\Page\Navigation\Error\ErrorPageLoader(($this->privates['Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageLoader'] ?? $this->getSalesChannelCmsPageLoaderService()), ($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\FormController' shared service.
     *
     * @return \Shopware\Storefront\Controller\FormController
     */
    protected function getFormControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/FormController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ContactForm/ContactFormService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/ValidationServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/DataValidationFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ContactForm/Validation/ContactFormValidationFactory.php';

        $this->services['Shopware\\Storefront\\Controller\\FormController'] = $instance = new \Shopware\Storefront\Controller\FormController(new \Shopware\Core\Content\ContactForm\ContactFormService(new \Shopware\Core\Content\ContactForm\Validation\ContactFormValidationFactory(), ($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->services['cms_slot.repository'] ?? $this->getCmsSlot_RepositoryService())), ($this->privates['Shopware\\Core\\Content\\Newsletter\\NewsletterSubscriptionService'] ?? $this->getNewsletterSubscriptionServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\MaintenanceController' shared service.
     *
     * @return \Shopware\Storefront\Controller\MaintenanceController
     */
    protected function getMaintenanceControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/MaintenanceController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Maintenance/MaintenancePageLoader.php';

        $this->services['Shopware\\Storefront\\Controller\\MaintenanceController'] = $instance = new \Shopware\Storefront\Controller\MaintenanceController(($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), new \Shopware\Storefront\Page\Maintenance\MaintenancePageLoader(($this->privates['Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageLoader'] ?? $this->getSalesChannelCmsPageLoaderService()), ($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\NavigationController' shared service.
     *
     * @return \Shopware\Storefront\Controller\NavigationController
     */
    protected function getNavigationControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/NavigationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Navigation/NavigationPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Pagelet/Menu/Offcanvas/MenuOffcanvasPageletLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Pagelet/Menu/Offcanvas/MenuOffcanvasPageletLoader.php';

        $a = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        $this->services['Shopware\\Storefront\\Controller\\NavigationController'] = $instance = new \Shopware\Storefront\Controller\NavigationController(new \Shopware\Storefront\Page\Navigation\NavigationPageLoader(($this->privates['Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageLoader'] ?? $this->getSalesChannelCmsPageLoaderService()), ($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService()), $a, ($this->services['Shopware\\Core\\Content\\Category\\CategoryDefinition'] ?? $this->getCategoryDefinitionService()), ($this->services['sales_channel.category.repository'] ?? $this->getSalesChannel_Category_RepositoryService())), new \Shopware\Storefront\Pagelet\Menu\Offcanvas\MenuOffcanvasPageletLoader($a, ($this->privates['Shopware\\Core\\Content\\Category\\Service\\NavigationLoader'] ?? $this->getNavigationLoaderService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\NewsletterController' shared service.
     *
     * @return \Shopware\Storefront\Controller\NewsletterController
     */
    protected function getNewsletterControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/NewsletterController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Newsletter/Register/NewsletterRegisterPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Newsletter/Subscribe/NewsletterSubscribePageLoader.php';

        $a = ($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService());
        $b = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        $this->services['Shopware\\Storefront\\Controller\\NewsletterController'] = $instance = new \Shopware\Storefront\Controller\NewsletterController(new \Shopware\Storefront\Page\Newsletter\Register\NewsletterRegisterPageLoader($a, $b, ($this->services['sales_channel.salutation.repository'] ?? $this->getSalesChannel_Salutation_RepositoryService())), new \Shopware\Storefront\Page\Newsletter\Subscribe\NewsletterSubscribePageLoader($a, $b), ($this->privates['Shopware\\Core\\Content\\Newsletter\\NewsletterSubscriptionService'] ?? $this->getNewsletterSubscriptionServiceService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\ProductController' shared service.
     *
     * @return \Shopware\Storefront\Controller\ProductController
     */
    protected function getProductControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/ProductController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Product/ProductPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Product/Configurator/ProductPageConfiguratorLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Product/Configurator/AvailableCombinationLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Product/ProductLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Product/CrossSelling/CrossSellingLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Product/QuickView/MinimalQuickViewPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/ProductReviewService.php';

        $a = ($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService());
        $b = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());
        $c = new \Shopware\Storefront\Page\Product\ProductLoader($a, $b);
        $d = ($this->services['Shopware\\Storefront\\Page\\Product\\Review\\ProductReviewLoader'] ?? $this->getProductReviewLoaderService());

        $this->services['Shopware\\Storefront\\Controller\\ProductController'] = $instance = new \Shopware\Storefront\Controller\ProductController(new \Shopware\Storefront\Page\Product\ProductPageLoader(($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService()), $a, $b, ($this->services['Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageRepository'] ?? $this->getSalesChannelCmsPageRepositoryService()), ($this->services['Shopware\\Core\\Content\\Cms\\DataResolver\\CmsSlotsDataResolver'] ?? $this->getCmsSlotsDataResolverService()), new \Shopware\Storefront\Page\Product\Configurator\ProductPageConfiguratorLoader(($this->services['product_configurator_setting.repository'] ?? $this->getProductConfiguratorSetting_RepositoryService()), new \Shopware\Storefront\Page\Product\Configurator\AvailableCombinationLoader(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()))), ($this->services['Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductDefinition'] ?? $this->getSalesChannelProductDefinitionService()), $c, $d, new \Shopware\Storefront\Page\Product\CrossSelling\CrossSellingLoader(($this->services['product_cross_selling.repository'] ?? $this->getProductCrossSelling_RepositoryService()), $b, ($this->services['Shopware\\Core\\Content\\ProductStream\\Service\\ProductStreamBuilder'] ?? $this->getProductStreamBuilderService()), $a)), ($this->services['Shopware\\Storefront\\Page\\Product\\Configurator\\ProductCombinationFinder'] ?? $this->getProductCombinationFinderService()), new \Shopware\Storefront\Page\Product\QuickView\MinimalQuickViewPageLoader($b, $c), new \Shopware\Core\Content\Product\SalesChannel\ProductReviewService(($this->services['product_review.repository'] ?? $this->getProductReview_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService())), ($this->services['Shopware\\Core\\Content\\Seo\\SeoUrlPlaceholderHandlerInterface'] ?? $this->getSeoUrlPlaceholderHandlerInterfaceService()), $d);

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\ProductExportController' shared service.
     *
     * @return \Shopware\Storefront\Controller\ProductExportController
     */
    protected function getProductExportController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/ProductExportController.php';

        $a = ($this->services['product_export.repository'] ?? $this->getProductExport_RepositoryService());

        $this->services['Shopware\\Storefront\\Controller\\ProductExportController'] = $instance = new \Shopware\Storefront\Controller\ProductExportController(($this->services['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExporter'] ?? $this->getProductExporterService()), ($this->privates['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportFileHandler'] ?? $this->getProductExportFileHandlerService()), ($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), $a, $a);

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\RegisterController' shared service.
     *
     * @return \Shopware\Storefront\Controller\RegisterController
     */
    protected function getRegisterControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/RegisterController.php';

        $this->services['Shopware\\Storefront\\Controller\\RegisterController'] = $instance = new \Shopware\Storefront\Controller\RegisterController(($this->privates['Shopware\\Storefront\\Page\\Account\\Login\\AccountLoginPageLoader'] ?? $this->getAccountLoginPageLoaderService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountService'] ?? $this->getAccountServiceService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountRegistrationService'] ?? $this->getAccountRegistrationServiceService()), ($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()), ($this->services['Shopware\\Storefront\\Page\\Checkout\\Register\\CheckoutRegisterPageLoader'] ?? $this->getCheckoutRegisterPageLoaderService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\SearchController' shared service.
     *
     * @return \Shopware\Storefront\Controller\SearchController
     */
    protected function getSearchControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/SearchController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Suggest/SuggestPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Suggest/ProductSuggestGatewayInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Suggest/ProductSuggestGateway.php';

        $a = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        $this->services['Shopware\\Storefront\\Controller\\SearchController'] = $instance = new \Shopware\Storefront\Controller\SearchController(($this->services['Shopware\\Storefront\\Page\\Search\\SearchPageLoader'] ?? $this->getSearchPageLoaderService()), new \Shopware\Storefront\Page\Suggest\SuggestPageLoader($a, new \Shopware\Core\Content\Product\SalesChannel\Suggest\ProductSuggestGateway(($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService()), ($this->privates['Shopware\\Elasticsearch\\Product\\ProductSearchBuilder'] ?? $this->getProductSearchBuilderService()), $a), ($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Controller\SitemapController' shared service.
     *
     * @return \Shopware\Storefront\Controller\SitemapController
     */
    protected function getSitemapControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Controller/SitemapController.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Sitemap/SitemapPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Service/SitemapListerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Service/SitemapLister.php';

        $this->services['Shopware\\Storefront\\Controller\\SitemapController'] = $instance = new \Shopware\Storefront\Controller\SitemapController(new \Shopware\Storefront\Page\Sitemap\SitemapPageLoader(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), new \Shopware\Core\Content\Sitemap\Service\SitemapLister(($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService())), ($this->privates['Shopware\\Core\\Content\\Sitemap\\Service\\SitemapExporter'] ?? $this->getSitemapExporterService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->services['session'] ?? $this->getSessionService())));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Framework\Cache\CacheStore' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Cache\CacheStore
     */
    protected function getCacheStoreService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/HttpCache/StoreInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheStore.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/ObjectCacheKeyFinder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheStateValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheStateValidator.php';

        return $this->services['Shopware\\Storefront\\Framework\\Cache\\CacheStore'] = new \Shopware\Storefront\Framework\Cache\CacheStore('65d7bc893a56808ceeb447db79df3483', ($this->privates['cache.http'] ?? $this->getCache_HttpService()), new \Shopware\Storefront\Framework\Cache\ObjectCacheKeyFinder(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService())), new \Shopware\Storefront\Framework\Cache\CacheStateValidator(), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'Shopware\Storefront\Framework\Csrf\CsrfPlaceholderHandler' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Csrf\CsrfPlaceholderHandler
     */
    protected function getCsrfPlaceholderHandlerService()
    {
        return $this->services['Shopware\\Storefront\\Framework\\Csrf\\CsrfPlaceholderHandler'] = new \Shopware\Storefront\Framework\Csrf\CsrfPlaceholderHandler(($this->services['security.csrf.token_manager'] ?? $this->getSecurity_Csrf_TokenManagerService()), true, 'twig');
    }

    /*
     * Gets the public 'Shopware\Storefront\Framework\Media\StorefrontMediaValidatorRegistry' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Media\StorefrontMediaValidatorRegistry
     */
    protected function getStorefrontMediaValidatorRegistryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Media/StorefrontMediaValidatorRegistry.php';

        return $this->services['Shopware\\Storefront\\Framework\\Media\\StorefrontMediaValidatorRegistry'] = new \Shopware\Storefront\Framework\Media\StorefrontMediaValidatorRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Storefront\\Framework\\Media\\Validator\\StorefrontMediaImageValidator'] ?? ($this->privates['Shopware\\Storefront\\Framework\\Media\\Validator\\StorefrontMediaImageValidator'] = new \Shopware\Storefront\Framework\Media\Validator\StorefrontMediaImageValidator()));
            yield 1 => ($this->privates['Shopware\\Storefront\\Framework\\Media\\Validator\\StorefrontMediaDocumentValidator'] ?? ($this->privates['Shopware\\Storefront\\Framework\\Media\\Validator\\StorefrontMediaDocumentValidator'] = new \Shopware\Storefront\Framework\Media\Validator\StorefrontMediaDocumentValidator()));
        }, 2));
    }

    /*
     * Gets the public 'Shopware\Storefront\Page\Checkout\Register\CheckoutRegisterPageLoader' shared autowired service.
     *
     * @return \Shopware\Storefront\Page\Checkout\Register\CheckoutRegisterPageLoader
     */
    protected function getCheckoutRegisterPageLoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Checkout/Register/CheckoutRegisterPageLoader.php';

        return $this->services['Shopware\\Storefront\\Page\\Checkout\\Register\\CheckoutRegisterPageLoader'] = new \Shopware\Storefront\Page\Checkout\Register\CheckoutRegisterPageLoader(($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AddressService'] ?? $this->getAddressServiceService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()), ($this->services['sales_channel.salutation.repository'] ?? $this->getSalesChannel_Salutation_RepositoryService()), ($this->services['sales_channel.country.repository'] ?? $this->getSalesChannel_Country_RepositoryService()));
    }

    /*
     * Gets the public 'Shopware\Storefront\Page\Product\Configurator\ProductCombinationFinder' shared autowired service.
     *
     * @return \Shopware\Storefront\Page\Product\Configurator\ProductCombinationFinder
     */
    protected function getProductCombinationFinderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Product/Configurator/ProductCombinationFinder.php';

        return $this->services['Shopware\\Storefront\\Page\\Product\\Configurator\\ProductCombinationFinder'] = new \Shopware\Storefront\Page\Product\Configurator\ProductCombinationFinder(($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService()));
    }

    /*
     * Gets the public 'Shopware\Storefront\Page\Product\Review\ProductReviewLoader' shared service.
     *
     * @return \Shopware\Storefront\Page\Product\Review\ProductReviewLoader
     */
    protected function getProductReviewLoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Product/Review/ProductReviewLoader.php';

        return $this->services['Shopware\\Storefront\\Page\\Product\\Review\\ProductReviewLoader'] = new \Shopware\Storefront\Page\Product\Review\ProductReviewLoader(($this->services['product_review.repository'] ?? $this->getProductReview_RepositoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'Shopware\Storefront\Page\Search\SearchPageLoader' shared autowired service.
     *
     * @return \Shopware\Storefront\Page\Search\SearchPageLoader
     */
    protected function getSearchPageLoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Search/SearchPageLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Search/ProductSearchGatewayInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Search/ProductSearchGateway.php';

        $a = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        return $this->services['Shopware\\Storefront\\Page\\Search\\SearchPageLoader'] = new \Shopware\Storefront\Page\Search\SearchPageLoader(($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService()), new \Shopware\Core\Content\Product\SalesChannel\Search\ProductSearchGateway(($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService()), ($this->privates['Shopware\\Elasticsearch\\Product\\ProductSearchBuilder'] ?? $this->getProductSearchBuilderService()), $a), $a);
    }

    /*
     * Gets the public 'Shopware\Storefront\Resources\snippet\de_DE\SnippetFile_de_DE' shared autowired service.
     *
     * @return \Shopware\Storefront\Resources\snippet\de_DE\SnippetFile_de_DE
     */
    protected function getSnippetFileDeDE2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/Files/SnippetFileInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/snippet/de_DE/SnippetFile_de_DE.php';

        return $this->services['Shopware\\Storefront\\Resources\\snippet\\de_DE\\SnippetFile_de_DE'] = new \Shopware\Storefront\Resources\snippet\de_DE\SnippetFile_de_DE();
    }

    /*
     * Gets the public 'Shopware\Storefront\Resources\snippet\en_GB\SnippetFile_en_GB' shared autowired service.
     *
     * @return \Shopware\Storefront\Resources\snippet\en_GB\SnippetFile_en_GB
     */
    protected function getSnippetFileEnGB2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Snippet/Files/SnippetFileInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/snippet/en_GB/SnippetFile_en_GB.php';

        return $this->services['Shopware\\Storefront\\Resources\\snippet\\en_GB\\SnippetFile_en_GB'] = new \Shopware\Storefront\Resources\snippet\en_GB\SnippetFile_en_GB();
    }

    /*
     * Gets the public 'Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition' shared service.
     *
     * @return \Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition
     */
    protected function getThemeMediaDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Aggregate/ThemeMediaDefinition.php';

        $this->services['Shopware\\Storefront\\Theme\\Aggregate\\ThemeMediaDefinition'] = $instance = new \Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition
     */
    protected function getThemeSalesChannelDefinitionService()
    {
        $this->services['Shopware\\Storefront\\Theme\\Aggregate\\ThemeSalesChannelDefinition'] = $instance = new \Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition' shared service.
     *
     * @return \Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition
     */
    protected function getThemeTranslationDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Aggregate/ThemeTranslationDefinition.php';

        $this->services['Shopware\\Storefront\\Theme\\Aggregate\\ThemeTranslationDefinition'] = $instance = new \Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Theme\Controller\ThemeController' shared service.
     *
     * @return \Shopware\Storefront\Theme\Controller\ThemeController
     */
    protected function getThemeControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Controller/ThemeController.php';

        $this->services['Shopware\\Storefront\\Theme\\Controller\\ThemeController'] = $instance = new \Shopware\Storefront\Theme\Controller\ThemeController(($this->privates['Shopware\\Storefront\\Theme\\ThemeService'] ?? $this->getThemeServiceService()));

        $instance->setContainer($this);

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Theme\StorefrontPluginRegistry' shared service.
     *
     * @return \Shopware\Storefront\Theme\StorefrontPluginRegistry
     */
    protected function getStorefrontPluginRegistryService()
    {
        return $this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] = new \Shopware\Storefront\Theme\StorefrontPluginRegistry(($this->services['kernel'] ?? $this->get('kernel', 1)));
    }

    /*
     * Gets the public 'Shopware\Storefront\Theme\ThemeDefinition' shared service.
     *
     * @return \Shopware\Storefront\Theme\ThemeDefinition
     */
    protected function getThemeDefinitionService()
    {
        $this->services['Shopware\\Storefront\\Theme\\ThemeDefinition'] = $instance = new \Shopware\Storefront\Theme\ThemeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'Shopware\Storefront\Theme\Twig\ThemeTemplateFinder' shared service.
     *
     * @return \Shopware\Storefront\Theme\Twig\ThemeTemplateFinder
     */
    protected function getThemeTemplateFinderService()
    {
        $a = ($this->services['twig'] ?? $this->getTwigService());

        if (isset($this->services['Shopware\\Storefront\\Theme\\Twig\\ThemeTemplateFinder'])) {
            return $this->services['Shopware\\Storefront\\Theme\\Twig\\ThemeTemplateFinder'];
        }
        $b = ($this->services['kernel'] ?? $this->get('kernel', 1));

        $this->services['Shopware\\Storefront\\Theme\\Twig\\ThemeTemplateFinder'] = $instance = new \Shopware\Storefront\Theme\Twig\ThemeTemplateFinder($a, ($this->privates['twig.loader.native_filesystem'] ?? $this->getTwig_Loader_NativeFilesystemService()), $this->targetDir.'', new \Shopware\Storefront\Theme\Twig\ThemeInheritanceBuilder($b));

        $instance->registerBundles($b);

        return $instance;
    }

    /*
     * Gets the public 'Symfony\Bundle\FrameworkBundle\Controller\RedirectController' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Controller\RedirectController
     */
    protected function getRedirectControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/RedirectController.php';

        return $this->services['Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController'] = new \Symfony\Bundle\FrameworkBundle\Controller\RedirectController(($this->services['router'] ?? $this->getRouterService()), 80, 443);
    }

    /*
     * Gets the public 'Symfony\Bundle\FrameworkBundle\Controller\TemplateController' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Controller\TemplateController
     */
    protected function getTemplateControllerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/TemplateController.php';

        return $this->services['Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController'] = new \Symfony\Bundle\FrameworkBundle\Controller\TemplateController(($this->services['twig'] ?? $this->getTwigService()), NULL);
    }

    /*
     * Gets the public 'acl_resource.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getAclResource_RepositoryService()
    {
        return $this->services['acl_resource.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\Api\\Acl\\Resource\\AclResourceDefinition'] ?? $this->getAclResourceDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'acl_role.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getAclRole_RepositoryService()
    {
        return $this->services['acl_role.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclRoleDefinition'] ?? $this->getAclRoleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'cache.app' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected function getCache_AppService()
    {
        $this->services['cache.app'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('0LFL3US89K', 0, ($this->targetDir.''.'/pools'), ($this->privates['cache.default_marshaller'] ?? ($this->privates['cache.default_marshaller'] = new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL))));

        $instance->setLogger(($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));

        return $instance;
    }

    /*
     * Gets the public 'cache.app_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer
     */
    protected function getCache_AppClearerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheClearer/CacheClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheClearer/Psr6CacheClearer.php';

        return $this->services['cache.app_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer(['cache.app' => ($this->services['cache.app'] ?? $this->getCache_AppService()), 'cache.messenger.restart_workers_signal' => ($this->privates['cache.messenger.restart_workers_signal'] ?? $this->getCache_Messenger_RestartWorkersSignalService()), 'cache.object' => ($this->privates['.cache.object.inner'] ?? $this->get_Cache_Object_InnerService()), 'cache.http' => ($this->privates['.cache.http.inner'] ?? $this->get_Cache_Http_InnerService()), 'cache.tags' => ($this->privates['cache.tags'] ?? $this->getCache_TagsService())]);
    }

    /*
     * Gets the public 'cache.global_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer
     */
    protected function getCache_GlobalClearerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheClearer/CacheClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheClearer/Psr6CacheClearer.php';

        return $this->services['cache.global_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer(['cache.app' => ($this->services['cache.app'] ?? $this->getCache_AppService()), 'cache.system' => ($this->services['cache.system'] ?? $this->getCache_SystemService()), 'cache.validator' => ($this->privates['cache.validator'] ?? $this->getCache_ValidatorService()), 'cache.serializer' => ($this->privates['cache.serializer'] ?? $this->getCache_SerializerService()), 'cache.annotations' => ($this->privates['cache.annotations'] ?? $this->getCache_AnnotationsService()), 'cache.property_info' => ($this->privates['cache.property_info'] ?? $this->getCache_PropertyInfoService()), 'cache.messenger.restart_workers_signal' => ($this->privates['cache.messenger.restart_workers_signal'] ?? $this->getCache_Messenger_RestartWorkersSignalService()), 'cache.object' => ($this->privates['.cache.object.inner'] ?? $this->get_Cache_Object_InnerService()), 'cache.http' => ($this->privates['.cache.http.inner'] ?? $this->get_Cache_Http_InnerService()), 'cache.tags' => ($this->privates['cache.tags'] ?? $this->getCache_TagsService()), 'cache.property_access' => ($this->privates['cache.property_access'] ?? $this->getCache_PropertyAccessService())]);
    }

    /*
     * Gets the public 'cache.system' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_SystemService()
    {
        return $this->services['cache.system'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('SU43nY4Azi', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the public 'cache.system_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer
     */
    protected function getCache_SystemClearerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheClearer/CacheClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheClearer/Psr6CacheClearer.php';

        return $this->services['cache.system_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer(['cache.system' => ($this->services['cache.system'] ?? $this->getCache_SystemService()), 'cache.validator' => ($this->privates['cache.validator'] ?? $this->getCache_ValidatorService()), 'cache.serializer' => ($this->privates['cache.serializer'] ?? $this->getCache_SerializerService()), 'cache.annotations' => ($this->privates['cache.annotations'] ?? $this->getCache_AnnotationsService()), 'cache.property_info' => ($this->privates['cache.property_info'] ?? $this->getCache_PropertyInfoService()), 'cache.property_access' => ($this->privates['cache.property_access'] ?? $this->getCache_PropertyAccessService())]);
    }

    /*
     * Gets the public 'cache_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer
     */
    protected function getCacheClearerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheClearer/CacheClearerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheClearer/ChainCacheClearer.php';

        return $this->services['cache_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer(new RewindableGenerator(function () {
            yield 0 => ($this->services['cache.system_clearer'] ?? $this->getCache_SystemClearerService());
        }, 1));
    }

    /*
     * Gets the public 'cache_warmer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate
     */
    protected function getCacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheWarmer/CacheWarmerAggregate.php';

        return $this->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(new RewindableGenerator(function () {
            yield 0 => ($this->privates['validator.mapping.cache_warmer'] ?? $this->getValidator_Mapping_CacheWarmerService());
            yield 1 => ($this->privates['translation.warmer'] ?? $this->getTranslation_WarmerService());
            yield 2 => ($this->privates['router.cache_warmer'] ?? $this->getRouter_CacheWarmerService());
            yield 3 => ($this->privates['annotations.cache_warmer'] ?? $this->getAnnotations_CacheWarmerService());
            yield 4 => ($this->privates['serializer.mapping.cache_warmer'] ?? $this->getSerializer_Mapping_CacheWarmerService());
        }, 5), false, ($this->targetDir.''.'/srcShopware_Production_KernelProdContainerDeprecations.log'));
    }

    /*
     * Gets the public 'category.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCategory_RepositoryService()
    {
        return $this->services['category.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Category\\CategoryDefinition'] ?? $this->getCategoryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'category_tag.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCategoryTag_RepositoryService()
    {
        return $this->services['category_tag.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTag\\CategoryTagDefinition'] ?? $this->getCategoryTagDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'category_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCategoryTranslation_RepositoryService()
    {
        return $this->services['category_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTranslation\\CategoryTranslationDefinition'] ?? $this->getCategoryTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'cms_block.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCmsBlock_RepositoryService()
    {
        return $this->services['cms_block.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsBlock\\CmsBlockDefinition'] ?? $this->getCmsBlockDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'cms_page.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCmsPage_RepositoryService()
    {
        return $this->services['cms_page.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Cms\\CmsPageDefinition'] ?? $this->getCmsPageDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'cms_page_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCmsPageTranslation_RepositoryService()
    {
        return $this->services['cms_page_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsPageTranslation\\CmsPageTranslationDefinition'] ?? $this->getCmsPageTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'cms_section.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCmsSection_RepositoryService()
    {
        return $this->services['cms_section.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSection\\CmsSectionDefinition'] ?? $this->getCmsSectionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'cms_slot.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCmsSlot_RepositoryService()
    {
        return $this->services['cms_slot.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlot\\CmsSlotDefinition'] ?? $this->getCmsSlotDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'cms_slot_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCmsSlotTranslation_RepositoryService()
    {
        return $this->services['cms_slot_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlotTranslation\\CmsSlotTranslationDefinition'] ?? $this->getCmsSlotTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'console.command.public_alias.Shopware\Core\Content\MailTemplate\Commands\AssignAllTemplatesToAllSalesChannelsCommand' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Commands\AssignAllTemplatesToAllSalesChannelsCommand
     */
    protected function getAssignAllTemplatesToAllSalesChannelsCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Commands/AssignAllTemplatesToAllSalesChannelsCommand.php';

        return $this->services['console.command.public_alias.Shopware\\Core\\Content\\MailTemplate\\Commands\\AssignAllTemplatesToAllSalesChannelsCommand'] = new \Shopware\Core\Content\MailTemplate\Commands\AssignAllTemplatesToAllSalesChannelsCommand(($this->services['mail_template.repository'] ?? $this->getMailTemplate_RepositoryService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()));
    }

    /*
     * Gets the public 'console.command.public_alias.Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand' shared service.
     *
     * @return \Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand
     */
    protected function getProductExportGenerateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Command/ProductExportGenerateCommand.php';

        return $this->services['console.command.public_alias.Shopware\\Core\\Content\\ProductExport\\Command\\ProductExportGenerateCommand'] = new \Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand(($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] ?? $this->getSalesChannelContextFactoryService()), ($this->services['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExporter'] ?? $this->getProductExporterService()));
    }

    /*
     * Gets the public 'console.command.public_alias.Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand' shared service.
     *
     * @return \Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand
     */
    protected function getSitemapGenerateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Commands/SitemapGenerateCommand.php';

        return $this->services['console.command.public_alias.Shopware\\Core\\Content\\Sitemap\\Commands\\SitemapGenerateCommand'] = new \Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand(($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\Sitemap\\Service\\SitemapExporter'] ?? $this->getSitemapExporterService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] ?? $this->getSalesChannelContextFactoryService()));
    }

    /*
     * Gets the public 'console.command_loader' shared service.
     *
     * @return \Symfony\Component\Console\CommandLoader\ContainerCommandLoader
     */
    protected function getConsole_CommandLoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/CommandLoader/CommandLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/CommandLoader/ContainerCommandLoader.php';

        return $this->services['console.command_loader'] = new \Symfony\Component\Console\CommandLoader\ContainerCommandLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Shopware\\Administration\\Command\\AdministrationDumpFeaturesCommand' => ['privates', 'Shopware\\Administration\\Command\\AdministrationDumpFeaturesCommand', 'getAdministrationDumpFeaturesCommandService', false],
            'Shopware\\Core\\Content\\ImportExport\\Command\\DeleteExpiredFilesCommand' => ['privates', 'Shopware\\Core\\Content\\ImportExport\\Command\\DeleteExpiredFilesCommand', 'getDeleteExpiredFilesCommandService', false],
            'Shopware\\Core\\Content\\ImportExport\\Command\\ImportEntityCommand' => ['privates', 'Shopware\\Core\\Content\\ImportExport\\Command\\ImportEntityCommand', 'getImportEntityCommandService', false],
            'Shopware\\Core\\Content\\Media\\Commands\\DeleteNotUsedMediaCommand' => ['privates', 'Shopware\\Core\\Content\\Media\\Commands\\DeleteNotUsedMediaCommand', 'getDeleteNotUsedMediaCommandService', false],
            'Shopware\\Core\\Content\\Media\\Commands\\GenerateMediaTypesCommand' => ['privates', 'Shopware\\Core\\Content\\Media\\Commands\\GenerateMediaTypesCommand', 'getGenerateMediaTypesCommandService', false],
            'Shopware\\Core\\Content\\Media\\Commands\\GenerateThumbnailsCommand' => ['privates', 'Shopware\\Core\\Content\\Media\\Commands\\GenerateThumbnailsCommand', 'getGenerateThumbnailsCommandService', false],
            'Shopware\\Core\\Framework\\Api\\Command\\DumpSchemaCommand' => ['privates', 'Shopware\\Core\\Framework\\Api\\Command\\DumpSchemaCommand', 'getDumpSchemaCommandService', false],
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateEntitiesCommand' => ['privates', 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateEntitiesCommand', 'getCreateEntitiesCommandService', false],
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateSchemaCommand' => ['privates', 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateSchemaCommand', 'getCreateSchemaCommandService', false],
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\DataAbstractionLayerValidateCommand' => ['privates', 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\DataAbstractionLayerValidateCommand', 'getDataAbstractionLayerValidateCommandService', false],
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\RefreshIndexCommand' => ['privates', 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\RefreshIndexCommand', 'getRefreshIndexCommandService', false],
            'Shopware\\Core\\Framework\\Demodata\\Command\\DemodataCommand' => ['privates', 'Shopware\\Core\\Framework\\Demodata\\Command\\DemodataCommand', 'getDemodataCommandService', false],
            'Shopware\\Core\\Framework\\Demodata\\PersonalData\\CleanPersonalDataCommand' => ['privates', 'Shopware\\Core\\Framework\\Demodata\\PersonalData\\CleanPersonalDataCommand', 'getCleanPersonalDataCommandService', false],
            'Shopware\\Core\\Framework\\FeatureFlag\\Command\\FeatureFlagCreateCommand' => ['privates', 'Shopware\\Core\\Framework\\FeatureFlag\\Command\\FeatureFlagCreateCommand', 'getFeatureFlagCreateCommandService', false],
            'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\RegisterScheduledTasksCommand' => ['privates', 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\RegisterScheduledTasksCommand', 'getRegisterScheduledTasksCommandService', false],
            'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\ScheduledTaskRunner' => ['privates', 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\ScheduledTaskRunner', 'getScheduledTaskRunnerService', false],
            'Shopware\\Core\\Framework\\Migration\\Command\\CreateMigrationCommand' => ['privates', 'Shopware\\Core\\Framework\\Migration\\Command\\CreateMigrationCommand', 'getCreateMigrationCommandService', false],
            'Shopware\\Core\\Framework\\Migration\\Command\\MigrationCommand' => ['privates', 'Shopware\\Core\\Framework\\Migration\\Command\\MigrationCommand', 'getMigrationCommandService', false],
            'Shopware\\Core\\Framework\\Migration\\Command\\MigrationDestructiveCommand' => ['privates', 'Shopware\\Core\\Framework\\Migration\\Command\\MigrationDestructiveCommand', 'getMigrationDestructiveCommandService', false],
            'Shopware\\Core\\Framework\\Migration\\Command\\RefreshMigrationCommand' => ['privates', 'Shopware\\Core\\Framework\\Migration\\Command\\RefreshMigrationCommand', 'getRefreshMigrationCommandService', false],
            'Shopware\\Core\\Framework\\Plugin\\Command\\BundleDumpCommand' => ['privates', 'Shopware\\Core\\Framework\\Plugin\\Command\\BundleDumpCommand', 'getBundleDumpCommandService', false],
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginActivateCommand' => ['privates', 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginActivateCommand', 'getPluginActivateCommandService', false],
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginDeactivateCommand' => ['privates', 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginDeactivateCommand', 'getPluginDeactivateCommandService', false],
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginInstallCommand' => ['privates', 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginInstallCommand', 'getPluginInstallCommandService', false],
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUninstallCommand' => ['privates', 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUninstallCommand', 'getPluginUninstallCommandService', false],
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUpdateCommand' => ['privates', 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUpdateCommand', 'getPluginUpdateCommandService', false],
            'Shopware\\Core\\Framework\\Plugin\\Command\\PluginCreateCommand' => ['privates', 'Shopware\\Core\\Framework\\Plugin\\Command\\PluginCreateCommand', 'getPluginCreateCommandService', false],
            'Shopware\\Core\\Framework\\Plugin\\Command\\PluginListCommand' => ['privates', 'Shopware\\Core\\Framework\\Plugin\\Command\\PluginListCommand', 'getPluginListCommandService', false],
            'Shopware\\Core\\Framework\\Plugin\\Command\\PluginRefreshCommand' => ['privates', 'Shopware\\Core\\Framework\\Plugin\\Command\\PluginRefreshCommand', 'getPluginRefreshCommandService', false],
            'Shopware\\Core\\System\\SalesChannel\\Command\\SalesChannelCreateCommand' => ['privates', 'Shopware\\Core\\System\\SalesChannel\\Command\\SalesChannelCreateCommand', 'getSalesChannelCreateCommandService', false],
            'Shopware\\Core\\System\\StateMachine\\Command\\WorkflowDumpCommand' => ['privates', 'Shopware\\Core\\System\\StateMachine\\Command\\WorkflowDumpCommand', 'getWorkflowDumpCommandService', false],
            'Shopware\\Core\\System\\User\\Command\\UserCreateCommand' => ['privates', 'Shopware\\Core\\System\\User\\Command\\UserCreateCommand', 'getUserCreateCommandService', false],
            'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCleanIndicesCommand' => ['privates', 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCleanIndicesCommand', 'getElasticsearchCleanIndicesCommandService', false],
            'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCreateAliasCommand' => ['privates', 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCreateAliasCommand', 'getElasticsearchCreateAliasCommandService', false],
            'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchIndexingCommand' => ['privates', 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchIndexingCommand', 'getElasticsearchIndexingCommandService', false],
            'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchTestAnalyzerCommand' => ['privates', 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchTestAnalyzerCommand', 'getElasticsearchTestAnalyzerCommandService', false],
            'Shopware\\Production\\Command\\SystemGenerateAppSecretCommand' => ['privates', 'Shopware\\Production\\Command\\SystemGenerateAppSecretCommand', 'getSystemGenerateAppSecretCommandService', false],
            'Shopware\\Production\\Command\\SystemGenerateJwtSecretCommand' => ['privates', 'Shopware\\Production\\Command\\SystemGenerateJwtSecretCommand', 'getSystemGenerateJwtSecretCommandService', false],
            'Shopware\\Production\\Command\\SystemInstallCommand' => ['privates', 'Shopware\\Production\\Command\\SystemInstallCommand', 'getSystemInstallCommandService', false],
            'Shopware\\Production\\Command\\SystemSetupCommand' => ['privates', 'Shopware\\Production\\Command\\SystemSetupCommand', 'getSystemSetupCommandService', false],
            'Shopware\\Production\\Command\\SystemUpdateFinishCommand' => ['privates', 'Shopware\\Production\\Command\\SystemUpdateFinishCommand', 'getSystemUpdateFinishCommandService', false],
            'Shopware\\Production\\Command\\SystemUpdatePrepareCommand' => ['privates', 'Shopware\\Production\\Command\\SystemUpdatePrepareCommand', 'getSystemUpdatePrepareCommandService', false],
            'Shopware\\Storefront\\Framework\\Command\\HttpCacheWarmUpCommand' => ['privates', 'Shopware\\Storefront\\Framework\\Command\\HttpCacheWarmUpCommand', 'getHttpCacheWarmUpCommandService', false],
            'Shopware\\Storefront\\Framework\\Command\\SalesChannelCreateStorefrontCommand' => ['privates', 'Shopware\\Storefront\\Framework\\Command\\SalesChannelCreateStorefrontCommand', 'getSalesChannelCreateStorefrontCommandService', false],
            'Shopware\\Storefront\\Theme\\Command\\ThemeChangeCommand' => ['privates', 'Shopware\\Storefront\\Theme\\Command\\ThemeChangeCommand', 'getThemeChangeCommandService', false],
            'Shopware\\Storefront\\Theme\\Command\\ThemeCompileCommand' => ['privates', 'Shopware\\Storefront\\Theme\\Command\\ThemeCompileCommand', 'getThemeCompileCommandService', false],
            'Shopware\\Storefront\\Theme\\Command\\ThemeCreateCommand' => ['privates', 'Shopware\\Storefront\\Theme\\Command\\ThemeCreateCommand', 'getThemeCreateCommandService', false],
            'Shopware\\Storefront\\Theme\\Command\\ThemeDumpCommand' => ['privates', 'Shopware\\Storefront\\Theme\\Command\\ThemeDumpCommand', 'getThemeDumpCommandService', false],
            'Shopware\\Storefront\\Theme\\Command\\ThemeRefreshCommand' => ['privates', 'Shopware\\Storefront\\Theme\\Command\\ThemeRefreshCommand', 'getThemeRefreshCommandService', false],
            'console.command.about' => ['privates', 'console.command.about', 'getConsole_Command_AboutService', false],
            'console.command.assets_install' => ['privates', 'console.command.assets_install', 'getConsole_Command_AssetsInstallService', false],
            'console.command.cache_clear' => ['privates', 'console.command.cache_clear', 'getConsole_Command_CacheClearService', false],
            'console.command.cache_pool_clear' => ['privates', 'console.command.cache_pool_clear', 'getConsole_Command_CachePoolClearService', false],
            'console.command.cache_pool_delete' => ['privates', 'console.command.cache_pool_delete', 'getConsole_Command_CachePoolDeleteService', false],
            'console.command.cache_pool_list' => ['privates', 'console.command.cache_pool_list', 'getConsole_Command_CachePoolListService', false],
            'console.command.cache_pool_prune' => ['privates', 'console.command.cache_pool_prune', 'getConsole_Command_CachePoolPruneService', false],
            'console.command.cache_warmup' => ['privates', 'console.command.cache_warmup', 'getConsole_Command_CacheWarmupService', false],
            'console.command.config_debug' => ['privates', 'console.command.config_debug', 'getConsole_Command_ConfigDebugService', false],
            'console.command.config_dump_reference' => ['privates', 'console.command.config_dump_reference', 'getConsole_Command_ConfigDumpReferenceService', false],
            'console.command.container_debug' => ['privates', 'console.command.container_debug', 'getConsole_Command_ContainerDebugService', false],
            'console.command.container_lint' => ['privates', 'console.command.container_lint', 'getConsole_Command_ContainerLintService', false],
            'console.command.debug_autowiring' => ['privates', 'console.command.debug_autowiring', 'getConsole_Command_DebugAutowiringService', false],
            'console.command.event_dispatcher_debug' => ['privates', 'console.command.event_dispatcher_debug', 'getConsole_Command_EventDispatcherDebugService', false],
            'console.command.messenger_consume_messages' => ['privates', 'console.command.messenger_consume_messages', 'getConsole_Command_MessengerConsumeMessagesService', false],
            'console.command.messenger_debug' => ['privates', 'console.command.messenger_debug', 'getConsole_Command_MessengerDebugService', false],
            'console.command.messenger_setup_transports' => ['privates', 'console.command.messenger_setup_transports', 'getConsole_Command_MessengerSetupTransportsService', false],
            'console.command.messenger_stop_workers' => ['privates', 'console.command.messenger_stop_workers', 'getConsole_Command_MessengerStopWorkersService', false],
            'console.command.router_debug' => ['privates', 'console.command.router_debug', 'getConsole_Command_RouterDebugService', false],
            'console.command.router_match' => ['privates', 'console.command.router_match', 'getConsole_Command_RouterMatchService', false],
            'console.command.secrets_decrypt_to_local' => ['privates', 'console.command.secrets_decrypt_to_local', 'getConsole_Command_SecretsDecryptToLocalService', false],
            'console.command.secrets_encrypt_from_local' => ['privates', 'console.command.secrets_encrypt_from_local', 'getConsole_Command_SecretsEncryptFromLocalService', false],
            'console.command.secrets_generate_key' => ['privates', 'console.command.secrets_generate_key', 'getConsole_Command_SecretsGenerateKeyService', false],
            'console.command.secrets_list' => ['privates', 'console.command.secrets_list', 'getConsole_Command_SecretsListService', false],
            'console.command.secrets_remove' => ['privates', 'console.command.secrets_remove', 'getConsole_Command_SecretsRemoveService', false],
            'console.command.secrets_set' => ['privates', 'console.command.secrets_set', 'getConsole_Command_SecretsSetService', false],
            'console.command.translation_debug' => ['privates', 'console.command.translation_debug', 'getConsole_Command_TranslationDebugService', false],
            'console.command.translation_update' => ['privates', 'console.command.translation_update', 'getConsole_Command_TranslationUpdateService', false],
            'console.command.xliff_lint' => ['privates', 'console.command.xliff_lint', 'getConsole_Command_XliffLintService', false],
            'console.command.yaml_lint' => ['privates', 'console.command.yaml_lint', 'getConsole_Command_YamlLintService', false],
            'enqueue.client.consume_command' => ['privates', 'enqueue.client.consume_command', 'getEnqueue_Client_ConsumeCommandService', false],
            'enqueue.client.produce_command' => ['privates', 'enqueue.client.produce_command', 'getEnqueue_Client_ProduceCommandService', false],
            'enqueue.client.routes_command' => ['privates', 'enqueue.client.routes_command', 'getEnqueue_Client_RoutesCommandService', false],
            'enqueue.client.setup_broker_command' => ['privates', 'enqueue.client.setup_broker_command', 'getEnqueue_Client_SetupBrokerCommandService', false],
            'enqueue.transport.consume_command' => ['privates', 'enqueue.transport.consume_command', 'getEnqueue_Transport_ConsumeCommandService', false],
            'swiftmailer.command.debug' => ['privates', 'swiftmailer.command.debug', 'getSwiftmailer_Command_DebugService', false],
            'swiftmailer.command.new_email' => ['privates', 'swiftmailer.command.new_email', 'getSwiftmailer_Command_NewEmailService', false],
            'swiftmailer.command.send_email' => ['privates', 'swiftmailer.command.send_email', 'getSwiftmailer_Command_SendEmailService', false],
            'twig.command.debug' => ['privates', 'twig.command.debug', 'getTwig_Command_DebugService', false],
            'twig.command.lint' => ['privates', 'twig.command.lint', 'getTwig_Command_LintService', false],
        ], [
            'Shopware\\Administration\\Command\\AdministrationDumpFeaturesCommand' => 'Shopware\\Administration\\Command\\AdministrationDumpFeaturesCommand',
            'Shopware\\Core\\Content\\ImportExport\\Command\\DeleteExpiredFilesCommand' => 'Shopware\\Core\\Content\\ImportExport\\Command\\DeleteExpiredFilesCommand',
            'Shopware\\Core\\Content\\ImportExport\\Command\\ImportEntityCommand' => 'Shopware\\Core\\Content\\ImportExport\\Command\\ImportEntityCommand',
            'Shopware\\Core\\Content\\Media\\Commands\\DeleteNotUsedMediaCommand' => 'Shopware\\Core\\Content\\Media\\Commands\\DeleteNotUsedMediaCommand',
            'Shopware\\Core\\Content\\Media\\Commands\\GenerateMediaTypesCommand' => 'Shopware\\Core\\Content\\Media\\Commands\\GenerateMediaTypesCommand',
            'Shopware\\Core\\Content\\Media\\Commands\\GenerateThumbnailsCommand' => 'Shopware\\Core\\Content\\Media\\Commands\\GenerateThumbnailsCommand',
            'Shopware\\Core\\Framework\\Api\\Command\\DumpSchemaCommand' => 'Shopware\\Core\\Framework\\Api\\Command\\DumpSchemaCommand',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateEntitiesCommand' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateEntitiesCommand',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateSchemaCommand' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateSchemaCommand',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\DataAbstractionLayerValidateCommand' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\DataAbstractionLayerValidateCommand',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\RefreshIndexCommand' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\RefreshIndexCommand',
            'Shopware\\Core\\Framework\\Demodata\\Command\\DemodataCommand' => 'Shopware\\Core\\Framework\\Demodata\\Command\\DemodataCommand',
            'Shopware\\Core\\Framework\\Demodata\\PersonalData\\CleanPersonalDataCommand' => 'Shopware\\Core\\Framework\\Demodata\\PersonalData\\CleanPersonalDataCommand',
            'Shopware\\Core\\Framework\\FeatureFlag\\Command\\FeatureFlagCreateCommand' => 'Shopware\\Core\\Framework\\FeatureFlag\\Command\\FeatureFlagCreateCommand',
            'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\RegisterScheduledTasksCommand' => 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\RegisterScheduledTasksCommand',
            'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\ScheduledTaskRunner' => 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\ScheduledTaskRunner',
            'Shopware\\Core\\Framework\\Migration\\Command\\CreateMigrationCommand' => 'Shopware\\Core\\Framework\\Migration\\Command\\CreateMigrationCommand',
            'Shopware\\Core\\Framework\\Migration\\Command\\MigrationCommand' => 'Shopware\\Core\\Framework\\Migration\\Command\\MigrationCommand',
            'Shopware\\Core\\Framework\\Migration\\Command\\MigrationDestructiveCommand' => 'Shopware\\Core\\Framework\\Migration\\Command\\MigrationDestructiveCommand',
            'Shopware\\Core\\Framework\\Migration\\Command\\RefreshMigrationCommand' => 'Shopware\\Core\\Framework\\Migration\\Command\\RefreshMigrationCommand',
            'Shopware\\Core\\Framework\\Plugin\\Command\\BundleDumpCommand' => 'Shopware\\Core\\Framework\\Plugin\\Command\\BundleDumpCommand',
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginActivateCommand' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginActivateCommand',
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginDeactivateCommand' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginDeactivateCommand',
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginInstallCommand' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginInstallCommand',
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUninstallCommand' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUninstallCommand',
            'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUpdateCommand' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUpdateCommand',
            'Shopware\\Core\\Framework\\Plugin\\Command\\PluginCreateCommand' => 'Shopware\\Core\\Framework\\Plugin\\Command\\PluginCreateCommand',
            'Shopware\\Core\\Framework\\Plugin\\Command\\PluginListCommand' => 'Shopware\\Core\\Framework\\Plugin\\Command\\PluginListCommand',
            'Shopware\\Core\\Framework\\Plugin\\Command\\PluginRefreshCommand' => 'Shopware\\Core\\Framework\\Plugin\\Command\\PluginRefreshCommand',
            'Shopware\\Core\\System\\SalesChannel\\Command\\SalesChannelCreateCommand' => 'Shopware\\Core\\System\\SalesChannel\\Command\\SalesChannelCreateCommand',
            'Shopware\\Core\\System\\StateMachine\\Command\\WorkflowDumpCommand' => 'Shopware\\Core\\System\\StateMachine\\Command\\WorkflowDumpCommand',
            'Shopware\\Core\\System\\User\\Command\\UserCreateCommand' => 'Shopware\\Core\\System\\User\\Command\\UserCreateCommand',
            'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCleanIndicesCommand' => 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCleanIndicesCommand',
            'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCreateAliasCommand' => 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCreateAliasCommand',
            'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchIndexingCommand' => 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchIndexingCommand',
            'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchTestAnalyzerCommand' => 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchTestAnalyzerCommand',
            'Shopware\\Production\\Command\\SystemGenerateAppSecretCommand' => 'Shopware\\Production\\Command\\SystemGenerateAppSecretCommand',
            'Shopware\\Production\\Command\\SystemGenerateJwtSecretCommand' => 'Shopware\\Production\\Command\\SystemGenerateJwtSecretCommand',
            'Shopware\\Production\\Command\\SystemInstallCommand' => 'Shopware\\Production\\Command\\SystemInstallCommand',
            'Shopware\\Production\\Command\\SystemSetupCommand' => 'Shopware\\Production\\Command\\SystemSetupCommand',
            'Shopware\\Production\\Command\\SystemUpdateFinishCommand' => 'Shopware\\Production\\Command\\SystemUpdateFinishCommand',
            'Shopware\\Production\\Command\\SystemUpdatePrepareCommand' => 'Shopware\\Production\\Command\\SystemUpdatePrepareCommand',
            'Shopware\\Storefront\\Framework\\Command\\HttpCacheWarmUpCommand' => 'Shopware\\Storefront\\Framework\\Command\\HttpCacheWarmUpCommand',
            'Shopware\\Storefront\\Framework\\Command\\SalesChannelCreateStorefrontCommand' => 'Shopware\\Storefront\\Framework\\Command\\SalesChannelCreateStorefrontCommand',
            'Shopware\\Storefront\\Theme\\Command\\ThemeChangeCommand' => 'Shopware\\Storefront\\Theme\\Command\\ThemeChangeCommand',
            'Shopware\\Storefront\\Theme\\Command\\ThemeCompileCommand' => 'Shopware\\Storefront\\Theme\\Command\\ThemeCompileCommand',
            'Shopware\\Storefront\\Theme\\Command\\ThemeCreateCommand' => 'Shopware\\Storefront\\Theme\\Command\\ThemeCreateCommand',
            'Shopware\\Storefront\\Theme\\Command\\ThemeDumpCommand' => 'Shopware\\Storefront\\Theme\\Command\\ThemeDumpCommand',
            'Shopware\\Storefront\\Theme\\Command\\ThemeRefreshCommand' => 'Shopware\\Storefront\\Theme\\Command\\ThemeRefreshCommand',
            'console.command.about' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\AboutCommand',
            'console.command.assets_install' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\AssetsInstallCommand',
            'console.command.cache_clear' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand',
            'console.command.cache_pool_clear' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolClearCommand',
            'console.command.cache_pool_delete' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolDeleteCommand',
            'console.command.cache_pool_list' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolListCommand',
            'console.command.cache_pool_prune' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolPruneCommand',
            'console.command.cache_warmup' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\CacheWarmupCommand',
            'console.command.config_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\ConfigDebugCommand',
            'console.command.config_dump_reference' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\ConfigDumpReferenceCommand',
            'console.command.container_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\ContainerDebugCommand',
            'console.command.container_lint' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\ContainerLintCommand',
            'console.command.debug_autowiring' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\DebugAutowiringCommand',
            'console.command.event_dispatcher_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\EventDispatcherDebugCommand',
            'console.command.messenger_consume_messages' => 'Symfony\\Component\\Messenger\\Command\\ConsumeMessagesCommand',
            'console.command.messenger_debug' => 'Symfony\\Component\\Messenger\\Command\\DebugCommand',
            'console.command.messenger_setup_transports' => 'Symfony\\Component\\Messenger\\Command\\SetupTransportsCommand',
            'console.command.messenger_stop_workers' => 'Symfony\\Component\\Messenger\\Command\\StopWorkersCommand',
            'console.command.router_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\RouterDebugCommand',
            'console.command.router_match' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\RouterMatchCommand',
            'console.command.secrets_decrypt_to_local' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsDecryptToLocalCommand',
            'console.command.secrets_encrypt_from_local' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsEncryptFromLocalCommand',
            'console.command.secrets_generate_key' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsGenerateKeysCommand',
            'console.command.secrets_list' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsListCommand',
            'console.command.secrets_remove' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsRemoveCommand',
            'console.command.secrets_set' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsSetCommand',
            'console.command.translation_debug' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\TranslationDebugCommand',
            'console.command.translation_update' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\TranslationUpdateCommand',
            'console.command.xliff_lint' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\XliffLintCommand',
            'console.command.yaml_lint' => 'Symfony\\Bundle\\FrameworkBundle\\Command\\YamlLintCommand',
            'enqueue.client.consume_command' => 'Enqueue\\Symfony\\Client\\ConsumeCommand',
            'enqueue.client.produce_command' => 'Enqueue\\Symfony\\Client\\ProduceCommand',
            'enqueue.client.routes_command' => 'Enqueue\\Symfony\\Client\\RoutesCommand',
            'enqueue.client.setup_broker_command' => 'Enqueue\\Symfony\\Client\\SetupBrokerCommand',
            'enqueue.transport.consume_command' => 'Enqueue\\Symfony\\Consumption\\ConfigurableConsumeCommand',
            'swiftmailer.command.debug' => 'Symfony\\Bundle\\SwiftmailerBundle\\Command\\DebugCommand',
            'swiftmailer.command.new_email' => 'Symfony\\Bundle\\SwiftmailerBundle\\Command\\NewEmailCommand',
            'swiftmailer.command.send_email' => 'Symfony\\Bundle\\SwiftmailerBundle\\Command\\SendEmailCommand',
            'twig.command.debug' => 'Symfony\\Bridge\\Twig\\Command\\DebugCommand',
            'twig.command.lint' => 'Symfony\\Bundle\\TwigBundle\\Command\\LintCommand',
        ]), ['database:create-migration' => 'Shopware\\Core\\Framework\\Migration\\Command\\CreateMigrationCommand', 'database:refresh-migration' => 'Shopware\\Core\\Framework\\Migration\\Command\\RefreshMigrationCommand', 'database:migrate' => 'Shopware\\Core\\Framework\\Migration\\Command\\MigrationCommand', 'database:clean-personal-data' => 'Shopware\\Core\\Framework\\Demodata\\PersonalData\\CleanPersonalDataCommand', 'database:migrate-destructive' => 'Shopware\\Core\\Framework\\Migration\\Command\\MigrationDestructiveCommand', 'feature:add' => 'Shopware\\Core\\Framework\\FeatureFlag\\Command\\FeatureFlagCreateCommand', 'framework:schema' => 'Shopware\\Core\\Framework\\Api\\Command\\DumpSchemaCommand', 'dal:create:schema' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateSchemaCommand', 'dal:create:entities' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateEntitiesCommand', 'dal:refresh:index' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\RefreshIndexCommand', 'dal:validate' => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\DataAbstractionLayerValidateCommand', 'framework:demodata' => 'Shopware\\Core\\Framework\\Demodata\\Command\\DemodataCommand', 'bundle:dump' => 'Shopware\\Core\\Framework\\Plugin\\Command\\BundleDumpCommand', 'plugin:refresh' => 'Shopware\\Core\\Framework\\Plugin\\Command\\PluginRefreshCommand', 'plugin:list' => 'Shopware\\Core\\Framework\\Plugin\\Command\\PluginListCommand', 'plugin:install' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginInstallCommand', 'plugin:activate' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginActivateCommand', 'plugin:update' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUpdateCommand', 'plugin:deactivate' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginDeactivateCommand', 'plugin:uninstall' => 'Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUninstallCommand', 'plugin:create' => 'Shopware\\Core\\Framework\\Plugin\\Command\\PluginCreateCommand', 'scheduled-task:register' => 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\RegisterScheduledTasksCommand', 'scheduled-task:run' => 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\ScheduledTaskRunner', 'sales-channel:create' => 'Shopware\\Core\\System\\SalesChannel\\Command\\SalesChannelCreateCommand', 'user:create' => 'Shopware\\Core\\System\\User\\Command\\UserCreateCommand', 'state-machine:dump' => 'Shopware\\Core\\System\\StateMachine\\Command\\WorkflowDumpCommand', 'media:generate-thumbnails' => 'Shopware\\Core\\Content\\Media\\Commands\\GenerateThumbnailsCommand', 'media:generate-media-types' => 'Shopware\\Core\\Content\\Media\\Commands\\GenerateMediaTypesCommand', 'media:delete-unused' => 'Shopware\\Core\\Content\\Media\\Commands\\DeleteNotUsedMediaCommand', 'import-export:delete-expired' => 'Shopware\\Core\\Content\\ImportExport\\Command\\DeleteExpiredFilesCommand', 'import:entity' => 'Shopware\\Core\\Content\\ImportExport\\Command\\ImportEntityCommand', 'administration:dump:features' => 'Shopware\\Administration\\Command\\AdministrationDumpFeaturesCommand', 'sales-channel:create:storefront' => 'Shopware\\Storefront\\Framework\\Command\\SalesChannelCreateStorefrontCommand', 'http:cache:warm:up' => 'Shopware\\Storefront\\Framework\\Command\\HttpCacheWarmUpCommand', 'theme:create' => 'Shopware\\Storefront\\Theme\\Command\\ThemeCreateCommand', 'theme:change' => 'Shopware\\Storefront\\Theme\\Command\\ThemeChangeCommand', 'theme:compile' => 'Shopware\\Storefront\\Theme\\Command\\ThemeCompileCommand', 'theme:dump' => 'Shopware\\Storefront\\Theme\\Command\\ThemeDumpCommand', 'theme:refresh' => 'Shopware\\Storefront\\Theme\\Command\\ThemeRefreshCommand', 'es:index' => 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchIndexingCommand', 'es:test:analyzer' => 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchTestAnalyzerCommand', 'es:create:alias' => 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCreateAliasCommand', 'es:index:cleanup' => 'Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCleanIndicesCommand', 'system:install' => 'Shopware\\Production\\Command\\SystemInstallCommand', 'system:setup' => 'Shopware\\Production\\Command\\SystemSetupCommand', 'system:update:prepare' => 'Shopware\\Production\\Command\\SystemUpdatePrepareCommand', 'system:update:finish' => 'Shopware\\Production\\Command\\SystemUpdateFinishCommand', 'system:generate-app-secret' => 'Shopware\\Production\\Command\\SystemGenerateAppSecretCommand', 'system:generate-jwt-secret' => 'Shopware\\Production\\Command\\SystemGenerateJwtSecretCommand', 'about' => 'console.command.about', 'assets:install' => 'console.command.assets_install', 'cache:clear' => 'console.command.cache_clear', 'cache:pool:clear' => 'console.command.cache_pool_clear', 'cache:pool:prune' => 'console.command.cache_pool_prune', 'cache:pool:delete' => 'console.command.cache_pool_delete', 'cache:pool:list' => 'console.command.cache_pool_list', 'cache:warmup' => 'console.command.cache_warmup', 'debug:config' => 'console.command.config_debug', 'config:dump-reference' => 'console.command.config_dump_reference', 'debug:container' => 'console.command.container_debug', 'lint:container' => 'console.command.container_lint', 'debug:autowiring' => 'console.command.debug_autowiring', 'debug:event-dispatcher' => 'console.command.event_dispatcher_debug', 'messenger:consume' => 'console.command.messenger_consume_messages', 'messenger:consume-messages' => 'console.command.messenger_consume_messages', 'messenger:setup-transports' => 'console.command.messenger_setup_transports', 'debug:messenger' => 'console.command.messenger_debug', 'messenger:stop-workers' => 'console.command.messenger_stop_workers', 'debug:router' => 'console.command.router_debug', 'router:match' => 'console.command.router_match', 'debug:translation' => 'console.command.translation_debug', 'translation:update' => 'console.command.translation_update', 'lint:xliff' => 'console.command.xliff_lint', 'lint:yaml' => 'console.command.yaml_lint', 'secrets:set' => 'console.command.secrets_set', 'secrets:remove' => 'console.command.secrets_remove', 'secrets:generate-keys' => 'console.command.secrets_generate_key', 'secrets:list' => 'console.command.secrets_list', 'secrets:decrypt-to-local' => 'console.command.secrets_decrypt_to_local', 'secrets:encrypt-from-local' => 'console.command.secrets_encrypt_from_local', 'debug:swiftmailer' => 'swiftmailer.command.debug', 'swiftmailer:email:send' => 'swiftmailer.command.new_email', 'swiftmailer:spool:send' => 'swiftmailer.command.send_email', 'debug:twig' => 'twig.command.debug', 'lint:twig' => 'twig.command.lint', 'enqueue:transport:consume' => 'enqueue.transport.consume_command', 'enqueue:consume' => 'enqueue.client.consume_command', 'enqueue:produce' => 'enqueue.client.produce_command', 'enqueue:setup-broker' => 'enqueue.client.setup_broker_command', 'enqueue:routes' => 'enqueue.client.routes_command']);
    }

    /*
     * Gets the public 'container.env_var_processors_locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getContainer_EnvVarProcessorsLocatorService()
    {
        return $this->services['container.env_var_processors_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'base64' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'bool' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'const' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'csv' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'default' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'file' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'float' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'int' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'json' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'key' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'query_string' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'require' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'resolve' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'string' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'trim' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
            'url' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', false],
        ], [
            'base64' => '?',
            'bool' => '?',
            'const' => '?',
            'csv' => '?',
            'default' => '?',
            'file' => '?',
            'float' => '?',
            'int' => '?',
            'json' => '?',
            'key' => '?',
            'query_string' => '?',
            'require' => '?',
            'resolve' => '?',
            'string' => '?',
            'trim' => '?',
            'url' => '?',
        ]);
    }

    /*
     * Gets the public 'country.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCountry_RepositoryService()
    {
        return $this->services['country.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Country\\CountryDefinition'] ?? $this->getCountryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'country_state.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCountryState_RepositoryService()
    {
        return $this->services['country_state.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\CountryStateDefinition'] ?? $this->getCountryStateDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'country_state_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCountryStateTranslation_RepositoryService()
    {
        return $this->services['country_state_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Country\\Aggregate\\CountryStateTranslation\\CountryStateTranslationDefinition'] ?? $this->getCountryStateTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'country_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCountryTranslation_RepositoryService()
    {
        return $this->services['country_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Country\\Aggregate\\CountryTranslation\\CountryTranslationDefinition'] ?? $this->getCountryTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'currency.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCurrency_RepositoryService()
    {
        return $this->services['currency.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Currency\\CurrencyDefinition'] ?? $this->getCurrencyDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'currency_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCurrencyTranslation_RepositoryService()
    {
        return $this->services['currency_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Currency\\Aggregate\\CurrencyTranslation\\CurrencyTranslationDefinition'] ?? $this->getCurrencyTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'custom_field.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCustomField_RepositoryService()
    {
        return $this->services['custom_field.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\CustomField\\CustomFieldDefinition'] ?? $this->getCustomFieldDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'custom_field_set.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCustomFieldSet_RepositoryService()
    {
        return $this->services['custom_field_set.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSet\\CustomFieldSetDefinition'] ?? $this->getCustomFieldSetDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'custom_field_set_relation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCustomFieldSetRelation_RepositoryService()
    {
        return $this->services['custom_field_set_relation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSetRelation\\CustomFieldSetRelationDefinition'] ?? $this->getCustomFieldSetRelationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'customer.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCustomer_RepositoryService()
    {
        return $this->services['customer.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Customer\\CustomerDefinition'] ?? $this->getCustomerDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'customer_address.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCustomerAddress_RepositoryService()
    {
        return $this->services['customer_address.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerAddress\\CustomerAddressDefinition'] ?? $this->getCustomerAddressDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'customer_group.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCustomerGroup_RepositoryService()
    {
        return $this->services['customer_group.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroup\\CustomerGroupDefinition'] ?? $this->getCustomerGroupDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'customer_group_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCustomerGroupTranslation_RepositoryService()
    {
        return $this->services['customer_group_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroupTranslation\\CustomerGroupTranslationDefinition'] ?? $this->getCustomerGroupTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'customer_recovery.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCustomerRecovery_RepositoryService()
    {
        return $this->services['customer_recovery.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerRecovery\\CustomerRecoveryDefinition'] ?? $this->getCustomerRecoveryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'customer_tag.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getCustomerTag_RepositoryService()
    {
        return $this->services['customer_tag.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerTag\\CustomerTagDefinition'] ?? $this->getCustomerTagDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'dead_message.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getDeadMessage_RepositoryService()
    {
        return $this->services['dead_message.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\MessageQueue\\DeadMessage\\DeadMessageDefinition'] ?? $this->getDeadMessageDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'delivery_time.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getDeliveryTime_RepositoryService()
    {
        return $this->services['delivery_time.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\DeliveryTime\\DeliveryTimeDefinition'] ?? $this->getDeliveryTimeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'delivery_time_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getDeliveryTimeTranslation_RepositoryService()
    {
        return $this->services['delivery_time_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\DeliveryTime\\Aggregate\\DeliveryTimeTranslation\\DeliveryTimeTranslationDefinition'] ?? $this->getDeliveryTimeTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'document.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getDocument_RepositoryService()
    {
        return $this->services['document.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Document\\DocumentDefinition'] ?? $this->getDocumentDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'document_base_config.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getDocumentBaseConfig_RepositoryService()
    {
        return $this->services['document_base_config.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfig\\DocumentBaseConfigDefinition'] ?? $this->getDocumentBaseConfigDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'document_base_config_sales_channel.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getDocumentBaseConfigSalesChannel_RepositoryService()
    {
        return $this->services['document_base_config_sales_channel.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfigSalesChannel\\DocumentBaseConfigSalesChannelDefinition'] ?? $this->getDocumentBaseConfigSalesChannelDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'document_type.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getDocumentType_RepositoryService()
    {
        return $this->services['document_type.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentType\\DocumentTypeDefinition'] ?? $this->getDocumentTypeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'document_type_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getDocumentTypeTranslation_RepositoryService()
    {
        return $this->services['document_type_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentTypeTranslation\\DocumentTypeTranslationDefinition'] ?? $this->getDocumentTypeTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'enqueue.client.default.producer' shared service.
     *
     * @return \Enqueue\Client\Producer
     */
    protected function getEnqueue_Client_Default_ProducerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/ProducerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/Producer.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Rpc/RpcFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/PreSendEventExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/PreSendCommandExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/DriverPreSendExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/PostSendExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/ExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/ChainExtension.php';

        return $this->services['enqueue.client.default.producer'] = new \Enqueue\Client\Producer(($this->privates['enqueue.client.default.driver'] ?? $this->getEnqueue_Client_Default_DriverService()), new \Enqueue\Rpc\RpcFactory(($this->privates['enqueue.client.default.context'] ?? $this->getEnqueue_Client_Default_ContextService())), new \Enqueue\Client\ChainExtension([]));
    }

    /*
     * Gets the public 'error_controller' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ErrorController
     */
    protected function getErrorController2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ErrorController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/error-handler/ErrorRenderer/ErrorRendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/error-handler/ErrorRenderer/SerializerErrorRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/ErrorRenderer/TwigErrorRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/error-handler/ErrorRenderer/HtmlErrorRenderer.php';

        $a = ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()));

        return $this->services['error_controller'] = new \Symfony\Component\HttpKernel\Controller\ErrorController(($this->services['http_kernel'] ?? $this->getHttpKernelService()), 'error_controller', new \Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer(($this->services['serializer'] ?? $this->getSerializerService()), \Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer::getPreferredFormat($a), new \Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer(($this->services['twig'] ?? $this->getTwigService()), new \Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer(\Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer::isDebug($a, false), 'UTF-8', ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))), \dirname(__DIR__, 4), \Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer::getAndCleanOutputBuffer($a), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService())), \Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer::isDebug($a, false)), \Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer::isDebug($a, false)));
    }

    /*
     * Gets the public 'event_action.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getEventAction_RepositoryService()
    {
        return $this->services['event_action.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\Event\\EventAction\\EventActionDefinition'] ?? $this->getEventActionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'event_dispatcher' shared service.
     *
     * @return \Shopware\Core\Framework\Event\NestedEventDispatcher
     */
    protected function getEventDispatcherService()
    {
        $this->services['event_dispatcher'] = $instance = new \Shopware\Core\Framework\Event\NestedEventDispatcher(($this->privates['Shopware\\Core\\Framework\\Event\\BusinessEventDispatcher'] ?? $this->getBusinessEventDispatcherService()));

        $instance->addListener('state_machine.order.state_changed', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Order\\Listener\\OrderStateChangeEventListener'] ?? $this->getOrderStateChangeEventListenerService());
        }, 1 => 'onOrderStateChange'], 0);
        $instance->addListener('state_machine.order_delivery.state_changed', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Order\\Listener\\OrderStateChangeEventListener'] ?? $this->getOrderStateChangeEventListenerService());
        }, 1 => 'onOrderDeliveryStateChange'], 0);
        $instance->addListener('state_machine.order_transaction.state_changed', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Order\\Listener\\OrderStateChangeEventListener'] ?? $this->getOrderStateChangeEventListenerService());
        }, 1 => 'onOrderTransactionStateChange'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Twig\\TwigDateRequestListener'] ?? $this->getTwigDateRequestListenerService());
        }, 1 => 'onKernelRequest'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Routing\\ContextResolverListener'] ?? $this->getContextResolverListenerService());
        }, 1 => 'resolveContext'], -10);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Routing\\RouteScopeListener'] ?? $this->getRouteScopeListenerService());
        }, 1 => 'checkScope'], -20);
        $instance->addListener('snippet.written', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Adapter\\Translation\\TranslatorCacheInvalidate'] ?? $this->getTranslatorCacheInvalidateService());
        }, 1 => 'invalidate'], 0);
        $instance->addListener('snippet.deleted', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Adapter\\Translation\\TranslatorCacheInvalidate'] ?? $this->getTranslatorCacheInvalidateService());
        }, 1 => 'invalidate'], 0);
        $instance->addListener('snippet_set.deleted', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Adapter\\Translation\\TranslatorCacheInvalidate'] ?? $this->getTranslatorCacheInvalidateService());
        }, 1 => 'invalidate'], 0);
        $instance->addListener('shopware.global_business_event', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Log\\LoggingService'] ?? $this->getLoggingServiceService());
        }, 1 => 'logBusinessEvent'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\Acl\\Resource\\AclPermissionValidator'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\Acl\\Resource\\AclPermissionValidator'] = new \Shopware\Core\Framework\Api\Acl\Resource\AclPermissionValidator()));
        }, 1 => 'preValidate'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\CorsListener'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\CorsListener'] = new \Shopware\Core\Framework\Api\EventListener\CorsListener()));
        }, 1 => 'onKernelRequest'], 9999);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\CorsListener'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\CorsListener'] = new \Shopware\Core\Framework\Api\EventListener\CorsListener()));
        }, 1 => 'onKernelResponse'], 9999);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\ResponseExceptionListener'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\ResponseExceptionListener'] = new \Shopware\Core\Framework\Api\EventListener\ResponseExceptionListener(false)));
        }, 1 => 'onKernelException'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\ResponseHeaderListener'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\ResponseHeaderListener'] = new \Shopware\Core\Framework\Api\EventListener\ResponseHeaderListener()));
        }, 1 => 'onResponse'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\ApiVersion\\ApiVersionSubscriber'] ?? $this->getApiVersionSubscriberService());
        }, 1 => 'checkIfVersionIsSupported'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\JsonRequestTransformerListener'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\JsonRequestTransformerListener'] = new \Shopware\Core\Framework\Api\EventListener\JsonRequestTransformerListener()));
        }, 1 => 'onRequest'], 128);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\Authentication\\SalesChannelAuthenticationListener'] ?? $this->getSalesChannelAuthenticationListenerService());
        }, 1 => 'validateRequest'], -2);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\Authentication\\ApiAuthenticationListener'] ?? $this->getApiAuthenticationListenerService());
        }, 1 => 'setupOAuth'], 128);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\Authentication\\ApiAuthenticationListener'] ?? $this->getApiAuthenticationListenerService());
        }, 1 => 'validateRequest'], -2);
        $instance->addListener('user.written', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\Authentication\\UserCredentialsChangedSubscriber'] ?? $this->getUserCredentialsChangedSubscriberService());
        }, 1 => 'onUserWritten'], 0);
        $instance->addListener('user.deleted', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\Authentication\\UserCredentialsChangedSubscriber'] ?? $this->getUserCredentialsChangedSubscriberService());
        }, 1 => 'onUserDeleted'], 0);
        $instance->addListener('custom_field.deleted', [0 => function () {
            return ($this->privates['Shopware\\Core\\System\\CustomField\\CustomFieldService'] ?? $this->getCustomFieldServiceService());
        }, 1 => 'invalidateCache'], 0);
        $instance->addListener('custom_field.written', [0 => function () {
            return ($this->privates['Shopware\\Core\\System\\CustomField\\CustomFieldService'] ?? $this->getCustomFieldServiceService());
        }, 1 => 'invalidateCache'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Event\\EntityWrittenContainerEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\InvalidateCacheSubscriber'] ?? $this->getInvalidateCacheSubscriberService());
        }, 1 => 'entitiesWritten'], -20000);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Event\\EntityWrittenContainerEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\IndexerRegistryInterface'] ?? $this->getIndexerRegistryInterfaceService());
        }, 1 => 'refresh'], 500);
        $instance->addListener('indexing.progress.started', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\RefreshIndexCommand'] ?? $this->getRefreshIndexCommandService());
        }, 1 => 'startProgress'], 0);
        $instance->addListener('indexing.progress.advanced', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\RefreshIndexCommand'] ?? $this->getRefreshIndexCommandService());
        }, 1 => 'advanceProgress'], 0);
        $instance->addListener('indexing.progress.finished', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\RefreshIndexCommand'] ?? $this->getRefreshIndexCommandService());
        }, 1 => 'finishProgress'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Update\\Event\\UpdatePreFinishEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Subscriber\\RegisteredIndexerSubscriber'] ?? $this->getRegisteredIndexerSubscriberService());
        }, 1 => 'runRegisteredIndexers'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Store\\Event\\FirstRunWizardFinishedEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Subscriber\\RegisteredIndexerSubscriber'] ?? $this->getRegisteredIndexerSubscriberService());
        }, 1 => 'runRegisteredIndexers'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\LockValidator'] ?? $this->getLockValidatorService());
        }, 1 => 'preValidate'], 0);
        $instance->addListener('dead_message.loaded', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\MessageQueue\\Subscriber\\DeadMessageLoadedSubscriber'] ?? ($this->privates['Shopware\\Core\\Framework\\MessageQueue\\Subscriber\\DeadMessageLoadedSubscriber'] = new \Shopware\Core\Framework\MessageQueue\Subscriber\DeadMessageLoadedSubscriber()));
        }, 1 => 'unserialize'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPostActivateEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Plugin\\BundleConfigDumper'] ?? $this->getBundleConfigDumperService());
        }, 1 => 'dump'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPostDeactivateEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Plugin\\BundleConfigDumper'] ?? $this->getBundleConfigDumperService());
        }, 1 => 'dump'], 0);
        $instance->addListener('plugin.loaded', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\Plugin\\Subscriber\\PluginLoadedSubscriber'] ?? ($this->privates['Shopware\\Core\\Framework\\Plugin\\Subscriber\\PluginLoadedSubscriber'] = new \Shopware\Core\Framework\Plugin\Subscriber\PluginLoadedSubscriber()));
        }, 1 => 'unserialize'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPostActivateEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Subscriber\\PluginLifecycleSubscriber'] ?? $this->getPluginLifecycleSubscriberService());
        }, 1 => 'afterPluginStateChange'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPostDeactivateEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Subscriber\\PluginLifecycleSubscriber'] ?? $this->getPluginLifecycleSubscriberService());
        }, 1 => 'afterPluginStateChange'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\System\\Language\\LanguageValidator'] ?? $this->getLanguageValidatorService());
        }, 1 => 'preValidate'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PostWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\System\\Language\\LanguageValidator'] ?? $this->getLanguageValidatorService());
        }, 1 => 'postValidate'], 0);
        $instance->addListener('language.deleted', [0 => function () {
            return ($this->privates['Shopware\\Core\\System\\Language\\CachedLanguageLoader'] ?? $this->getCachedLanguageLoaderService());
        }, 1 => 'invalidateCache'], 0);
        $instance->addListener('language.written', [0 => function () {
            return ($this->privates['Shopware\\Core\\System\\Language\\CachedLanguageLoader'] ?? $this->getCachedLanguageLoaderService());
        }, 1 => 'invalidateCache'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\System\\Language\\TranslationValidator'] ?? ($this->privates['Shopware\\Core\\System\\Language\\TranslationValidator'] = new \Shopware\Core\System\Language\TranslationValidator()));
        }, 1 => 'preValidate'], 0);
        $instance->addListener('currency.loaded', [0 => function () {
            return ($this->privates['Shopware\\Core\\System\\Currency\\CurrencyLoadSubscriber'] ?? ($this->privates['Shopware\\Core\\System\\Currency\\CurrencyLoadSubscriber'] = new \Shopware\Core\System\Currency\CurrencyLoadSubscriber()));
        }, 1 => 'setDefault'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\System\\Currency\\CurrencyValidator'] ?? $this->getCurrencyValidatorService());
        }, 1 => 'preValidate'], 0);
        $instance->addListener('media.loaded', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Media\\Subscriber\\MediaLoadedSubscriber'] ?? $this->getMediaLoadedSubscriberService());
        }, 1 => 'unserialize'], 10);
        $instance->addListener('media.loaded', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Media\\Subscriber\\MediaLoadedSubscriber'] ?? $this->getMediaLoadedSubscriberService());
        }, 1 => 'addUrls'], 0);
        $instance->addListener('media_folder_configuration.loaded', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Media\\Subscriber\\MediaFolderConfigLoadedSubscriber'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\Subscriber\\MediaFolderConfigLoadedSubscriber'] = new \Shopware\Core\Content\Media\Subscriber\MediaFolderConfigLoadedSubscriber()));
        }, 1 => 'unserialize'], 10);
        $instance->addListener('media_thumbnail.after_delete', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaThumbnailIndexer'] ?? $this->getMediaThumbnailIndexerService());
        }, 1 => 'onDelete'], 0);
        $instance->addListener('sales_channel.product.loaded', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductSubscriber'] ?? $this->getSalesChannelProductSubscriberService());
        }, 1 => 'loaded'], 0);
        $instance->addListener('Shopware\\Core\\Checkout\\Cart\\Event\\CheckoutOrderPlacedEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductStockIndexer'] ?? $this->getProductStockIndexerService());
        }, 1 => 'orderPlaced'], 0);
        $instance->addListener('Shopware\\Core\\System\\StateMachine\\Event\\StateMachineTransitionEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductStockIndexer'] ?? $this->getProductStockIndexerService());
        }, 1 => 'stateChanged'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductStockIndexer'] ?? $this->getProductStockIndexerService());
        }, 1 => 'triggerChangeSet'], 0);
        $instance->addListener('order_line_item.written', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductStockIndexer'] ?? $this->getProductStockIndexerService());
        }, 1 => 'lineItemWritten'], 0);
        $instance->addListener('order_line_item.deleted', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductStockIndexer'] ?? $this->getProductStockIndexerService());
        }, 1 => 'lineItemWritten'], 0);
        $instance->addListener('Shopware\\Core\\Content\\Product\\Events\\ProductListingCriteriaEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingFeaturesSubscriber'] ?? $this->getProductListingFeaturesSubscriberService());
        }, 1 => 'handleListingRequest'], 100);
        $instance->addListener('Shopware\\Core\\Content\\Product\\Events\\ProductListingCriteriaEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingFeaturesSubscriber'] ?? $this->getProductListingFeaturesSubscriberService());
        }, 1 => 'switchFilter'], -100);
        $instance->addListener('Shopware\\Core\\Content\\Product\\Events\\ProductSuggestCriteriaEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingFeaturesSubscriber'] ?? $this->getProductListingFeaturesSubscriberService());
        }, 1 => 'handleSuggestRequest'], 100);
        $instance->addListener('Shopware\\Core\\Content\\Product\\Events\\ProductSuggestCriteriaEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingFeaturesSubscriber'] ?? $this->getProductListingFeaturesSubscriberService());
        }, 1 => 'switchFilter'], -100);
        $instance->addListener('Shopware\\Core\\Content\\Product\\Events\\ProductSearchCriteriaEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingFeaturesSubscriber'] ?? $this->getProductListingFeaturesSubscriberService());
        }, 1 => 'handleSearchRequest'], 100);
        $instance->addListener('Shopware\\Core\\Content\\Product\\Events\\ProductSearchCriteriaEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingFeaturesSubscriber'] ?? $this->getProductListingFeaturesSubscriberService());
        }, 1 => 'switchFilter'], -100);
        $instance->addListener('Shopware\\Core\\Content\\Product\\Events\\ProductListingResultEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingFeaturesSubscriber'] ?? $this->getProductListingFeaturesSubscriberService());
        }, 1 => 'handleResult'], 0);
        $instance->addListener('Shopware\\Core\\Content\\Product\\Events\\ProductSearchResultEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingFeaturesSubscriber'] ?? $this->getProductListingFeaturesSubscriberService());
        }, 1 => 'handleResult'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Product\\Cart\\ProductLineItemCommandValidator'] ?? $this->getProductLineItemCommandValidatorService());
        }, 1 => 'preValidate'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPostInstallEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\Indexing\\RulePayloadIndexer'] ?? $this->getRulePayloadIndexerService());
        }, 1 => 'refreshPlugin'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPostActivateEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\Indexing\\RulePayloadIndexer'] ?? $this->getRulePayloadIndexerService());
        }, 1 => 'refreshPlugin'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPostUpdateEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\Indexing\\RulePayloadIndexer'] ?? $this->getRulePayloadIndexerService());
        }, 1 => 'refreshPlugin'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPostDeactivateEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\Indexing\\RulePayloadIndexer'] ?? $this->getRulePayloadIndexerService());
        }, 1 => 'refreshPlugin'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPostUninstallEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\Indexing\\RulePayloadIndexer'] ?? $this->getRulePayloadIndexerService());
        }, 1 => 'refreshPlugin'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Rule\\RuleValidator'] ?? $this->getRuleValidatorService());
        }, 1 => 'preValidate'], 0);
        $instance->addListener('rule.loaded', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\RulePayloadSubscriber'] ?? $this->getRulePayloadSubscriberService());
        }, 1 => 'unserialize'], 0);
        $instance->addListener('product_export.written', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\ProductExport\\EventListener\\ProductExportEventListener'] ?? $this->getProductExportEventListenerService());
        }, 1 => 'afterWrite'], 0);
        $instance->addListener('action.mail.send', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\MailTemplate\\Subscriber\\MailSendSubscriber'] ?? $this->getMailSendSubscriberService());
        }, 1 => 'sendMail'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\ImportExportLogValidator'] ?? ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\ImportExportLogValidator'] = new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\ImportExportLogValidator()));
        }, 1 => 'preValidate'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\SystemDefaultValidator'] ?? $this->getSystemDefaultValidatorService());
        }, 1 => 'preValidate'], 0);
        $instance->addListener('media.written', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Entity\\MediaSerializer'] ?? $this->getMediaSerializerService());
        }, 1 => 'persistMedia'], 0);
        $instance->addListener('import_export_file.deleted', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\ImportExport\\Event\\Subscriber\\FileDeletedSubscriber'] ?? $this->getFileDeletedSubscriberService());
        }, 1 => 'onFileDeleted'], 0);
        $instance->addListener('Shopware\\Core\\Content\\ImportExport\\Event\\EnrichExportCriteriaEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Content\\ImportExport\\Event\\Subscriber\\CategoryCriteriaSubscriber'] ?? ($this->privates['Shopware\\Core\\Content\\ImportExport\\Event\\Subscriber\\CategoryCriteriaSubscriber'] = new \Shopware\Core\Content\ImportExport\Event\Subscriber\CategoryCriteriaSubscriber()));
        }, 1 => 'enrich'], 0);
        $instance->addListener('order.written', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Customer\\Subscriber\\CustomerMetaFieldSubscriber'] ?? $this->getCustomerMetaFieldSubscriberService());
        }, 1 => 'fillCustomerMetaDataFields'], 0);
        $instance->addListener('Shopware\\Core\\Checkout\\Customer\\Event\\CustomerLoginEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Customer\\Subscriber\\CustomerRemoteAddressSubscriber'] ?? $this->getCustomerRemoteAddressSubscriberService());
        }, 1 => 'updateRemoteAddressByLogin'], 0);
        $instance->addListener('customer.written', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Customer\\Subscriber\\CustomerTokenSubscriber'] ?? $this->getCustomerTokenSubscriberService());
        }, 1 => 'onCustomerWritten'], 0);
        $instance->addListener('customer.deleted', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Customer\\Subscriber\\CustomerTokenSubscriber'] ?? $this->getCustomerTokenSubscriberService());
        }, 1 => 'onCustomerDeleted'], 0);
        $instance->addListener('payment_method.loaded', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Payment\\DataAbstractionLayer\\PaymentHandlerIdentifierSubscriber'] ?? ($this->privates['Shopware\\Core\\Checkout\\Payment\\DataAbstractionLayer\\PaymentHandlerIdentifierSubscriber'] = new \Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentHandlerIdentifierSubscriber()));
        }, 1 => 'formatHandlerIdentifier'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\PreWriteValidationEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Validator\\PromotionValidator'] ?? $this->getPromotionValidatorService());
        }, 1 => 'preValidate'], 0);
        $instance->addListener('Shopware\\Core\\Checkout\\Cart\\Event\\LineItemAddedEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Subscriber\\Storefront\\StorefrontCartSubscriber'] ?? $this->getStorefrontCartSubscriberService());
        }, 1 => 'onLineItemAdded'], 0);
        $instance->addListener('Shopware\\Core\\Checkout\\Cart\\Event\\LineItemQuantityChangedEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Subscriber\\Storefront\\StorefrontCartSubscriber'] ?? $this->getStorefrontCartSubscriberService());
        }, 1 => 'onLineItemQuantityChanged'], 0);
        $instance->addListener('Shopware\\Core\\Checkout\\Cart\\Event\\LineItemRemovedEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Subscriber\\Storefront\\StorefrontCartSubscriber'] ?? $this->getStorefrontCartSubscriberService());
        }, 1 => 'onLineItemRemoved'], 0);
        $instance->addListener('Shopware\\Core\\Checkout\\Cart\\Event\\CheckoutOrderPlacedEvent', [0 => function () {
            return ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Subscriber\\PromotionIndividualCodeRedeemer'] ?? $this->getPromotionIndividualCodeRedeemerService());
        }, 1 => 'onOrderPlaced'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] ?? $this->getStorefrontSubscriberService());
        }, 1 => 'startSession'], 40);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] ?? $this->getStorefrontSubscriberService());
        }, 1 => 'maintenanceResolver'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] ?? $this->getStorefrontSubscriberService());
        }, 1 => 'showHtmlExceptionResponse'], -100);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] ?? $this->getStorefrontSubscriberService());
        }, 1 => 'customerNotLoggedInHandler'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] ?? $this->getStorefrontSubscriberService());
        }, 1 => 'maintenanceResolver'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] ?? $this->getStorefrontSubscriberService());
        }, 1 => 'preventPageLoadingFromXmlHttpRequest'], -20);
        $instance->addListener('Shopware\\Core\\Checkout\\Customer\\Event\\CustomerLoginEvent', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] ?? $this->getStorefrontSubscriberService());
        }, 1 => 'updateSession'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Event\\BeforeSendResponseEvent', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] ?? $this->getStorefrontSubscriberService());
        }, 1 => 'replaceCsrfToken'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Event\\BeforeSendResponseEvent', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] ?? $this->getStorefrontSubscriberService());
        }, 1 => 'setCanonicalUrl'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Csrf\\CsrfRouteListener'] ?? $this->getCsrfRouteListenerService());
        }, 1 => 'csrfCheck'], -20);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\AffiliateTracking\\AffiliateTrackingListener'] ?? $this->getAffiliateTrackingListenerService());
        }, 1 => 'checkAffiliateTracking'], -21);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Framework\\Cache\\CacheResponseSubscriber'] ?? $this->getCacheResponseSubscriberService());
        }, 1 => 'setResponseCache'], -1500);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPreActivateEvent', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Theme\\Subscriber\\PluginLifecycleSubscriber'] ?? $this->getPluginLifecycleSubscriber2Service());
        }, 1 => 'pluginActivate'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPreUpdateEvent', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Theme\\Subscriber\\PluginLifecycleSubscriber'] ?? $this->getPluginLifecycleSubscriber2Service());
        }, 1 => 'pluginUpdate'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPreDeactivateEvent', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Theme\\Subscriber\\PluginLifecycleSubscriber'] ?? $this->getPluginLifecycleSubscriber2Service());
        }, 1 => 'pluginDeactivateAndUninstall'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Plugin\\Event\\PluginPreUninstallEvent', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Theme\\Subscriber\\PluginLifecycleSubscriber'] ?? $this->getPluginLifecycleSubscriber2Service());
        }, 1 => 'pluginDeactivateAndUninstall'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->services['Shopware\\Storefront\\Theme\\Twig\\ThemeTemplateFinder'] ?? $this->getThemeTemplateFinderService());
        }, 1 => 'requestEvent'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Store\\Event\\FirstRunWizardFinishedEvent', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Theme\\Subscriber\\FirstRunWizardSubscriber'] ?? $this->getFirstRunWizardSubscriberService());
        }, 1 => 'frwFinished'], 0);
        $instance->addListener('Shopware\\Core\\Framework\\Update\\Event\\UpdatePostFinishEvent', [0 => function () {
            return ($this->privates['Shopware\\Storefront\\Theme\\Subscriber\\UpdateSubscriber'] ?? $this->getUpdateSubscriberService());
        }, 1 => 'updateFinished'], 0);
        $instance->addListener('indexing.progress.started', [0 => function () {
            return ($this->privates['Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchIndexingCommand'] ?? $this->getElasticsearchIndexingCommandService());
        }, 1 => 'startProgress'], 0);
        $instance->addListener('indexing.progress.advanced', [0 => function () {
            return ($this->privates['Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchIndexingCommand'] ?? $this->getElasticsearchIndexingCommandService());
        }, 1 => 'advanceProgress'], 0);
        $instance->addListener('indexing.progress.finished', [0 => function () {
            return ($this->privates['Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchIndexingCommand'] ?? $this->getElasticsearchIndexingCommandService());
        }, 1 => 'finishProgress'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['response_listener'] ?? ($this->privates['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8')));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['streamed_response_listener'] ?? ($this->privates['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener()));
        }, 1 => 'onKernelResponse'], -1024);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
        }, 1 => 'setDefaultLocale'], 100);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
        }, 1 => 'onKernelRequest'], 16);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['validate_request_listener'] ?? ($this->privates['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener()));
        }, 1 => 'onKernelRequest'], 256);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['.legacy_resolve_controller_name_subscriber'] ?? $this->get_LegacyResolveControllerNameSubscriberService());
        }, 1 => 'resolveControllerName'], 24);
        $instance->addListener('kernel.controller_arguments', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'onControllerArguments'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'logKernelException'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'onKernelException'], -128);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_aware_listener'] ?? $this->getLocaleAwareListenerService());
        }, 1 => 'onKernelRequest'], 15);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['locale_aware_listener'] ?? $this->getLocaleAwareListenerService());
        }, 1 => 'onKernelFinishRequest'], -15);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['console.error_listener'] ?? $this->getConsole_ErrorListenerService());
        }, 1 => 'onConsoleError'], -128);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['console.error_listener'] ?? $this->getConsole_ErrorListenerService());
        }, 1 => 'onConsoleTerminate'], -128);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['console.suggest_missing_package_subscriber'] ?? ($this->privates['console.suggest_missing_package_subscriber'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber()));
        }, 1 => 'onConsoleError'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
        }, 1 => 'onKernelRequest'], 128);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
        }, 1 => 'onKernelResponse'], -1000);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
        }, 1 => 'onFinishRequest'], 0);
        $instance->addListener('Symfony\\Component\\Messenger\\Event\\WorkerMessageFailedEvent', [0 => function () {
            return ($this->privates['messenger.retry.send_failed_message_for_retry_listener'] ?? $this->getMessenger_Retry_SendFailedMessageForRetryListenerService());
        }, 1 => 'onMessageFailed'], 100);
        $instance->addListener('Symfony\\Component\\Messenger\\Event\\WorkerRunningEvent', [0 => function () {
            return ($this->privates['messenger.listener.dispatch_pcntl_signal_listener'] ?? ($this->privates['messenger.listener.dispatch_pcntl_signal_listener'] = new \Symfony\Component\Messenger\EventListener\DispatchPcntlSignalListener()));
        }, 1 => 'onWorkerRunning'], 100);
        $instance->addListener('Symfony\\Component\\Messenger\\Event\\WorkerStartedEvent', [0 => function () {
            return ($this->privates['messenger.listener.stop_worker_on_restart_signal_listener'] ?? $this->getMessenger_Listener_StopWorkerOnRestartSignalListenerService());
        }, 1 => 'onWorkerStarted'], 0);
        $instance->addListener('Symfony\\Component\\Messenger\\Event\\WorkerRunningEvent', [0 => function () {
            return ($this->privates['messenger.listener.stop_worker_on_restart_signal_listener'] ?? $this->getMessenger_Listener_StopWorkerOnRestartSignalListenerService());
        }, 1 => 'onWorkerRunning'], 0);
        $instance->addListener('Symfony\\Component\\Messenger\\Event\\WorkerStartedEvent', [0 => function () {
            return ($this->privates['messenger.listener.stop_worker_on_sigterm_signal_listener'] ?? ($this->privates['messenger.listener.stop_worker_on_sigterm_signal_listener'] = new \Symfony\Component\Messenger\EventListener\StopWorkerOnSigtermSignalListener()));
        }, 1 => 'onWorkerStarted'], 100);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['esi_listener'] ?? $this->getEsiListenerService());
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['fragment.listener'] ?? $this->getFragment_ListenerService());
        }, 1 => 'onKernelRequest'], 48);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
        }, 1 => 'configure'], 2048);
        $instance->addListener('console.command', [0 => function () {
            return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
        }, 1 => 'configure'], 2048);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelRequest'], 32);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelException'], -64);
        $instance->addListener('console.command', [0 => function () {
            return ($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService());
        }, 1 => 'onCommand'], 255);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService());
        }, 1 => 'onTerminate'], -255);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['swiftmailer.email_sender.listener'] ?? $this->getSwiftmailer_EmailSender_ListenerService());
        }, 1 => 'onException'], 0);
        $instance->addListener('kernel.terminate', [0 => function () {
            return ($this->privates['swiftmailer.email_sender.listener'] ?? $this->getSwiftmailer_EmailSender_ListenerService());
        }, 1 => 'onTerminate'], 0);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['swiftmailer.email_sender.listener'] ?? $this->getSwiftmailer_EmailSender_ListenerService());
        }, 1 => 'onException'], 0);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['swiftmailer.email_sender.listener'] ?? $this->getSwiftmailer_EmailSender_ListenerService());
        }, 1 => 'onTerminate'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['sensio_framework_extra.controller.listener'] ?? $this->getSensioFrameworkExtra_Controller_ListenerService());
        }, 1 => 'onKernelController'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['sensio_framework_extra.converter.listener'] ?? $this->getSensioFrameworkExtra_Converter_ListenerService());
        }, 1 => 'onKernelController'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['sensio_framework_extra.view.listener'] ?? $this->getSensioFrameworkExtra_View_ListenerService());
        }, 1 => 'onKernelController'], -128);
        $instance->addListener('kernel.view', [0 => function () {
            return ($this->privates['sensio_framework_extra.view.listener'] ?? $this->getSensioFrameworkExtra_View_ListenerService());
        }, 1 => 'onKernelView'], 0);
        $instance->addListener('kernel.controller', [0 => function () {
            return ($this->privates['sensio_framework_extra.cache.listener'] ?? ($this->privates['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener()));
        }, 1 => 'onKernelController'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['sensio_framework_extra.cache.listener'] ?? ($this->privates['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener()));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.controller_arguments', [0 => function () {
            return ($this->privates['framework_extra_bundle.event.is_granted'] ?? $this->getFrameworkExtraBundle_Event_IsGrantedService());
        }, 1 => 'onKernelControllerArguments'], 0);
        $instance->addListener('kernel.view', [0 => function () {
            return ($this->privates['sensio_framework_extra.psr7.listener.response'] ?? $this->getSensioFrameworkExtra_Psr7_Listener_ResponseService());
        }, 1 => 'onKernelView'], 0);
        $instance->addListener('kernel.terminate', [0 => function () {
            return ($this->privates['enqueue.client.default.flush_spool_producer_listener'] ?? $this->getEnqueue_Client_Default_FlushSpoolProducerListenerService());
        }, 1 => 'flushMessages'], 0);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['enqueue.client.default.flush_spool_producer_listener'] ?? $this->getEnqueue_Client_Default_FlushSpoolProducerListenerService());
        }, 1 => 'flushMessages'], 0);

        return $instance;
    }

    /*
     * Gets the public 'filesystem' shared service.
     *
     * @return \Symfony\Component\Filesystem\Filesystem
     */
    protected function getFilesystemService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/filesystem/Filesystem.php';

        return $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }

    /*
     * Gets the public 'http_kernel' shared service.
     *
     * @return \Symfony\Component\HttpKernel\HttpKernel
     */
    protected function getHttpKernelService()
    {
        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\HttpKernel(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()), ($this->privates['.legacy_controller_name_converter'] ?? ($this->privates['.legacy_controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(($this->services['kernel'] ?? $this->get('kernel', 1)), false)))), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), new \Symfony\Component\HttpKernel\Controller\ArgumentResolver(($this->privates['argument_metadata_factory'] ?? ($this->privates['argument_metadata_factory'] = new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory())), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\CartValueResolver'] ?? $this->getCartValueResolverService());
            yield 1 => ($this->privates['Shopware\\Core\\Framework\\Routing\\QueryDataBagResolver'] ?? ($this->privates['Shopware\\Core\\Framework\\Routing\\QueryDataBagResolver'] = new \Shopware\Core\Framework\Routing\QueryDataBagResolver()));
            yield 2 => ($this->privates['Shopware\\Core\\Framework\\Routing\\RequestDataBagResolver'] ?? ($this->privates['Shopware\\Core\\Framework\\Routing\\RequestDataBagResolver'] = new \Shopware\Core\Framework\Routing\RequestDataBagResolver()));
            yield 3 => ($this->privates['Shopware\\Core\\Framework\\Api\\Context\\ContextValueResolver'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\Context\\ContextValueResolver'] = new \Shopware\Core\Framework\Api\Context\ContextValueResolver()));
            yield 4 => ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextValueResolver'] ?? ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextValueResolver'] = new \Shopware\Core\System\SalesChannel\Context\SalesChannelContextValueResolver()));
            yield 5 => ($this->privates['argument_resolver.request_attribute'] ?? ($this->privates['argument_resolver.request_attribute'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver()));
            yield 6 => ($this->privates['Shopware\\Core\\Framework\\Api\\Response\\ResponseFactoryInterfaceValueResolver'] ?? $this->getResponseFactoryInterfaceValueResolverService());
            yield 7 => ($this->privates['argument_resolver.request'] ?? ($this->privates['argument_resolver.request'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver()));
            yield 8 => ($this->privates['argument_resolver.session'] ?? ($this->privates['argument_resolver.session'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver()));
            yield 9 => ($this->privates['sensio_framework_extra.psr7.argument_value_resolver.server_request'] ?? $this->getSensioFrameworkExtra_Psr7_ArgumentValueResolver_ServerRequestService());
            yield 10 => ($this->privates['argument_resolver.service'] ?? $this->getArgumentResolver_ServiceService());
            yield 11 => ($this->privates['argument_resolver.default'] ?? ($this->privates['argument_resolver.default'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver()));
            yield 12 => ($this->privates['argument_resolver.variadic'] ?? ($this->privates['argument_resolver.variadic'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver()));
        }, 13)));
    }

    /*
     * Gets the public 'import_export_file.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getImportExportFile_RepositoryService()
    {
        return $this->services['import_export_file.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportFile\\ImportExportFileDefinition'] ?? $this->getImportExportFileDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'import_export_log.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getImportExportLog_RepositoryService()
    {
        return $this->services['import_export_log.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportLog\\ImportExportLogDefinition'] ?? $this->getImportExportLogDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'import_export_profile.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getImportExportProfile_RepositoryService()
    {
        return $this->services['import_export_profile.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\ImportExport\\ImportExportProfileDefinition'] ?? $this->getImportExportProfileDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'integration.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getIntegration_RepositoryService()
    {
        return $this->services['integration.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Integration\\IntegrationDefinition'] ?? $this->getIntegrationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'language.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getLanguage_RepositoryService()
    {
        return $this->services['language.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Language\\LanguageDefinition'] ?? $this->getLanguageDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'locale.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getLocale_RepositoryService()
    {
        return $this->services['locale.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Locale\\LocaleDefinition'] ?? $this->getLocaleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'locale_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getLocaleTranslation_RepositoryService()
    {
        return $this->services['locale_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Locale\\Aggregate\\LocaleTranslation\\LocaleTranslationDefinition'] ?? $this->getLocaleTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'log_entry.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getLogEntry_RepositoryService()
    {
        return $this->services['log_entry.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\Log\\LogEntryDefinition'] ?? $this->getLogEntryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'mail_header_footer.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMailHeaderFooter_RepositoryService()
    {
        return $this->services['mail_header_footer.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooter\\MailHeaderFooterDefinition'] ?? $this->getMailHeaderFooterDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'mail_header_footer_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMailHeaderFooterTranslation_RepositoryService()
    {
        return $this->services['mail_header_footer_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooterTranslation\\MailHeaderFooterTranslationDefinition'] ?? $this->getMailHeaderFooterTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'mail_template.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMailTemplate_RepositoryService()
    {
        return $this->services['mail_template.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\MailTemplate\\MailTemplateDefinition'] ?? $this->getMailTemplateDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'mail_template_media.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMailTemplateMedia_RepositoryService()
    {
        return $this->services['mail_template_media.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateMedia\\MailTemplateMediaDefinition'] ?? $this->getMailTemplateMediaDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'mail_template_sales_channel.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMailTemplateSalesChannel_RepositoryService()
    {
        return $this->services['mail_template_sales_channel.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateSalesChannel\\MailTemplateSalesChannelDefinition'] ?? $this->getMailTemplateSalesChannelDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'mail_template_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMailTemplateTranslation_RepositoryService()
    {
        return $this->services['mail_template_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTranslation\\MailTemplateTranslationDefinition'] ?? $this->getMailTemplateTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'mail_template_type.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMailTemplateType_RepositoryService()
    {
        return $this->services['mail_template_type.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateType\\MailTemplateTypeDefinition'] ?? $this->getMailTemplateTypeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'mail_template_type_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMailTemplateTypeTranslation_RepositoryService()
    {
        return $this->services['mail_template_type_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTypeTranslation\\MailTemplateTypeTranslationDefinition'] ?? $this->getMailTemplateTypeTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'main_category.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMainCategory_RepositoryService()
    {
        return $this->services['main_category.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Seo\\MainCategory\\MainCategoryDefinition'] ?? $this->getMainCategoryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'media.repository' shared service.
     *
     * @return \Shopware\Core\Content\Media\DataAbstractionLayer\MediaRepositoryDecorator
     */
    protected function getMedia_RepositoryService()
    {
        $a = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        return $this->services['media.repository'] = new \Shopware\Core\Content\Media\DataAbstractionLayer\MediaRepositoryDecorator(new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Media\\MediaDefinition'] ?? $this->getMediaDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), $a), $a, ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\UrlGeneratorInterface'] ?? $this->getUrlGeneratorInterfaceService()), ($this->services['media_thumbnail.repository'] ?? $this->getMediaThumbnail_RepositoryService()), ($this->services['message_bus'] ?? $this->getMessageBusService()));
    }

    /*
     * Gets the public 'media_default_folder.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMediaDefaultFolder_RepositoryService()
    {
        return $this->services['media_default_folder.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaDefaultFolder\\MediaDefaultFolderDefinition'] ?? $this->getMediaDefaultFolderDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'media_folder.repository' shared service.
     *
     * @return \Shopware\Core\Content\Media\DataAbstractionLayer\MediaFolderRepositoryDecorator
     */
    protected function getMediaFolder_RepositoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/DataAbstractionLayer/MediaFolderRepositoryDecorator.php';

        return $this->services['media_folder.repository'] = new \Shopware\Core\Content\Media\DataAbstractionLayer\MediaFolderRepositoryDecorator(new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolder\\MediaFolderDefinition'] ?? $this->getMediaFolderDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService())), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()));
    }

    /*
     * Gets the public 'media_folder_configuration.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMediaFolderConfiguration_RepositoryService()
    {
        return $this->services['media_folder_configuration.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfiguration\\MediaFolderConfigurationDefinition'] ?? $this->getMediaFolderConfigurationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'media_folder_configuration_media_thumbnail_size.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMediaFolderConfigurationMediaThumbnailSize_RepositoryService()
    {
        return $this->services['media_folder_configuration_media_thumbnail_size.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfigurationMediaThumbnailSize\\MediaFolderConfigurationMediaThumbnailSizeDefinition'] ?? $this->getMediaFolderConfigurationMediaThumbnailSizeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'media_tag.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMediaTag_RepositoryService()
    {
        return $this->services['media_tag.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaTag\\MediaTagDefinition'] ?? $this->getMediaTagDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'media_thumbnail.repository' shared service.
     *
     * @return \Shopware\Core\Content\Media\DataAbstractionLayer\MediaThumbnailRepositoryDecorator
     */
    protected function getMediaThumbnail_RepositoryService()
    {
        $a = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        return $this->services['media_thumbnail.repository'] = new \Shopware\Core\Content\Media\DataAbstractionLayer\MediaThumbnailRepositoryDecorator(new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnail\\MediaThumbnailDefinition'] ?? $this->getMediaThumbnailDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), $a), $a, ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\UrlGeneratorInterface'] ?? $this->getUrlGeneratorInterfaceService()), ($this->services['message_bus'] ?? $this->getMessageBusService()));
    }

    /*
     * Gets the public 'media_thumbnail_size.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMediaThumbnailSize_RepositoryService()
    {
        return $this->services['media_thumbnail_size.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnailSize\\MediaThumbnailSizeDefinition'] ?? $this->getMediaThumbnailSizeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'media_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMediaTranslation_RepositoryService()
    {
        return $this->services['media_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Media\\Aggregate\\MediaTranslation\\MediaTranslationDefinition'] ?? $this->getMediaTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'message_bus' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\MonitoringBusDecorator
     */
    protected function getMessageBusService()
    {
        return $this->services['message_bus'] = new \Shopware\Core\Framework\MessageQueue\MonitoringBusDecorator(new \Symfony\Component\Messenger\MessageBus(new RewindableGenerator(function () {
            yield 0 => ($this->privates['messenger.bus.shopware.middleware.add_bus_name_stamp_middleware'] ?? ($this->privates['messenger.bus.shopware.middleware.add_bus_name_stamp_middleware'] = new \Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware('messenger.bus.shopware')));
            yield 1 => ($this->privates['messenger.middleware.reject_redelivered_message_middleware'] ?? ($this->privates['messenger.middleware.reject_redelivered_message_middleware'] = new \Symfony\Component\Messenger\Middleware\RejectRedeliveredMessageMiddleware()));
            yield 2 => ($this->privates['messenger.middleware.dispatch_after_current_bus'] ?? ($this->privates['messenger.middleware.dispatch_after_current_bus'] = new \Symfony\Component\Messenger\Middleware\DispatchAfterCurrentBusMiddleware()));
            yield 3 => ($this->privates['messenger.middleware.failed_message_processing_middleware'] ?? ($this->privates['messenger.middleware.failed_message_processing_middleware'] = new \Symfony\Component\Messenger\Middleware\FailedMessageProcessingMiddleware()));
            yield 4 => ($this->privates['Shopware\\Core\\Framework\\MessageQueue\\Middleware\\RetryMiddleware'] ?? $this->getRetryMiddlewareService());
            yield 5 => ($this->privates['messenger.middleware.send_message'] ?? $this->getMessenger_Middleware_SendMessageService());
            yield 6 => ($this->privates['messenger.bus.shopware.middleware.handle_message'] ?? $this->getMessenger_Bus_Shopware_Middleware_HandleMessageService());
        }, 7)), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the public 'message_queue_stats.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getMessageQueueStats_RepositoryService()
    {
        return $this->services['message_queue_stats.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\MessageQueue\\MessageQueueStatsDefinition'] ?? $this->getMessageQueueStatsDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'monolog.logger.business_events' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_BusinessEventsService()
    {
        $this->services['monolog.logger.business_events'] = $instance = new \Symfony\Bridge\Monolog\Logger('business_events');

        $instance->pushHandler(($this->privates['monolog.handler.business_event_handler_buffer'] ?? $this->getMonolog_Handler_BusinessEventHandlerBufferService()));
        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /*
     * Gets the public 'newsletter_recipient.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getNewsletterRecipient_RepositoryService()
    {
        return $this->services['newsletter_recipient.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipient\\NewsletterRecipientDefinition'] ?? $this->getNewsletterRecipientDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'newsletter_recipient_tag.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getNewsletterRecipientTag_RepositoryService()
    {
        return $this->services['newsletter_recipient_tag.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipientTag\\NewsletterRecipientTagDefinition'] ?? $this->getNewsletterRecipientTagDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'number_range.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getNumberRange_RepositoryService()
    {
        return $this->services['number_range.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\NumberRange\\NumberRangeDefinition'] ?? $this->getNumberRangeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'number_range_sales_channel.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getNumberRangeSalesChannel_RepositoryService()
    {
        return $this->services['number_range_sales_channel.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeSalesChannel\\NumberRangeSalesChannelDefinition'] ?? $this->getNumberRangeSalesChannelDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'number_range_state.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getNumberRangeState_RepositoryService()
    {
        return $this->services['number_range_state.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeState\\NumberRangeStateDefinition'] ?? $this->getNumberRangeStateDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'number_range_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getNumberRangeTranslation_RepositoryService()
    {
        return $this->services['number_range_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTranslation\\NumberRangeTranslationDefinition'] ?? $this->getNumberRangeTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'number_range_type.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getNumberRangeType_RepositoryService()
    {
        return $this->services['number_range_type.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeType\\NumberRangeTypeDefinition'] ?? $this->getNumberRangeTypeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'number_range_type_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getNumberRangeTypeTranslation_RepositoryService()
    {
        return $this->services['number_range_type_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTypeTranslation\\NumberRangeTypeTranslationDefinition'] ?? $this->getNumberRangeTypeTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'order.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getOrder_RepositoryService()
    {
        return $this->services['order.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Order\\OrderDefinition'] ?? $this->getOrderDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'order_address.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getOrderAddress_RepositoryService()
    {
        return $this->services['order_address.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderAddress\\OrderAddressDefinition'] ?? $this->getOrderAddressDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'order_customer.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getOrderCustomer_RepositoryService()
    {
        return $this->services['order_customer.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderCustomer\\OrderCustomerDefinition'] ?? $this->getOrderCustomerDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'order_delivery.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getOrderDelivery_RepositoryService()
    {
        return $this->services['order_delivery.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDelivery\\OrderDeliveryDefinition'] ?? $this->getOrderDeliveryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'order_delivery_position.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getOrderDeliveryPosition_RepositoryService()
    {
        return $this->services['order_delivery_position.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDeliveryPosition\\OrderDeliveryPositionDefinition'] ?? $this->getOrderDeliveryPositionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'order_line_item.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getOrderLineItem_RepositoryService()
    {
        return $this->services['order_line_item.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderLineItem\\OrderLineItemDefinition'] ?? $this->getOrderLineItemDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'order_tag.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getOrderTag_RepositoryService()
    {
        return $this->services['order_tag.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTag\\OrderTagDefinition'] ?? $this->getOrderTagDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'order_transaction.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getOrderTransaction_RepositoryService()
    {
        return $this->services['order_transaction.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionDefinition'] ?? $this->getOrderTransactionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'payment_method.repository' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentMethodRepositoryDecorator
     */
    protected function getPaymentMethod_RepositoryService()
    {
        return $this->services['payment_method.repository'] = new \Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentMethodRepositoryDecorator(new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Payment\\PaymentMethodDefinition'] ?? $this->getPaymentMethodDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService())));
    }

    /*
     * Gets the public 'payment_method_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPaymentMethodTranslation_RepositoryService()
    {
        return $this->services['payment_method_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Payment\\Aggregate\\PaymentMethodTranslation\\PaymentMethodTranslationDefinition'] ?? $this->getPaymentMethodTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'plugin.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPlugin_RepositoryService()
    {
        return $this->services['plugin.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\Plugin\\PluginDefinition'] ?? $this->getPluginDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'plugin_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPluginTranslation_RepositoryService()
    {
        return $this->services['plugin_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\Plugin\\Aggregate\\PluginTranslation\\PluginTranslationDefinition'] ?? $this->getPluginTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProduct_RepositoryService()
    {
        return $this->services['product.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_category.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductCategory_RepositoryService()
    {
        return $this->services['product_category.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategory\\ProductCategoryDefinition'] ?? $this->getProductCategoryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_category_tree.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductCategoryTree_RepositoryService()
    {
        return $this->services['product_category_tree.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategoryTree\\ProductCategoryTreeDefinition'] ?? $this->getProductCategoryTreeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_configurator_setting.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductConfiguratorSetting_RepositoryService()
    {
        return $this->services['product_configurator_setting.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductConfiguratorSetting\\ProductConfiguratorSettingDefinition'] ?? $this->getProductConfiguratorSettingDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_cross_selling.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductCrossSelling_RepositoryService()
    {
        return $this->services['product_cross_selling.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSelling\\ProductCrossSellingDefinition'] ?? $this->getProductCrossSellingDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_cross_selling_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductCrossSellingTranslation_RepositoryService()
    {
        return $this->services['product_cross_selling_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSellingTranslation\\ProductCrossSellingTranslationDefinition'] ?? $this->getProductCrossSellingTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_export.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductExport_RepositoryService()
    {
        return $this->services['product_export.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\ProductExport\\ProductExportDefinition'] ?? $this->getProductExportDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_keyword_dictionary.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductKeywordDictionary_RepositoryService()
    {
        return $this->services['product_keyword_dictionary.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductKeywordDictionary\\ProductKeywordDictionaryDefinition'] ?? $this->getProductKeywordDictionaryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_manufacturer.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductManufacturer_RepositoryService()
    {
        return $this->services['product_manufacturer.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturer\\ProductManufacturerDefinition'] ?? $this->getProductManufacturerDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_manufacturer_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductManufacturerTranslation_RepositoryService()
    {
        return $this->services['product_manufacturer_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturerTranslation\\ProductManufacturerTranslationDefinition'] ?? $this->getProductManufacturerTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_media.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductMedia_RepositoryService()
    {
        return $this->services['product_media.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductMedia\\ProductMediaDefinition'] ?? $this->getProductMediaDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_option.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductOption_RepositoryService()
    {
        return $this->services['product_option.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductOption\\ProductOptionDefinition'] ?? $this->getProductOptionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_price.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductPrice_RepositoryService()
    {
        return $this->services['product_price.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductPrice\\ProductPriceDefinition'] ?? $this->getProductPriceDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_property.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductProperty_RepositoryService()
    {
        return $this->services['product_property.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductProperty\\ProductPropertyDefinition'] ?? $this->getProductPropertyDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_review.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductReview_RepositoryService()
    {
        return $this->services['product_review.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductReview\\ProductReviewDefinition'] ?? $this->getProductReviewDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_search_keyword.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductSearchKeyword_RepositoryService()
    {
        return $this->services['product_search_keyword.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductSearchKeyword\\ProductSearchKeywordDefinition'] ?? $this->getProductSearchKeywordDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_stream.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductStream_RepositoryService()
    {
        return $this->services['product_stream.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\ProductStream\\ProductStreamDefinition'] ?? $this->getProductStreamDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_stream_filter.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductStreamFilter_RepositoryService()
    {
        return $this->services['product_stream_filter.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamFilter\\ProductStreamFilterDefinition'] ?? $this->getProductStreamFilterDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_stream_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductStreamTranslation_RepositoryService()
    {
        return $this->services['product_stream_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamTranslation\\ProductStreamTranslationDefinition'] ?? $this->getProductStreamTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_tag.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductTag_RepositoryService()
    {
        return $this->services['product_tag.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductTag\\ProductTagDefinition'] ?? $this->getProductTagDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductTranslation_RepositoryService()
    {
        return $this->services['product_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductTranslation\\ProductTranslationDefinition'] ?? $this->getProductTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'product_visibility.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getProductVisibility_RepositoryService()
    {
        return $this->services['product_visibility.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductVisibility\\ProductVisibilityDefinition'] ?? $this->getProductVisibilityDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotion_RepositoryService()
    {
        return $this->services['promotion.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\PromotionDefinition'] ?? $this->getPromotionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_cart_rule.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionCartRule_RepositoryService()
    {
        return $this->services['promotion_cart_rule.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionCartRule\\PromotionCartRuleDefinition'] ?? $this->getPromotionCartRuleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_discount.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionDiscount_RepositoryService()
    {
        return $this->services['promotion_discount.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscount\\PromotionDiscountDefinition'] ?? $this->getPromotionDiscountDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_discount_prices.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionDiscountPrices_RepositoryService()
    {
        return $this->services['promotion_discount_prices.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountPrice\\PromotionDiscountPriceDefinition'] ?? $this->getPromotionDiscountPriceDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_discount_rule.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionDiscountRule_RepositoryService()
    {
        return $this->services['promotion_discount_rule.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountRule\\PromotionDiscountRuleDefinition'] ?? $this->getPromotionDiscountRuleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_individual_code.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionIndividualCode_RepositoryService()
    {
        return $this->services['promotion_individual_code.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionIndividualCode\\PromotionIndividualCodeDefinition'] ?? $this->getPromotionIndividualCodeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_order_rule.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionOrderRule_RepositoryService()
    {
        return $this->services['promotion_order_rule.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionOrderRule\\PromotionOrderRuleDefinition'] ?? $this->getPromotionOrderRuleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_persona_customer.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionPersonaCustomer_RepositoryService()
    {
        return $this->services['promotion_persona_customer.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaCustomer\\PromotionPersonaCustomerDefinition'] ?? $this->getPromotionPersonaCustomerDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_persona_rule.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionPersonaRule_RepositoryService()
    {
        return $this->services['promotion_persona_rule.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaRule\\PromotionPersonaRuleDefinition'] ?? $this->getPromotionPersonaRuleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_sales_channel.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionSalesChannel_RepositoryService()
    {
        return $this->services['promotion_sales_channel.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSalesChannel\\PromotionSalesChannelDefinition'] ?? $this->getPromotionSalesChannelDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_setgroup.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionSetgroup_RepositoryService()
    {
        return $this->services['promotion_setgroup.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroup\\PromotionSetGroupDefinition'] ?? $this->getPromotionSetGroupDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_setgroup_rule.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionSetgroupRule_RepositoryService()
    {
        return $this->services['promotion_setgroup_rule.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroupRule\\PromotionSetGroupRuleDefinition'] ?? $this->getPromotionSetGroupRuleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'promotion_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPromotionTranslation_RepositoryService()
    {
        return $this->services['promotion_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionTranslation\\PromotionTranslationDefinition'] ?? $this->getPromotionTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'property_group.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPropertyGroup_RepositoryService()
    {
        return $this->services['property_group.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Property\\PropertyGroupDefinition'] ?? $this->getPropertyGroupDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'property_group_option.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPropertyGroupOption_RepositoryService()
    {
        return $this->services['property_group_option.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOption\\PropertyGroupOptionDefinition'] ?? $this->getPropertyGroupOptionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'property_group_option_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPropertyGroupOptionTranslation_RepositoryService()
    {
        return $this->services['property_group_option_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOptionTranslation\\PropertyGroupOptionTranslationDefinition'] ?? $this->getPropertyGroupOptionTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'property_group_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getPropertyGroupTranslation_RepositoryService()
    {
        return $this->services['property_group_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupTranslation\\PropertyGroupTranslationDefinition'] ?? $this->getPropertyGroupTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'request_stack' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack
     */
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }

    /*
     * Gets the public 'router' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Routing\Router
     */
    protected function getRouterService()
    {
        return $this->services['router'] = new \Shopware\Storefront\Framework\Routing\Router(($this->privates['router.default'] ?? $this->getRouter_DefaultService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /*
     * Gets the public 'routing.loader' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader
     */
    protected function getRouting_LoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/Loader/Loader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/Loader/DelegatingLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Routing/DelegatingLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/Loader/LoaderResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/Loader/LoaderResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Route/ApiRouteLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/XmlFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/FileLocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/FileLocator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Config/FileLocator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/YamlFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/PhpFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/GlobFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/DirectoryLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/ObjectLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/ContainerLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Routing/LegacyRouteLoaderContainer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/AnnotationClassLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Routing/AnnotatedRouteControllerLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/AnnotationFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/routing/Loader/AnnotationDirectoryLoader.php';

        $a = new \Symfony\Component\Config\Loader\LoaderResolver();

        $b = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), (\dirname(__DIR__, 4).'/src/Resources'), [0 => (\dirname(__DIR__, 4).'/src')], false);
        $c = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));

        $a->addLoader(new \Shopware\Core\Framework\Api\Route\ApiRouteLoader(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService())));
        $a->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\GlobFileLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($b));
        $a->addLoader(new \Symfony\Component\Routing\Loader\ContainerLoader(new \Symfony\Bundle\FrameworkBundle\Routing\LegacyRouteLoaderContainer($this, new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'kernel' => ['services', 'kernel', 'getKernelService', false],
        ], [
            'kernel' => 'Shopware\\Production\\Kernel',
        ]))));
        $a->addLoader($c);
        $a->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($b, $c));
        $a->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($b, $c));

        return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($a, [], ($this->privates['.legacy_controller_name_converter'] ?? ($this->privates['.legacy_controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(($this->services['kernel'] ?? $this->get('kernel', 1)), false))));
    }

    /*
     * Gets the public 'rule.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getRule_RepositoryService()
    {
        return $this->services['rule.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Rule\\RuleDefinition'] ?? $this->getRuleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'rule_condition.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getRuleCondition_RepositoryService()
    {
        return $this->services['rule_condition.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Rule\\Aggregate\\RuleCondition\\RuleConditionDefinition'] ?? $this->getRuleConditionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.category.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_Category_RepositoryService()
    {
        return $this->services['sales_channel.category.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\Content\\Category\\SalesChannel\\SalesChannelCategoryDefinition'] ?? $this->getSalesChannelCategoryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.country.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_Country_RepositoryService()
    {
        return $this->services['sales_channel.country.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\System\\Country\\SalesChannel\\SalesChannelCountryDefinition'] ?? $this->getSalesChannelCountryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.country_state.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_CountryState_RepositoryService()
    {
        return $this->services['sales_channel.country_state.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\System\\Country\\Aggregate\\CountryState\\SalesChannel\\SalesChannelCountryStateDefinition'] ?? $this->getSalesChannelCountryStateDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.currency.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_Currency_RepositoryService()
    {
        return $this->services['sales_channel.currency.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\System\\Currency\\SalesChannel\\SalesChannelCurrencyDefinition'] ?? $this->getSalesChannelCurrencyDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.language.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_Language_RepositoryService()
    {
        return $this->services['sales_channel.language.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\System\\Language\\SalesChannel\\SalesChannelLanguageDefinition'] ?? $this->getSalesChannelLanguageDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.main_category.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_MainCategory_RepositoryService()
    {
        return $this->services['sales_channel.main_category.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\Content\\Seo\\MainCategory\\SalesChannel\\SalesChannelMainCategoryDefinition'] ?? $this->getSalesChannelMainCategoryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.payment_method.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_PaymentMethod_RepositoryService()
    {
        return $this->services['sales_channel.payment_method.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\Checkout\\Payment\\SalesChannel\\SalesChannelPaymentMethodDefinition'] ?? $this->getSalesChannelPaymentMethodDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.product.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_Product_RepositoryService()
    {
        return $this->services['sales_channel.product.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductDefinition'] ?? $this->getSalesChannelProductDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannel_RepositoryService()
    {
        return $this->services['sales_channel.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\SalesChannelDefinition'] ?? $this->getSalesChannelDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.salutation.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_Salutation_RepositoryService()
    {
        return $this->services['sales_channel.salutation.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\System\\Salutation\\SalesChannel\\SalesChannelSalutationDefinition'] ?? $this->getSalesChannelSalutationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.seo_url.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_SeoUrl_RepositoryService()
    {
        return $this->services['sales_channel.seo_url.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\Content\\Seo\\SeoUrl\\SalesChannel\\SalesChannelSeoUrlDefinition'] ?? $this->getSalesChannelSeoUrlDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel.shipping_method.repository' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository
     */
    protected function getSalesChannel_ShippingMethod_RepositoryService()
    {
        return $this->services['sales_channel.shipping_method.repository'] = new \Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository(($this->services['Shopware\\Core\\Checkout\\Shipping\\SalesChannel\\SalesChannelShippingMethodDefinition'] ?? $this->getSalesChannelShippingMethodDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel_country.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannelCountry_RepositoryService()
    {
        return $this->services['sales_channel_country.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCountry\\SalesChannelCountryDefinition'] ?? $this->getSalesChannelCountryDefinition2Service()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel_currency.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannelCurrency_RepositoryService()
    {
        return $this->services['sales_channel_currency.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCurrency\\SalesChannelCurrencyDefinition'] ?? $this->getSalesChannelCurrencyDefinition2Service()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition
     */
    protected function getCustomerAddressDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerAddress\\CustomerAddressDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition
     */
    protected function getCustomerGroupTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Aggregate/CustomerGroupTranslation/CustomerGroupTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroupTranslation\\CustomerGroupTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition
     */
    protected function getCustomerGroupDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerGroup\\CustomerGroupDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition
     */
    protected function getCustomerRecoveryDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Aggregate/CustomerRecovery/CustomerRecoveryDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerRecovery\\CustomerRecoveryDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition
     */
    protected function getCustomerTagDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Aggregate/CustomerTag/CustomerTagDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\Aggregate\\CustomerTag\\CustomerTagDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Customer\CustomerDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\CustomerDefinition
     */
    protected function getCustomerDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Customer\\CustomerDefinition'] = $instance = new \Shopware\Core\Checkout\Customer\CustomerDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition
     */
    protected function getDocumentBaseConfigSalesChannelDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Aggregate/DocumentBaseConfigSalesChannel/DocumentBaseConfigSalesChannelDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfigSalesChannel\\DocumentBaseConfigSalesChannelDefinition'] = $instance = new \Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition
     */
    protected function getDocumentBaseConfigDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Aggregate/DocumentBaseConfig/DocumentBaseConfigDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentBaseConfig\\DocumentBaseConfigDefinition'] = $instance = new \Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition
     */
    protected function getDocumentTypeTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Aggregate/DocumentTypeTranslation/DocumentTypeTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentTypeTranslation\\DocumentTypeTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition
     */
    protected function getDocumentTypeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Aggregate/DocumentType/DocumentTypeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Document\\Aggregate\\DocumentType\\DocumentTypeDefinition'] = $instance = new \Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Document\DocumentDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\DocumentDefinition
     */
    protected function getDocumentDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Document\\DocumentDefinition'] = $instance = new \Shopware\Core\Checkout\Document\DocumentDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition
     */
    protected function getOrderAddressDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderAddress\\OrderAddressDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition
     */
    protected function getOrderCustomerDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderCustomer\\OrderCustomerDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition
     */
    protected function getOrderDeliveryPositionDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderDeliveryPosition/OrderDeliveryPositionDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDeliveryPosition\\OrderDeliveryPositionDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition
     */
    protected function getOrderDeliveryDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderDelivery/OrderDeliveryDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderDelivery\\OrderDeliveryDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition
     */
    protected function getOrderLineItemDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderLineItem/OrderLineItemDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderLineItem\\OrderLineItemDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition
     */
    protected function getOrderTagDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderTag/OrderTagDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTag\\OrderTagDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition
     */
    protected function getOrderTransactionDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderTransaction/OrderTransactionDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionDefinition'] = $instance = new \Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Order\OrderDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\OrderDefinition
     */
    protected function getOrderDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Order\\OrderDefinition'] = $instance = new \Shopware\Core\Checkout\Order\OrderDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition
     */
    protected function getPaymentMethodTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Aggregate/PaymentMethodTranslation/PaymentMethodTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Payment\\Aggregate\\PaymentMethodTranslation\\PaymentMethodTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition
     */
    protected function getPromotionCartRuleDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionCartRule/PromotionCartRuleDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionCartRule\\PromotionCartRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition
     */
    protected function getPromotionDiscountPriceDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionDiscountPrice/PromotionDiscountPriceDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountPrice\\PromotionDiscountPriceDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition
     */
    protected function getPromotionDiscountRuleDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionDiscountRule/PromotionDiscountRuleDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscountRule\\PromotionDiscountRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition
     */
    protected function getPromotionDiscountDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionDiscount/PromotionDiscountDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionDiscount\\PromotionDiscountDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition
     */
    protected function getPromotionIndividualCodeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionIndividualCode/PromotionIndividualCodeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionIndividualCode\\PromotionIndividualCodeDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition
     */
    protected function getPromotionOrderRuleDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionOrderRule/PromotionOrderRuleDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionOrderRule\\PromotionOrderRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition
     */
    protected function getPromotionPersonaCustomerDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionPersonaCustomer/PromotionPersonaCustomerDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaCustomer\\PromotionPersonaCustomerDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition
     */
    protected function getPromotionPersonaRuleDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionPersonaRule/PromotionPersonaRuleDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionPersonaRule\\PromotionPersonaRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition
     */
    protected function getPromotionSalesChannelDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionSalesChannel/PromotionSalesChannelDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSalesChannel\\PromotionSalesChannelDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition
     */
    protected function getPromotionSetGroupRuleDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionSetGroupRule/PromotionSetGroupRuleDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroupRule\\PromotionSetGroupRuleDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition
     */
    protected function getPromotionSetGroupDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionSetGroup/PromotionSetGroupDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionSetGroup\\PromotionSetGroupDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition
     */
    protected function getPromotionTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Aggregate/PromotionTranslation/PromotionTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\Aggregate\\PromotionTranslation\\PromotionTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Promotion\PromotionDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\PromotionDefinition
     */
    protected function getPromotionDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/PromotionDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Promotion\\PromotionDefinition'] = $instance = new \Shopware\Core\Checkout\Promotion\PromotionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition
     */
    protected function getShippingMethodPriceDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Shipping/Aggregate/ShippingMethodPrice/ShippingMethodPriceDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodPrice\\ShippingMethodPriceDefinition'] = $instance = new \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition
     */
    protected function getShippingMethodTagDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Shipping/Aggregate/ShippingMethodTag/ShippingMethodTagDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTag\\ShippingMethodTagDefinition'] = $instance = new \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition
     */
    protected function getShippingMethodTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Shipping/Aggregate/ShippingMethodTranslation/ShippingMethodTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTranslation\\ShippingMethodTranslationDefinition'] = $instance = new \Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition
     */
    protected function getCategoryTagDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Category/Aggregate/CategoryTag/CategoryTagDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTag\\CategoryTagDefinition'] = $instance = new \Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition
     */
    protected function getCategoryTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Category/Aggregate/CategoryTranslation/CategoryTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Category\\Aggregate\\CategoryTranslation\\CategoryTranslationDefinition'] = $instance = new \Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition
     */
    protected function getCmsBlockDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsBlock/CmsBlockDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsBlock\\CmsBlockDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition
     */
    protected function getCmsPageTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsPageTranslation/CmsPageTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsPageTranslation\\CmsPageTranslationDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition
     */
    protected function getCmsSectionDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsSection/CmsSectionDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSection\\CmsSectionDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition
     */
    protected function getCmsSlotTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsSlotTranslation/CmsSlotTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlotTranslation\\CmsSlotTranslationDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition
     */
    protected function getCmsSlotDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/Aggregate/CmsSlot/CmsSlotDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Cms\\Aggregate\\CmsSlot\\CmsSlotDefinition'] = $instance = new \Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Cms\CmsPageDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Cms\CmsPageDefinition
     */
    protected function getCmsPageDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Cms\\CmsPageDefinition'] = $instance = new \Shopware\Core\Content\Cms\CmsPageDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition
     */
    protected function getImportExportFileDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Aggregate/ImportExportFile/ImportExportFileDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportFile\\ImportExportFileDefinition'] = $instance = new \Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition
     */
    protected function getImportExportLogDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Aggregate/ImportExportLog/ImportExportLogDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\ImportExport\\Aggregate\\ImportExportLog\\ImportExportLogDefinition'] = $instance = new \Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\ImportExport\ImportExportProfileDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\ImportExportProfileDefinition
     */
    protected function getImportExportProfileDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/ImportExportProfileDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\ImportExport\\ImportExportProfileDefinition'] = $instance = new \Shopware\Core\Content\ImportExport\ImportExportProfileDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition
     */
    protected function getMailHeaderFooterTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailHeaderFooterTranslation/MailHeaderFooterTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooterTranslation\\MailHeaderFooterTranslationDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition
     */
    protected function getMailHeaderFooterDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailHeaderFooter/MailHeaderFooterDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooter\\MailHeaderFooterDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition
     */
    protected function getMailTemplateMediaDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateMedia/MailTemplateMediaDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateMedia\\MailTemplateMediaDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateSalesChannel\MailTemplateSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateSalesChannel\MailTemplateSalesChannelDefinition
     */
    protected function getMailTemplateSalesChannelDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateSalesChannel/MailTemplateSalesChannelDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateSalesChannel\\MailTemplateSalesChannelDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateSalesChannel\MailTemplateSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition
     */
    protected function getMailTemplateTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateTranslation/MailTemplateTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTranslation\\MailTemplateTranslationDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition
     */
    protected function getMailTemplateTypeTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateTypeTranslation/MailTemplateTypeTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateTypeTranslation\\MailTemplateTypeTranslationDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition
     */
    protected function getMailTemplateTypeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Aggregate/MailTemplateType/MailTemplateTypeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailTemplateType\\MailTemplateTypeDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\MailTemplate\MailTemplateDefinition' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\MailTemplateDefinition
     */
    protected function getMailTemplateDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/MailTemplateDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\MailTemplate\\MailTemplateDefinition'] = $instance = new \Shopware\Core\Content\MailTemplate\MailTemplateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition
     */
    protected function getMediaDefaultFolderDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaDefaultFolder/MediaDefaultFolderDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaDefaultFolder\\MediaDefaultFolderDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition
     */
    protected function getMediaFolderConfigurationMediaThumbnailSizeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaFolderConfigurationMediaThumbnailSize/MediaFolderConfigurationMediaThumbnailSizeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfigurationMediaThumbnailSize\\MediaFolderConfigurationMediaThumbnailSizeDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition
     */
    protected function getMediaFolderConfigurationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaFolderConfiguration/MediaFolderConfigurationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolderConfiguration\\MediaFolderConfigurationDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition
     */
    protected function getMediaFolderDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaFolder/MediaFolderDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaFolder\\MediaFolderDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition
     */
    protected function getMediaTagDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaTag/MediaTagDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaTag\\MediaTagDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition
     */
    protected function getMediaThumbnailSizeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaThumbnailSize/MediaThumbnailSizeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnailSize\\MediaThumbnailSizeDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition
     */
    protected function getMediaThumbnailDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaThumbnail\\MediaThumbnailDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition
     */
    protected function getMediaTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Aggregate/MediaTranslation/MediaTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Media\\Aggregate\\MediaTranslation\\MediaTranslationDefinition'] = $instance = new \Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Media\MediaDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Media\MediaDefinition
     */
    protected function getMediaDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Media\\MediaDefinition'] = $instance = new \Shopware\Core\Content\Media\MediaDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition
     */
    protected function getNewsletterRecipientTagDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Newsletter/Aggregate/NewsletterRecipientTag/NewsletterRecipientTagDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipientTag\\NewsletterRecipientTagDefinition'] = $instance = new \Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition
     */
    protected function getNewsletterRecipientDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Newsletter/Aggregate/NewsletterRecipient/NewsletterRecipientDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Newsletter\\Aggregate\\NewsletterRecipient\\NewsletterRecipientDefinition'] = $instance = new \Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\ProductExport\ProductExportDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ProductExport\ProductExportDefinition
     */
    protected function getProductExportDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/ProductExportDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\ProductExport\\ProductExportDefinition'] = $instance = new \Shopware\Core\Content\ProductExport\ProductExportDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition
     */
    protected function getProductStreamFilterDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductStream/Aggregate/ProductStreamFilter/ProductStreamFilterDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamFilter\\ProductStreamFilterDefinition'] = $instance = new \Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition
     */
    protected function getProductStreamTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductStream/Aggregate/ProductStreamTranslation/ProductStreamTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\ProductStream\\Aggregate\\ProductStreamTranslation\\ProductStreamTranslationDefinition'] = $instance = new \Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\ProductStream\ProductStreamDefinition' shared service.
     *
     * @return \Shopware\Core\Content\ProductStream\ProductStreamDefinition
     */
    protected function getProductStreamDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductStream/ProductStreamDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\ProductStream\\ProductStreamDefinition'] = $instance = new \Shopware\Core\Content\ProductStream\ProductStreamDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition
     */
    protected function getProductCategoryTreeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductCategoryTree/ProductCategoryTreeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategoryTree\\ProductCategoryTreeDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition
     */
    protected function getProductCategoryDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductCategory/ProductCategoryDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductCategory\\ProductCategoryDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition
     */
    protected function getProductConfiguratorSettingDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductConfiguratorSetting/ProductConfiguratorSettingDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductConfiguratorSetting\\ProductConfiguratorSettingDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition
     */
    protected function getProductCrossSellingTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductCrossSellingTranslation/ProductCrossSellingTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSellingTranslation\\ProductCrossSellingTranslationDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition
     */
    protected function getProductCrossSellingDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductCrossSelling/ProductCrossSellingDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductCrossSelling\\ProductCrossSellingDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition
     */
    protected function getProductKeywordDictionaryDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductKeywordDictionary/ProductKeywordDictionaryDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductKeywordDictionary\\ProductKeywordDictionaryDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition
     */
    protected function getProductManufacturerTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductManufacturerTranslation/ProductManufacturerTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturerTranslation\\ProductManufacturerTranslationDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition
     */
    protected function getProductManufacturerDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductManufacturer/ProductManufacturerDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturer\\ProductManufacturerDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition
     */
    protected function getProductMediaDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductMedia/ProductMediaDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductMedia\\ProductMediaDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition
     */
    protected function getProductOptionDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductOption/ProductOptionDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductOption\\ProductOptionDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition
     */
    protected function getProductPriceDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductPrice/ProductPriceDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductPrice\\ProductPriceDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition
     */
    protected function getProductPropertyDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductProperty/ProductPropertyDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductProperty\\ProductPropertyDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition
     */
    protected function getProductReviewDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductReview/ProductReviewDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductReview\\ProductReviewDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition
     */
    protected function getProductSearchKeywordDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductSearchKeyword/ProductSearchKeywordDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductSearchKeyword\\ProductSearchKeywordDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition
     */
    protected function getProductTagDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductTag/ProductTagDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductTag\\ProductTagDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition
     */
    protected function getProductTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductTranslation/ProductTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductTranslation\\ProductTranslationDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition
     */
    protected function getProductVisibilityDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Aggregate/ProductVisibility/ProductVisibilityDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Product\\Aggregate\\ProductVisibility\\ProductVisibilityDefinition'] = $instance = new \Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition
     */
    protected function getPropertyGroupOptionTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Property/Aggregate/PropertyGroupOptionTranslation/PropertyGroupOptionTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOptionTranslation\\PropertyGroupOptionTranslationDefinition'] = $instance = new \Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition
     */
    protected function getPropertyGroupOptionDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Property/Aggregate/PropertyGroupOption/PropertyGroupOptionDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupOption\\PropertyGroupOptionDefinition'] = $instance = new \Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition
     */
    protected function getPropertyGroupTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Property/Aggregate/PropertyGroupTranslation/PropertyGroupTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Property\\Aggregate\\PropertyGroupTranslation\\PropertyGroupTranslationDefinition'] = $instance = new \Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Property\PropertyGroupDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Property\PropertyGroupDefinition
     */
    protected function getPropertyGroupDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Property/PropertyGroupDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Property\\PropertyGroupDefinition'] = $instance = new \Shopware\Core\Content\Property\PropertyGroupDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition
     */
    protected function getRuleConditionDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Rule/Aggregate/RuleCondition/RuleConditionDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Rule\\Aggregate\\RuleCondition\\RuleConditionDefinition'] = $instance = new \Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Rule\RuleDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Rule\RuleDefinition
     */
    protected function getRuleDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Rule\\RuleDefinition'] = $instance = new \Shopware\Core\Content\Rule\RuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition' shared service.
     *
     * @return \Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition
     */
    protected function getSeoUrlTemplateDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrlTemplate/SeoUrlTemplateDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Content\\Seo\\SeoUrlTemplate\\SeoUrlTemplateDefinition'] = $instance = new \Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\Api\Acl\Resource\AclResourceDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Acl\Resource\AclResourceDefinition
     */
    protected function getAclResourceDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Acl/Resource/AclResourceDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\Api\\Acl\\Resource\\AclResourceDefinition'] = $instance = new \Shopware\Core\Framework\Api\Acl\Resource\AclResourceDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition
     */
    protected function getAclRoleDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Acl/Role/AclRoleDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclRoleDefinition'] = $instance = new \Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition
     */
    protected function getAclUserRoleDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Acl/Role/AclUserRoleDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclUserRoleDefinition'] = $instance = new \Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition
     */
    protected function getVersionCommitDataDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommitData\\VersionCommitDataDefinition'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition
     */
    protected function getVersionCommitDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommit\\VersionCommitDefinition'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition
     */
    protected function getVersionDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\VersionDefinition'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\Event\EventAction\EventActionDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Event\EventAction\EventActionDefinition
     */
    protected function getEventActionDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\Event\\EventAction\\EventActionDefinition'] = $instance = new \Shopware\Core\Framework\Event\EventAction\EventActionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\Log\LogEntryDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Log\LogEntryDefinition
     */
    protected function getLogEntryDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Log/LogEntryDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\Log\\LogEntryDefinition'] = $instance = new \Shopware\Core\Framework\Log\LogEntryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\MessageQueue\DeadMessage\DeadMessageDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\DeadMessage\DeadMessageDefinition
     */
    protected function getDeadMessageDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/DeadMessage/DeadMessageDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\MessageQueue\\DeadMessage\\DeadMessageDefinition'] = $instance = new \Shopware\Core\Framework\MessageQueue\DeadMessage\DeadMessageDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\MessageQueue\MessageQueueStatsDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\MessageQueueStatsDefinition
     */
    protected function getMessageQueueStatsDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/MessageQueueStatsDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\MessageQueue\\MessageQueueStatsDefinition'] = $instance = new \Shopware\Core\Framework\MessageQueue\MessageQueueStatsDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition
     */
    protected function getScheduledTaskDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/ScheduledTaskDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\ScheduledTaskDefinition'] = $instance = new \Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition
     */
    protected function getPluginTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Aggregate/PluginTranslation/PluginTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\Plugin\\Aggregate\\PluginTranslation\\PluginTranslationDefinition'] = $instance = new \Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\Framework\Plugin\PluginDefinition' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\PluginDefinition
     */
    protected function getPluginDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/PluginDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\Framework\\Plugin\\PluginDefinition'] = $instance = new \Shopware\Core\Framework\Plugin\PluginDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition
     */
    protected function getCountryStateTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Country/Aggregate/CountryStateTranslation/CountryStateTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Country\\Aggregate\\CountryStateTranslation\\CountryStateTranslationDefinition'] = $instance = new \Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition
     */
    protected function getCountryTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Country/Aggregate/CountryTranslation/CountryTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Country\\Aggregate\\CountryTranslation\\CountryTranslationDefinition'] = $instance = new \Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition
     */
    protected function getCurrencyTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Currency/Aggregate/CurrencyTranslation/CurrencyTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Currency\\Aggregate\\CurrencyTranslation\\CurrencyTranslationDefinition'] = $instance = new \Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition' shared service.
     *
     * @return \Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition
     */
    protected function getCustomFieldSetRelationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/CustomField/Aggregate/CustomFieldSetRelation/CustomFieldSetRelationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSetRelation\\CustomFieldSetRelationDefinition'] = $instance = new \Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition' shared service.
     *
     * @return \Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition
     */
    protected function getCustomFieldSetDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/CustomField/Aggregate/CustomFieldSet/CustomFieldSetDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\CustomField\\Aggregate\\CustomFieldSet\\CustomFieldSetDefinition'] = $instance = new \Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\CustomField\CustomFieldDefinition' shared service.
     *
     * @return \Shopware\Core\System\CustomField\CustomFieldDefinition
     */
    protected function getCustomFieldDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/CustomField/CustomFieldDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\CustomField\\CustomFieldDefinition'] = $instance = new \Shopware\Core\System\CustomField\CustomFieldDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition
     */
    protected function getDeliveryTimeTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/DeliveryTime/Aggregate/DeliveryTimeTranslation/DeliveryTimeTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\DeliveryTime\\Aggregate\\DeliveryTimeTranslation\\DeliveryTimeTranslationDefinition'] = $instance = new \Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition' shared service.
     *
     * @return \Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition
     */
    protected function getDeliveryTimeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/DeliveryTime/DeliveryTimeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\DeliveryTime\\DeliveryTimeDefinition'] = $instance = new \Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Integration\IntegrationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Integration\IntegrationDefinition
     */
    protected function getIntegrationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Integration/IntegrationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Integration\\IntegrationDefinition'] = $instance = new \Shopware\Core\System\Integration\IntegrationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition
     */
    protected function getLocaleTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Locale/Aggregate/LocaleTranslation/LocaleTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Locale\\Aggregate\\LocaleTranslation\\LocaleTranslationDefinition'] = $instance = new \Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Locale\LocaleDefinition' shared service.
     *
     * @return \Shopware\Core\System\Locale\LocaleDefinition
     */
    protected function getLocaleDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Locale/LocaleDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Locale\\LocaleDefinition'] = $instance = new \Shopware\Core\System\Locale\LocaleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition
     */
    protected function getNumberRangeSalesChannelDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeSalesChannel/NumberRangeSalesChannelDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeSalesChannel\\NumberRangeSalesChannelDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition
     */
    protected function getNumberRangeStateDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeState/NumberRangeStateDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeState\\NumberRangeStateDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition
     */
    protected function getNumberRangeTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeTranslation/NumberRangeTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTranslation\\NumberRangeTranslationDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition
     */
    protected function getNumberRangeTypeTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeTypeTranslation/NumberRangeTypeTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeTypeTranslation\\NumberRangeTypeTranslationDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition
     */
    protected function getNumberRangeTypeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/Aggregate/NumberRangeType/NumberRangeTypeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\NumberRange\\Aggregate\\NumberRangeType\\NumberRangeTypeDefinition'] = $instance = new \Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\NumberRange\NumberRangeDefinition' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\NumberRangeDefinition
     */
    protected function getNumberRangeDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\NumberRange\\NumberRangeDefinition'] = $instance = new \Shopware\Core\System\NumberRange\NumberRangeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition
     */
    protected function getSalesChannelCountryDefinition3Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelCountry/SalesChannelCountryDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCountry\\SalesChannelCountryDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition
     */
    protected function getSalesChannelCurrencyDefinition3Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelCurrency/SalesChannelCurrencyDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelCurrency\\SalesChannelCurrencyDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition
     */
    protected function getSalesChannelDomainDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelDomain\\SalesChannelDomainDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition
     */
    protected function getSalesChannelLanguageDefinition3Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelLanguage/SalesChannelLanguageDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelLanguage\\SalesChannelLanguageDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition
     */
    protected function getSalesChannelPaymentMethodDefinition3Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelPaymentMethod/SalesChannelPaymentMethodDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelPaymentMethod\\SalesChannelPaymentMethodDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition
     */
    protected function getSalesChannelShippingMethodDefinition3Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelShippingMethod/SalesChannelShippingMethodDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelShippingMethod\\SalesChannelShippingMethodDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition
     */
    protected function getSalesChannelTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelTranslation/SalesChannelTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTranslation\\SalesChannelTranslationDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition
     */
    protected function getSalesChannelTypeTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelTypeTranslation/SalesChannelTypeTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTypeTranslation\\SalesChannelTypeTranslationDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition
     */
    protected function getSalesChannelTypeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Aggregate/SalesChannelType/SalesChannelTypeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelType\\SalesChannelTypeDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SalesChannel\SalesChannelDefinition' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\SalesChannelDefinition
     */
    protected function getSalesChannelDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\SalesChannel\\SalesChannelDefinition'] = $instance = new \Shopware\Core\System\SalesChannel\SalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition
     */
    protected function getSalutationTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Salutation/Aggregate/SalutationTranslation/SalutationTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Salutation\\Aggregate\\SalutationTranslation\\SalutationTranslationDefinition'] = $instance = new \Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition' shared service.
     *
     * @return \Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition
     */
    protected function getSnippetSetDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\Snippet\\Aggregate\\SnippetSet\\SnippetSetDefinition'] = $instance = new \Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Snippet\SnippetDefinition' shared service.
     *
     * @return \Shopware\Core\System\Snippet\SnippetDefinition
     */
    protected function getSnippetDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\Snippet\\SnippetDefinition'] = $instance = new \Shopware\Core\System\Snippet\SnippetDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition
     */
    protected function getStateMachineHistoryDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineHistory\\StateMachineHistoryDefinition'] = $instance = new \Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition
     */
    protected function getStateMachineStateDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateDefinition'] = $instance = new \Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition
     */
    protected function getStateMachineStateTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/Aggregation/StateMachineState/StateMachineStateTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateTranslationDefinition'] = $instance = new \Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition
     */
    protected function getStateMachineTransitionDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/Aggregation/StateMachineTransition/StateMachineTransitionDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineTransition\\StateMachineTransitionDefinition'] = $instance = new \Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\StateMachine\StateMachineDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\StateMachineDefinition
     */
    protected function getStateMachineDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\StateMachine\\StateMachineDefinition'] = $instance = new \Shopware\Core\System\StateMachine\StateMachineDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\StateMachine\StateMachineTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\StateMachineTranslationDefinition
     */
    protected function getStateMachineTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/StateMachineTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\StateMachine\\StateMachineTranslationDefinition'] = $instance = new \Shopware\Core\System\StateMachine\StateMachineTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\SystemConfig\SystemConfigDefinition' shared service.
     *
     * @return \Shopware\Core\System\SystemConfig\SystemConfigDefinition
     */
    protected function getSystemConfigDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\SystemConfig\\SystemConfigDefinition'] = $instance = new \Shopware\Core\System\SystemConfig\SystemConfigDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Tag\TagDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tag\TagDefinition
     */
    protected function getTagDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Tag/TagDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Tag\\TagDefinition'] = $instance = new \Shopware\Core\System\Tag\TagDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition
     */
    protected function getTaxRuleTypeTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Tax/Aggregate/TaxRuleTypeTranslation/TaxRuleTypeTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleTypeTranslation\\TaxRuleTypeTranslationDefinition'] = $instance = new \Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition
     */
    protected function getTaxRuleTypeDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Tax/Aggregate/TaxRuleType/TaxRuleTypeDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleType\\TaxRuleTypeDefinition'] = $instance = new \Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition
     */
    protected function getTaxRuleDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Tax/Aggregate/TaxRule/TaxRuleDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Tax\\Aggregate\\TaxRule\\TaxRuleDefinition'] = $instance = new \Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Tax\TaxDefinition' shared service.
     *
     * @return \Shopware\Core\System\Tax\TaxDefinition
     */
    protected function getTaxDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Core\\System\\Tax\\TaxDefinition'] = $instance = new \Shopware\Core\System\Tax\TaxDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition' shared service.
     *
     * @return \Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition
     */
    protected function getUnitTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Unit/Aggregate/UnitTranslation/UnitTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Unit\\Aggregate\\UnitTranslation\\UnitTranslationDefinition'] = $instance = new \Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\Unit\UnitDefinition' shared service.
     *
     * @return \Shopware\Core\System\Unit\UnitDefinition
     */
    protected function getUnitDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Unit/UnitDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\Unit\\UnitDefinition'] = $instance = new \Shopware\Core\System\Unit\UnitDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition' shared service.
     *
     * @return \Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition
     */
    protected function getUserAccessKeyDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Aggregate/UserAccessKey/UserAccessKeyDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\User\\Aggregate\\UserAccessKey\\UserAccessKeyDefinition'] = $instance = new \Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition' shared service.
     *
     * @return \Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition
     */
    protected function getUserRecoveryDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Aggregate/UserRecovery/UserRecoveryDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\User\\Aggregate\\UserRecovery\\UserRecoveryDefinition'] = $instance = new \Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Core\System\User\UserDefinition' shared service.
     *
     * @return \Shopware\Core\System\User\UserDefinition
     */
    protected function getUserDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/UserDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Core\\System\\User\\UserDefinition'] = $instance = new \Shopware\Core\System\User\UserDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition' shared service.
     *
     * @return \Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition
     */
    protected function getThemeMediaDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Aggregate/ThemeMediaDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Storefront\\Theme\\Aggregate\\ThemeMediaDefinition'] = $instance = new \Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition' shared service.
     *
     * @return \Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition
     */
    protected function getThemeSalesChannelDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Storefront\\Theme\\Aggregate\\ThemeSalesChannelDefinition'] = $instance = new \Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition' shared service.
     *
     * @return \Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition
     */
    protected function getThemeTranslationDefinition2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityTranslationDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Aggregate/ThemeTranslationDefinition.php';

        $this->services['sales_channel_definition.Shopware\\Storefront\\Theme\\Aggregate\\ThemeTranslationDefinition'] = $instance = new \Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_definition.Shopware\Storefront\Theme\ThemeDefinition' shared service.
     *
     * @return \Shopware\Storefront\Theme\ThemeDefinition
     */
    protected function getThemeDefinition2Service()
    {
        $this->services['sales_channel_definition.Shopware\\Storefront\\Theme\\ThemeDefinition'] = $instance = new \Shopware\Storefront\Theme\ThemeDefinition();

        $instance->compile(($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()));

        return $instance;
    }

    /*
     * Gets the public 'sales_channel_domain.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannelDomain_RepositoryService()
    {
        return $this->services['sales_channel_domain.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelDomain\\SalesChannelDomainDefinition'] ?? $this->getSalesChannelDomainDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel_language.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannelLanguage_RepositoryService()
    {
        return $this->services['sales_channel_language.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelLanguage\\SalesChannelLanguageDefinition'] ?? $this->getSalesChannelLanguageDefinition2Service()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel_payment_method.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannelPaymentMethod_RepositoryService()
    {
        return $this->services['sales_channel_payment_method.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelPaymentMethod\\SalesChannelPaymentMethodDefinition'] ?? $this->getSalesChannelPaymentMethodDefinition2Service()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel_shipping_method.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannelShippingMethod_RepositoryService()
    {
        return $this->services['sales_channel_shipping_method.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelShippingMethod\\SalesChannelShippingMethodDefinition'] ?? $this->getSalesChannelShippingMethodDefinition2Service()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannelTranslation_RepositoryService()
    {
        return $this->services['sales_channel_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTranslation\\SalesChannelTranslationDefinition'] ?? $this->getSalesChannelTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel_type.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannelType_RepositoryService()
    {
        return $this->services['sales_channel_type.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelType\\SalesChannelTypeDefinition'] ?? $this->getSalesChannelTypeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'sales_channel_type_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalesChannelTypeTranslation_RepositoryService()
    {
        return $this->services['sales_channel_type_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SalesChannel\\Aggregate\\SalesChannelTypeTranslation\\SalesChannelTypeTranslationDefinition'] ?? $this->getSalesChannelTypeTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'salutation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalutation_RepositoryService()
    {
        return $this->services['salutation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Salutation\\SalutationDefinition'] ?? $this->getSalutationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'salutation_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSalutationTranslation_RepositoryService()
    {
        return $this->services['salutation_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Salutation\\Aggregate\\SalutationTranslation\\SalutationTranslationDefinition'] ?? $this->getSalutationTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'scheduled_task.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getScheduledTask_RepositoryService()
    {
        return $this->services['scheduled_task.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\ScheduledTaskDefinition'] ?? $this->getScheduledTaskDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'security.csrf.token_manager' shared service.
     *
     * @return \Symfony\Component\Security\Csrf\CsrfTokenManager
     */
    protected function getSecurity_Csrf_TokenManagerService()
    {
        return $this->services['security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator(), new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage(($this->services['session'] ?? $this->getSessionService())), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /*
     * Gets the public 'seo_url.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSeoUrl_RepositoryService()
    {
        return $this->services['seo_url.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Seo\\SeoUrl\\SeoUrlDefinition'] ?? $this->getSeoUrlDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'seo_url_template.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSeoUrlTemplate_RepositoryService()
    {
        return $this->services['seo_url_template.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Content\\Seo\\SeoUrlTemplate\\SeoUrlTemplateDefinition'] ?? $this->getSeoUrlTemplateDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'serializer' shared service.
     *
     * @return \Symfony\Component\Serializer\Serializer
     */
    protected function getSerializerService()
    {
        $a = ($this->privates['serializer.mapping.cache_class_metadata_factory'] ?? $this->getSerializer_Mapping_CacheClassMetadataFactoryService());

        $b = new \Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter($a);

        return $this->services['serializer'] = new \Symfony\Component\Serializer\Serializer([0 => new \Shopware\Core\Framework\Struct\Serializer\StructNormalizer(), 1 => new \Symfony\Component\Serializer\Normalizer\ProblemNormalizer(false), 2 => new \Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer(), 3 => new \Symfony\Component\Serializer\Normalizer\DateTimeNormalizer(), 4 => new \Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer([], $b), 5 => new \Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer(), 6 => new \Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer(), 7 => new \Symfony\Component\Serializer\Normalizer\DataUriNormalizer(($this->privates['mime_types'] ?? $this->getMimeTypesService())), 8 => new \Symfony\Component\Serializer\Normalizer\ArrayDenormalizer(), 9 => new \Symfony\Component\Serializer\Normalizer\ObjectNormalizer($a, $b, new \Symfony\Component\PropertyAccess\PropertyAccessor(false, false, ($this->privates['cache.property_access'] ?? $this->getCache_PropertyAccessService()), true), new \Symfony\Component\PropertyInfo\PropertyInfoCacheExtractor(new \Symfony\Component\PropertyInfo\PropertyInfoExtractor(new RewindableGenerator(function () {
            yield 0 => ($this->privates['property_info.serializer_extractor'] ?? $this->getPropertyInfo_SerializerExtractorService());
            yield 1 => ($this->privates['property_info.reflection_extractor'] ?? ($this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor()));
        }, 2), new RewindableGenerator(function () {
            yield 0 => ($this->privates['property_info.php_doc_extractor'] ?? ($this->privates['property_info.php_doc_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor()));
            yield 1 => ($this->privates['property_info.reflection_extractor'] ?? ($this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor()));
        }, 2), new RewindableGenerator(function () {
            yield 0 => ($this->privates['property_info.php_doc_extractor'] ?? ($this->privates['property_info.php_doc_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor()));
        }, 1), new RewindableGenerator(function () {
            yield 0 => ($this->privates['property_info.reflection_extractor'] ?? ($this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor()));
        }, 1), new RewindableGenerator(function () {
            yield 0 => ($this->privates['property_info.reflection_extractor'] ?? ($this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor()));
        }, 1)), ($this->privates['cache.property_info'] ?? $this->getCache_PropertyInfoService())), new \Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata($a), NULL, [])], [0 => new \Shopware\Core\Framework\Struct\Serializer\StructDecoder(), 1 => new \Shopware\Core\Framework\Api\Serializer\JsonApiDecoder(), 2 => new \Symfony\Component\Serializer\Encoder\XmlEncoder(), 3 => new \Symfony\Component\Serializer\Encoder\JsonEncoder(), 4 => new \Symfony\Component\Serializer\Encoder\YamlEncoder(), 5 => new \Symfony\Component\Serializer\Encoder\CsvEncoder()]);
    }

    /*
     * Gets the public 'services_resetter' shared service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter
     */
    protected function getServicesResetterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/DependencyInjection/ServicesResetter.php';

        return $this->services['services_resetter'] = new \Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter(new RewindableGenerator(function () {
            if (isset($this->services['cache.app'])) {
                yield 'cache.app' => ($this->services['cache.app'] ?? null);
            }
            if (isset($this->services['cache.system'])) {
                yield 'cache.system' => ($this->services['cache.system'] ?? null);
            }
            if (isset($this->privates['cache.validator'])) {
                yield 'cache.validator' => ($this->privates['cache.validator'] ?? null);
            }
            if (isset($this->privates['cache.serializer'])) {
                yield 'cache.serializer' => ($this->privates['cache.serializer'] ?? null);
            }
            if (isset($this->privates['cache.annotations'])) {
                yield 'cache.annotations' => ($this->privates['cache.annotations'] ?? null);
            }
            if (isset($this->privates['cache.property_info'])) {
                yield 'cache.property_info' => ($this->privates['cache.property_info'] ?? null);
            }
            if (isset($this->privates['cache.messenger.restart_workers_signal'])) {
                yield 'cache.messenger.restart_workers_signal' => ($this->privates['cache.messenger.restart_workers_signal'] ?? null);
            }
            if (isset($this->privates['.cache.object.inner'])) {
                yield '.cache.object.inner' => ($this->privates['.cache.object.inner'] ?? null);
            }
            if (isset($this->privates['.cache.http.inner'])) {
                yield '.cache.http.inner' => ($this->privates['.cache.http.inner'] ?? null);
            }
            if (isset($this->privates['cache.tags'])) {
                yield 'cache.tags' => ($this->privates['cache.tags'] ?? null);
            }
            if (isset($this->privates['messenger.transport.in_memory.factory'])) {
                yield 'messenger.transport.in_memory.factory' => ($this->privates['messenger.transport.in_memory.factory'] ?? null);
            }
            if (isset($this->privates['debug.stopwatch'])) {
                yield 'debug.stopwatch' => ($this->privates['debug.stopwatch'] ?? null);
            }
            if (isset($this->privates['monolog.handler.main'])) {
                yield 'monolog.handler.main' => ($this->privates['monolog.handler.main'] ?? null);
            }
            if (isset($this->privates['monolog.handler.console'])) {
                yield 'monolog.handler.console' => ($this->privates['monolog.handler.console'] ?? null);
            }
            if (isset($this->privates['monolog.handler.business_event_handler_buffer'])) {
                yield 'monolog.handler.business_event_handler_buffer' => ($this->privates['monolog.handler.business_event_handler_buffer'] ?? null);
            }
            if (isset($this->privates['swiftmailer.email_sender.listener'])) {
                yield 'swiftmailer.email_sender.listener' => ($this->privates['swiftmailer.email_sender.listener'] ?? null);
            }
        }, function () {
            return 0 + (int) (isset($this->services['cache.app'])) + (int) (isset($this->services['cache.system'])) + (int) (isset($this->privates['cache.validator'])) + (int) (isset($this->privates['cache.serializer'])) + (int) (isset($this->privates['cache.annotations'])) + (int) (isset($this->privates['cache.property_info'])) + (int) (isset($this->privates['cache.messenger.restart_workers_signal'])) + (int) (isset($this->privates['.cache.object.inner'])) + (int) (isset($this->privates['.cache.http.inner'])) + (int) (isset($this->privates['cache.tags'])) + (int) (isset($this->privates['messenger.transport.in_memory.factory'])) + (int) (isset($this->privates['debug.stopwatch'])) + (int) (isset($this->privates['monolog.handler.main'])) + (int) (isset($this->privates['monolog.handler.console'])) + (int) (isset($this->privates['monolog.handler.business_event_handler_buffer'])) + (int) (isset($this->privates['swiftmailer.email_sender.listener']));
        }), ['cache.app' => [0 => 'reset'], 'cache.system' => [0 => 'reset'], 'cache.validator' => [0 => 'reset'], 'cache.serializer' => [0 => 'reset'], 'cache.annotations' => [0 => 'reset'], 'cache.property_info' => [0 => 'reset'], 'cache.messenger.restart_workers_signal' => [0 => 'reset'], '.cache.object.inner' => [0 => 'reset'], '.cache.http.inner' => [0 => 'reset'], 'cache.tags' => [0 => 'reset'], 'messenger.transport.in_memory.factory' => [0 => 'reset'], 'debug.stopwatch' => [0 => 'reset'], 'monolog.handler.main' => [0 => 'reset'], 'monolog.handler.console' => [0 => 'reset'], 'monolog.handler.business_event_handler_buffer' => [0 => 'reset'], 'swiftmailer.email_sender.listener' => [0 => 'reset']]);
    }

    /*
     * Gets the public 'session' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Session
     */
    protected function getSessionService()
    {
        return $this->services['session'] = new \Symfony\Component\HttpFoundation\Session\Session(new \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage($this->parameters['session.storage.options'], NULL, new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', 0)), new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag(), ($this->privates['session.flash_bag'] ?? ($this->privates['session.flash_bag'] = new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag())));
    }

    /*
     * Gets the public 'shipping_method.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getShippingMethod_RepositoryService()
    {
        return $this->services['shipping_method.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Shipping\\ShippingMethodDefinition'] ?? $this->getShippingMethodDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'shipping_method_price.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getShippingMethodPrice_RepositoryService()
    {
        return $this->services['shipping_method_price.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodPrice\\ShippingMethodPriceDefinition'] ?? $this->getShippingMethodPriceDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'shipping_method_tag.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getShippingMethodTag_RepositoryService()
    {
        return $this->services['shipping_method_tag.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTag\\ShippingMethodTagDefinition'] ?? $this->getShippingMethodTagDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'shipping_method_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getShippingMethodTranslation_RepositoryService()
    {
        return $this->services['shipping_method_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Checkout\\Shipping\\Aggregate\\ShippingMethodTranslation\\ShippingMethodTranslationDefinition'] ?? $this->getShippingMethodTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'snippet.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSnippet_RepositoryService()
    {
        return $this->services['snippet.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Snippet\\SnippetDefinition'] ?? $this->getSnippetDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'snippet_set.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSnippetSet_RepositoryService()
    {
        return $this->services['snippet_set.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Snippet\\Aggregate\\SnippetSet\\SnippetSetDefinition'] ?? $this->getSnippetSetDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'state_machine.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getStateMachine_RepositoryService()
    {
        return $this->services['state_machine.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\StateMachine\\StateMachineDefinition'] ?? $this->getStateMachineDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'state_machine_history.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getStateMachineHistory_RepositoryService()
    {
        return $this->services['state_machine_history.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineHistory\\StateMachineHistoryDefinition'] ?? $this->getStateMachineHistoryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'state_machine_state.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getStateMachineState_RepositoryService()
    {
        return $this->services['state_machine_state.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateDefinition'] ?? $this->getStateMachineStateDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'state_machine_state_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getStateMachineStateTranslation_RepositoryService()
    {
        return $this->services['state_machine_state_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineState\\StateMachineStateTranslationDefinition'] ?? $this->getStateMachineStateTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'state_machine_transition.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getStateMachineTransition_RepositoryService()
    {
        return $this->services['state_machine_transition.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\StateMachine\\Aggregation\\StateMachineTransition\\StateMachineTransitionDefinition'] ?? $this->getStateMachineTransitionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'state_machine_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getStateMachineTranslation_RepositoryService()
    {
        return $this->services['state_machine_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\StateMachine\\StateMachineTranslationDefinition'] ?? $this->getStateMachineTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'swiftmailer.mailer.default' shared service.
     *
     * @return \Swift_Mailer
     */
    protected function getSwiftmailer_Mailer_DefaultService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mailer.php';

        return $this->services['swiftmailer.mailer.default'] = new \Swift_Mailer(($this->services['swiftmailer.transport'] ?? $this->getSwiftmailer_TransportService()));
    }

    /*
     * Gets the public 'swiftmailer.mailer.default.transport.real' shared service.
     *
     * @return \Swift_Transport
     */
    protected function getSwiftmailer_Mailer_Default_Transport_RealService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/DependencyInjection/SwiftmailerTransportFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/EventDispatcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/SimpleEventDispatcher.php';

        return $this->services['swiftmailer.mailer.default.transport.real'] = \Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SwiftmailerTransportFactory::createTransport(['transport' => 'smtp', 'url' => $this->getEnv('MAILER_URL'), 'username' => NULL, 'password' => NULL, 'host' => 'localhost', 'port' => NULL, 'timeout' => 30, 'source_ip' => NULL, 'local_domain' => NULL, 'encryption' => NULL, 'auth_mode' => NULL, 'command' => '/usr/sbin/sendmail -bs'], ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['swiftmailer.mailer.default.transport.eventdispatcher'] ?? ($this->privates['swiftmailer.mailer.default.transport.eventdispatcher'] = new \Swift_Events_SimpleEventDispatcher())));
    }

    /*
     * Gets the public 'swiftmailer.transport' shared service.
     *
     * @return \Swift_Transport_SpoolTransport
     */
    protected function getSwiftmailer_TransportService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/SpoolTransport.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Spool.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/MemorySpool.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/EventDispatcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Events/SimpleEventDispatcher.php';

        return $this->services['swiftmailer.transport'] = new \Swift_Transport_SpoolTransport(($this->privates['swiftmailer.mailer.default.transport.eventdispatcher'] ?? ($this->privates['swiftmailer.mailer.default.transport.eventdispatcher'] = new \Swift_Events_SimpleEventDispatcher())), new \Swift_MemorySpool());
    }

    /*
     * Gets the public 'system_config.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getSystemConfig_RepositoryService()
    {
        return $this->services['system_config.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigDefinition'] ?? $this->getSystemConfigDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'tag.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getTag_RepositoryService()
    {
        return $this->services['tag.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Tag\\TagDefinition'] ?? $this->getTagDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'tax.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getTax_RepositoryService()
    {
        return $this->services['tax.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Tax\\TaxDefinition'] ?? $this->getTaxDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'tax_rule.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getTaxRule_RepositoryService()
    {
        return $this->services['tax_rule.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Tax\\Aggregate\\TaxRule\\TaxRuleDefinition'] ?? $this->getTaxRuleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'tax_rule_type.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getTaxRuleType_RepositoryService()
    {
        return $this->services['tax_rule_type.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleType\\TaxRuleTypeDefinition'] ?? $this->getTaxRuleTypeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'tax_rule_type_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getTaxRuleTypeTranslation_RepositoryService()
    {
        return $this->services['tax_rule_type_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Tax\\Aggregate\\TaxRuleTypeTranslation\\TaxRuleTypeTranslationDefinition'] ?? $this->getTaxRuleTypeTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'theme.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getTheme_RepositoryService()
    {
        return $this->services['theme.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Storefront\\Theme\\ThemeDefinition'] ?? $this->getThemeDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'theme_media.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getThemeMedia_RepositoryService()
    {
        return $this->services['theme_media.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Storefront\\Theme\\Aggregate\\ThemeMediaDefinition'] ?? $this->getThemeMediaDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'theme_sales_channel.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getThemeSalesChannel_RepositoryService()
    {
        return $this->services['theme_sales_channel.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Storefront\\Theme\\Aggregate\\ThemeSalesChannelDefinition'] ?? $this->getThemeSalesChannelDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'theme_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getThemeTranslation_RepositoryService()
    {
        return $this->services['theme_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Storefront\\Theme\\Aggregate\\ThemeTranslationDefinition'] ?? $this->getThemeTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'translator' shared service.
     *
     * @return \Shopware\Core\Framework\Adapter\Translation\Translator
     */
    protected function getTranslatorService()
    {
        return $this->services['translator'] = new \Shopware\Core\Framework\Adapter\Translation\Translator(($this->privates['translator.default'] ?? $this->getTranslator_DefaultService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['cache.object'] ?? $this->getCache_ObjectService()), ($this->privates['translator.formatter.default'] ?? $this->getTranslator_Formatter_DefaultService()), ($this->privates['Shopware\\Core\\System\\Snippet\\SnippetService'] ?? $this->getSnippetServiceService()), ($this->services['language.repository'] ?? $this->getLanguage_RepositoryService()));
    }

    /*
     * Gets the public 'twig' shared service.
     *
     * @return \Twig\Environment
     */
    protected function getTwigService()
    {
        $this->services['twig'] = $instance = new \Twig\Environment(($this->privates['twig.loader.native_filesystem'] ?? $this->getTwig_Loader_NativeFilesystemService()), ['debug' => false, 'strict_variables' => false, 'autoescape' => 'name', 'cache' => ($this->targetDir.''.'/twig'), 'charset' => 'UTF-8']);

        $a = new \Symfony\Bridge\Twig\Extension\RoutingExtension(($this->services['router'] ?? $this->getRouterService()));
        $b = ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()));
        $c = ($this->services['Shopware\\Storefront\\Theme\\Twig\\ThemeTemplateFinder'] ?? $this->getThemeTemplateFinderService());
        $d = new \Symfony\Bridge\Twig\AppVariable();
        $d->setEnvironment('prod');
        $d->setDebug(false);
        if ($this->has('request_stack')) {
            $d->setRequestStack($b);
        }

        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CsrfExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension(($this->services['translator'] ?? $this->getTranslatorService())));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension(($this->privates['assets.packages'] ?? $this->getAssets_PackagesService())));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))), \dirname(__DIR__, 4), 'UTF-8'));
        $instance->addExtension($a);
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension(($this->privates['debug.stopwatch'] ?? ($this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))), false));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension(new \Symfony\Component\HttpFoundation\UrlHelper($b, ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()))));
        $instance->addExtension(new \Shopware\Core\Framework\Adapter\Twig\InheritanceExtension($c));
        $instance->addExtension(new \Shopware\Core\Framework\Adapter\Twig\FeatureFlagExtension());
        $instance->addExtension(new \Twig\Extra\Intl\IntlExtension());
        $instance->addExtension(new \Twig\Extra\String\StringExtension());
        $instance->addExtension(new \Shopware\Core\Framework\Adapter\Twig\InstanceOfExtension());
        $instance->addExtension(new \Shopware\Core\Framework\Adapter\Twig\Filter\CurrencyFilter(($this->services['Shopware\\Core\\System\\Currency\\CurrencyFormatter'] ?? $this->getCurrencyFormatterService())));
        $instance->addExtension(new \Shopware\Core\Framework\Adapter\Twig\Extension\SeoUrlFunctionExtension($a, ($this->services['Shopware\\Core\\Content\\Seo\\SeoUrlPlaceholderHandlerInterface'] ?? $this->getSeoUrlPlaceholderHandlerInterfaceService())));
        $instance->addExtension(new \Shopware\Core\Framework\Adapter\Twig\Extension\MediaExtension(($this->services['media.repository'] ?? $this->getMedia_RepositoryService())));
        $instance->addExtension(new \Shopware\Storefront\Framework\Twig\TemplateDataExtension($b, ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->privates['Shopware\\Storefront\\Theme\\ThemeService'] ?? $this->getThemeServiceService()), true, 'twig'));
        $instance->addExtension(new \Shopware\Storefront\Framework\Twig\IconExtension($c));
        $instance->addExtension(new \Shopware\Storefront\Framework\Twig\ThumbnailExtension($c));
        $instance->addExtension(new \Shopware\Storefront\Framework\Twig\Extension\UrlEncodingTwigFilter());
        $instance->addExtension(new \Shopware\Storefront\Framework\Twig\Extension\SwSanitizeTwigFilter());
        $instance->addExtension(new \Shopware\Storefront\Framework\Twig\Extension\CsrfFunctionExtension());
        $instance->addGlobal('app', $d);
        $instance->addRuntimeLoader(new \Twig\RuntimeLoader\ContainerRuntimeLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => ['privates', 'twig.runtime.security_csrf', 'getTwig_Runtime_SecurityCsrfService', false],
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => ['privates', 'twig.runtime.httpkernel', 'getTwig_Runtime_HttpkernelService', false],
        ], [
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => '?',
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => '?',
        ])));
        (new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','))->configure($instance);

        return $instance;
    }

    /*
     * Gets the public 'twig.controller.exception' shared service.
     *
     * @return \Symfony\Bundle\TwigBundle\Controller\ExceptionController
     *
     * @deprecated The "twig.controller.exception" service is deprecated since Symfony 4.4.
     */
    protected function getTwig_Controller_ExceptionService()
    {
        @trigger_error('The "twig.controller.exception" service is deprecated since Symfony 4.4.', E_USER_DEPRECATED);

        return $this->services['twig.controller.exception'] = new \Symfony\Bundle\TwigBundle\Controller\ExceptionController(($this->services['twig'] ?? $this->getTwigService()), false);
    }

    /*
     * Gets the public 'twig.controller.preview_error' shared service.
     *
     * @return \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController
     *
     * @deprecated The "twig.controller.preview_error" service is deprecated since Symfony 4.4.
     */
    protected function getTwig_Controller_PreviewErrorService()
    {
        @trigger_error('The "twig.controller.preview_error" service is deprecated since Symfony 4.4.', E_USER_DEPRECATED);

        return $this->services['twig.controller.preview_error'] = new \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController(($this->services['http_kernel'] ?? $this->getHttpKernelService()), NULL);
    }

    /*
     * Gets the public 'unit.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getUnit_RepositoryService()
    {
        return $this->services['unit.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Unit\\UnitDefinition'] ?? $this->getUnitDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'unit_translation.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getUnitTranslation_RepositoryService()
    {
        return $this->services['unit_translation.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\Unit\\Aggregate\\UnitTranslation\\UnitTranslationDefinition'] ?? $this->getUnitTranslationDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'user.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getUser_RepositoryService()
    {
        return $this->services['user.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\User\\UserDefinition'] ?? $this->getUserDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'user_access_key.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getUserAccessKey_RepositoryService()
    {
        return $this->services['user_access_key.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\User\\Aggregate\\UserAccessKey\\UserAccessKeyDefinition'] ?? $this->getUserAccessKeyDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'user_recovery.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getUserRecovery_RepositoryService()
    {
        return $this->services['user_recovery.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\System\\User\\Aggregate\\UserRecovery\\UserRecoveryDefinition'] ?? $this->getUserRecoveryDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'user_role_acl.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getUserRoleAcl_RepositoryService()
    {
        return $this->services['user_role_acl.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\Api\\Acl\\Role\\AclUserRoleDefinition'] ?? $this->getAclUserRoleDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'validator' shared service.
     *
     * @return \Symfony\Component\Validator\Validator\ValidatorInterface
     */
    protected function getValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/Mapping/Factory/MetadataFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/Validator/ValidatorInterface.php';

        return $this->services['validator'] = ($this->privates['validator.builder'] ?? $this->getValidator_BuilderService())->getValidator();
    }

    /*
     * Gets the public 'version.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getVersion_RepositoryService()
    {
        return $this->services['version.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\VersionDefinition'] ?? $this->getVersionDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'version_commit.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getVersionCommit_RepositoryService()
    {
        return $this->services['version_commit.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommit\\VersionCommitDefinition'] ?? $this->getVersionCommitDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the public 'version_commit_data.repository' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository
     */
    protected function getVersionCommitData_RepositoryService()
    {
        return $this->services['version_commit_data.repository'] = new \Shopware\Core\Framework\DataAbstractionLayer\EntityRepository(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommitData\\VersionCommitDataDefinition'] ?? $this->getVersionCommitDataDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] ?? $this->getVersionManagerService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] ?? $this->getCachedEntityAggregatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private '.cache.http.inner' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected function get_Cache_Http_InnerService()
    {
        $this->privates['.cache.http.inner'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('BM988FRwQE', 3600, ($this->targetDir.''.'/pools'), ($this->privates['cache.default_marshaller'] ?? ($this->privates['cache.default_marshaller'] = new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL))));

        $instance->setLogger(($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));

        return $instance;
    }

    /*
     * Gets the private '.cache.object.inner' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected function get_Cache_Object_InnerService()
    {
        $this->privates['.cache.object.inner'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('f5mi57D4rH', 3600, ($this->targetDir.''.'/pools'), ($this->privates['cache.default_marshaller'] ?? ($this->privates['cache.default_marshaller'] = new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL))));

        $instance->setLogger(($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));

        return $instance;
    }

    /*
     * Gets the private '.legacy_resolve_controller_name_subscriber' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber
     */
    protected function get_LegacyResolveControllerNameSubscriberService()
    {
        return $this->privates['.legacy_resolve_controller_name_subscriber'] = new \Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber(($this->privates['.legacy_controller_name_converter'] ?? ($this->privates['.legacy_controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(($this->services['kernel'] ?? $this->get('kernel', 1)), false))), false);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.1SPMxF6' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_1SPMxF6Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';

        return $this->privates['.messenger.handler_descriptor.1SPMxF6'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(($this->privates['Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\CacheWarmer'] ?? $this->getCacheWarmer2Service()), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.3.rzR14' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_3_RzR14Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Message/DeleteFileHandler.php';

        return $this->privates['.messenger.handler_descriptor.3.rzR14'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Content\ImportExport\Message\DeleteFileHandler(($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService())), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.4htA3jl' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_4htA3jlService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/ScheduledTask/ProductExportPartialGenerationHandler.php';

        return $this->privates['.messenger.handler_descriptor.4htA3jl'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportPartialGenerationHandler(($this->services['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportGenerator'] ?? $this->getProductExportGeneratorService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] ?? $this->getSalesChannelContextFactoryService()), ($this->services['product_export.repository'] ?? $this->getProductExport_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportFileHandler'] ?? $this->getProductExportFileHandlerService()), ($this->services['message_bus'] ?? $this->getMessageBusService()), ($this->privates['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportRenderer'] ?? $this->getProductExportRendererService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextService'] ?? $this->getSalesChannelContextServiceService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextPersister'] ?? $this->getSalesChannelContextPersisterService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), 100), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.6a6vTR.' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_6a6vTR_Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';

        return $this->privates['.messenger.handler_descriptor.6a6vTR.'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(($this->privates['Shopware\\Core\\Content\\Media\\Message\\GenerateThumbnailsHandler'] ?? $this->getGenerateThumbnailsHandlerService()), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.6kBcctU' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_6kBcctUService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/ScheduledTaskHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Newsletter/ScheduledTask/NewsletterRecipientTaskHandler.php';

        return $this->privates['.messenger.handler_descriptor.6kBcctU'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTaskHandler(($this->services['scheduled_task.repository'] ?? $this->getScheduledTask_RepositoryService()), ($this->services['newsletter_recipient.repository'] ?? $this->getNewsletterRecipient_RepositoryService())), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.88lOdtC' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_88lOdtCService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';

        return $this->privates['.messenger.handler_descriptor.88lOdtC'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(($this->privates['Shopware\\Core\\Content\\Media\\Message\\GenerateThumbnailsHandler'] ?? $this->getGenerateThumbnailsHandlerService()), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.BzkW.st' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_BzkW_StService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/ScheduledTaskHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/RequeueDeadMessagesHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/DeadMessage/RequeueDeadMessagesService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/EncryptedBus.php';

        $a = ($this->services['message_bus'] ?? $this->getMessageBusService());

        return $this->privates['.messenger.handler_descriptor.BzkW.st'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Framework\MessageQueue\ScheduledTask\RequeueDeadMessagesHandler(($this->services['scheduled_task.repository'] ?? $this->getScheduledTask_RepositoryService()), new \Shopware\Core\Framework\MessageQueue\DeadMessage\RequeueDeadMessagesService(($this->services['dead_message.repository'] ?? $this->getDeadMessage_RepositoryService()), $a, new \Shopware\Core\Framework\MessageQueue\EncryptedBus($a, ($this->privates['shopware.public_key'] ?? ($this->privates['shopware.public_key'] = new \League\OAuth2\Server\CryptKey((\dirname(__DIR__, 4).'/config/jwt/public.pem'))))))), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.RWDR7vF' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_RWDR7vFService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';

        return $this->privates['.messenger.handler_descriptor.RWDR7vF'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(($this->privates['Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapGenerateTaskHandler'] ?? $this->getSitemapGenerateTaskHandlerService()), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.RaXVyBY' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_RaXVyBYService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';

        return $this->privates['.messenger.handler_descriptor.RaXVyBY'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(($this->services['Shopware\\Elasticsearch\\Framework\\Indexing\\CreateAliasTaskHandler'] ?? $this->getCreateAliasTaskHandlerService()), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.TaMu3bd' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_TaMu3bdService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Message/DeleteFileHandler.php';

        return $this->privates['.messenger.handler_descriptor.TaMu3bd'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Content\Media\Message\DeleteFileHandler(($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService())), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.W5d8anj' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_W5d8anjService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/EncryptedMessageHandler.php';

        return $this->privates['.messenger.handler_descriptor.W5d8anj'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Framework\MessageQueue\Handler\EncryptedMessageHandler(($this->services['message_bus'] ?? $this->getMessageBusService()), ($this->privates['shopware.private_key'] ?? ($this->privates['shopware.private_key'] = new \League\OAuth2\Server\CryptKey((\dirname(__DIR__, 4).'/config/jwt/private.pem'), $this->getEnv('string:default:jwt_private_key_passphrase_default:JWT_PRIVATE_KEY_PASSPHRASE'))))), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor._GqRtdU' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_GqRtdUService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Indexing/IndexingMessageHandler.php';

        return $this->privates['.messenger.handler_descriptor._GqRtdU'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Elasticsearch\Framework\Indexing\IndexingMessageHandler(($this->services['Elasticsearch\\Client'] ?? $this->getClientService()), ($this->privates['Shopware\\Elasticsearch\\Framework\\ElasticsearchRegistry'] ?? $this->getElasticsearchRegistryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService())), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.dVP21hY' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_DVP21hYService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/MessageQueue/RegisterScheduledTaskHandler.php';

        return $this->privates['.messenger.handler_descriptor.dVP21hY'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Framework\MessageQueue\ScheduledTask\MessageQueue\RegisterScheduledTaskHandler(($this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Registry\\TaskRegistry'] ?? $this->getTaskRegistryService())), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.rvKU_JQ' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_RvKUJQService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/RetryMessageHandler.php';

        return $this->privates['.messenger.handler_descriptor.rvKU_JQ'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Framework\MessageQueue\Handler\RetryMessageHandler($this, ($this->services['dead_message.repository'] ?? $this->getDeadMessage_RepositoryService())), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.wYSIMNj' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_WYSIMNjService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/ScheduledTaskHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/ScheduledTask/ProductExportGenerateTaskHandler.php';

        return $this->privates['.messenger.handler_descriptor.wYSIMNj'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTaskHandler(($this->services['scheduled_task.repository'] ?? $this->getScheduledTask_RepositoryService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] ?? $this->getSalesChannelContextFactoryService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->services['product_export.repository'] ?? $this->getProductExport_RepositoryService()), ($this->services['message_bus'] ?? $this->getMessageBusService())), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.z1zS9WT' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_Z1zS9WTService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/MessageQueue/IndexerHandler.php';

        return $this->privates['.messenger.handler_descriptor.z1zS9WT'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(new \Shopware\Core\Framework\DataAbstractionLayer\Indexing\MessageQueue\IndexerHandler(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\IndexerRegistryInterface'] ?? $this->getIndexerRegistryInterfaceService()), ($this->services['message_bus'] ?? $this->getMessageBusService())), []);
    }

    /*
     * Gets the private '.messenger.handler_descriptor.z290ooz' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    protected function get_Messenger_HandlerDescriptor_Z290oozService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';

        return $this->privates['.messenger.handler_descriptor.z290ooz'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor(($this->privates['Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapGenerateTaskHandler'] ?? $this->getSitemapGenerateTaskHandlerService()), []);
    }

    /*
     * Gets the private '.service_locator.fOeSjcj' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_FOeSjcjService()
    {
        return $this->privates['.service_locator.fOeSjcj'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'default' => ['privates', 'messenger.transport.default', 'getMessenger_Transport_DefaultService', false],
            'messenger.transport.default' => ['privates', 'messenger.transport.default', 'getMessenger_Transport_DefaultService', false],
        ], [
            'default' => '?',
            'messenger.transport.default' => '?',
        ]);
    }

    /*
     * Gets the private 'Shopware\Administration\Command\AdministrationDumpFeaturesCommand' shared service.
     *
     * @return \Shopware\Administration\Command\AdministrationDumpFeaturesCommand
     */
    protected function getAdministrationDumpFeaturesCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/administration/Command/AdministrationDumpFeaturesCommand.php';

        $this->privates['Shopware\\Administration\\Command\\AdministrationDumpFeaturesCommand'] = $instance = new \Shopware\Administration\Command\AdministrationDumpFeaturesCommand(($this->services['kernel'] ?? $this->get('kernel', 1)));

        $instance->setName('administration:dump:features');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\CartPersister' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\CartPersister
     */
    protected function getCartPersisterService()
    {
        return $this->privates['Shopware\\Core\\Checkout\\Cart\\CartPersister'] = new \Shopware\Core\Checkout\Cart\CartPersister(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\CartRuleLoader' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\CartRuleLoader
     */
    protected function getCartRuleLoaderService()
    {
        return $this->privates['Shopware\\Core\\Checkout\\Cart\\CartRuleLoader'] = new \Shopware\Core\Checkout\Cart\CartRuleLoader(($this->privates['Shopware\\Core\\Checkout\\Cart\\CartPersister'] ?? $this->getCartPersisterService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Processor'] ?? $this->getProcessorService()), ($this->services['rule.repository'] ?? $this->getRule_RepositoryService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), ($this->privates['cache.object'] ?? $this->getCache_ObjectService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\CartValueResolver' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\CartValueResolver
     */
    protected function getCartValueResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartValueResolver.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\CartValueResolver'] = new \Shopware\Core\Checkout\Cart\CartValueResolver(($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\CreditCartProcessor' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\CreditCartProcessor
     */
    protected function getCreditCartProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CreditCartProcessor.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\CreditCartProcessor'] = new \Shopware\Core\Checkout\Cart\CreditCartProcessor(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\AbsolutePriceCalculator'] ?? $this->getAbsolutePriceCalculatorService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\CustomCartProcessor' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\CustomCartProcessor
     */
    protected function getCustomCartProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CustomCartProcessor.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\CustomCartProcessor'] = new \Shopware\Core\Checkout\Cart\CustomCartProcessor(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\QuantityPriceCalculator'] ?? $this->getQuantityPriceCalculatorService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Delivery\DeliveryProcessor' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Delivery\DeliveryProcessor
     */
    protected function getDeliveryProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartDataCollectorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Delivery/DeliveryProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Delivery/DeliveryBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Delivery/DeliveryCalculator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Tax/PercentageTaxRuleBuilder.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Delivery\\DeliveryProcessor'] = new \Shopware\Core\Checkout\Cart\Delivery\DeliveryProcessor(new \Shopware\Core\Checkout\Cart\Delivery\DeliveryBuilder(), new \Shopware\Core\Checkout\Cart\Delivery\DeliveryCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\QuantityPriceCalculator'] ?? $this->getQuantityPriceCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\PercentageTaxRuleBuilder'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\PercentageTaxRuleBuilder'] = new \Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder()))), ($this->services['shipping_method.repository'] ?? $this->getShippingMethod_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupServiceRegistry' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupServiceRegistry
     */
    protected function getLineItemGroupServiceRegistryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/LineItem/Group/LineItemGroupServiceRegistry.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\LineItemGroupServiceRegistry'] = new \Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupServiceRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Packager\\LineItemGroupCountPackager'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Packager\\LineItemGroupCountPackager'] = new \Shopware\Core\Checkout\Cart\LineItem\Group\Packager\LineItemGroupCountPackager()));
            yield 1 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Packager\\LineItemGroupUnitPriceGrossPackager'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Packager\\LineItemGroupUnitPriceGrossPackager'] = new \Shopware\Core\Checkout\Cart\LineItem\Group\Packager\LineItemGroupUnitPriceGrossPackager()));
            yield 2 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Packager\\LineItemGroupUnitPriceNetPackager'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Packager\\LineItemGroupUnitPriceNetPackager'] = new \Shopware\Core\Checkout\Cart\LineItem\Group\Packager\LineItemGroupUnitPriceNetPackager()));
        }, 3), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Sorter\\LineItemGroupPriceAscSorter'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Sorter\\LineItemGroupPriceAscSorter'] = new \Shopware\Core\Checkout\Cart\LineItem\Group\Sorter\LineItemGroupPriceAscSorter()));
            yield 1 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Sorter\\LineItemGroupPriceDescSorter'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\Sorter\\LineItemGroupPriceDescSorter'] = new \Shopware\Core\Checkout\Cart\LineItem\Group\Sorter\LineItemGroupPriceDescSorter()));
        }, 2));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Order\OrderConverter' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Order\OrderConverter
     */
    protected function getOrderConverterService()
    {
        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Order\\OrderConverter'] = new \Shopware\Core\Checkout\Cart\Order\OrderConverter(($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] ?? $this->getSalesChannelContextFactoryService()), ($this->privates['Shopware\\Core\\System\\StateMachine\\StateMachineRegistry'] ?? $this->getStateMachineRegistryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\System\\NumberRange\\ValueGenerator\\NumberRangeValueGeneratorInterface'] ?? $this->getNumberRangeValueGeneratorInterfaceService()), ($this->services['Shopware\\Core\\Checkout\\Order\\OrderDefinition'] ?? $this->getOrderDefinitionService()), ($this->services['order_address.repository'] ?? $this->getOrderAddress_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Price\AbsolutePriceCalculator' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Price\AbsolutePriceCalculator
     */
    protected function getAbsolutePriceCalculatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Price/AbsolutePriceCalculator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Tax/PercentageTaxRuleBuilder.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\AbsolutePriceCalculator'] = new \Shopware\Core\Checkout\Cart\Price\AbsolutePriceCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\QuantityPriceCalculator'] ?? $this->getQuantityPriceCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\PercentageTaxRuleBuilder'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\PercentageTaxRuleBuilder'] = new \Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder())));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Price\AmountCalculator' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Price\AmountCalculator
     */
    protected function getAmountCalculatorService()
    {
        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\AmountCalculator'] = new \Shopware\Core\Checkout\Cart\Price\AmountCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\TaxDetector'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\TaxDetector'] = new \Shopware\Core\Checkout\Cart\Tax\TaxDetector())), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] = new \Shopware\Core\Checkout\Cart\Price\PriceRounding())));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Price\GrossPriceCalculator' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Price\GrossPriceCalculator
     */
    protected function getGrossPriceCalculatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Price/GrossPriceCalculator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\GrossPriceCalculator'] = new \Shopware\Core\Checkout\Cart\Price\GrossPriceCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\TaxCalculator'] ?? $this->getTaxCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] = new \Shopware\Core\Checkout\Cart\Price\PriceRounding())), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\ReferencePriceCalculator'] ?? $this->getReferencePriceCalculatorService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Price\NetPriceCalculator' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Price\NetPriceCalculator
     */
    protected function getNetPriceCalculatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Price/NetPriceCalculator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\NetPriceCalculator'] = new \Shopware\Core\Checkout\Cart\Price\NetPriceCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\TaxCalculator'] ?? $this->getTaxCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] = new \Shopware\Core\Checkout\Cart\Price\PriceRounding())), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\ReferencePriceCalculator'] ?? $this->getReferencePriceCalculatorService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator
     */
    protected function getPercentagePriceCalculatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Price/PercentagePriceCalculator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Tax/PercentageTaxRuleBuilder.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PercentagePriceCalculator'] = new \Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] = new \Shopware\Core\Checkout\Cart\Price\PriceRounding())), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\PercentageTaxRuleBuilder'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\PercentageTaxRuleBuilder'] = new \Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder())));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator
     */
    protected function getQuantityPriceCalculatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Price/QuantityPriceCalculator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\QuantityPriceCalculator'] = new \Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\GrossPriceCalculator'] ?? $this->getGrossPriceCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\NetPriceCalculator'] ?? $this->getNetPriceCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\TaxDetector'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\TaxDetector'] = new \Shopware\Core\Checkout\Cart\Tax\TaxDetector())), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\ReferencePriceCalculator'] ?? $this->getReferencePriceCalculatorService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Price\ReferencePriceCalculator' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Price\ReferencePriceCalculator
     */
    protected function getReferencePriceCalculatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Price/ReferencePriceCalculator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\ReferencePriceCalculator'] = new \Shopware\Core\Checkout\Cart\Price\ReferencePriceCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] = new \Shopware\Core\Checkout\Cart\Price\PriceRounding())));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Processor' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Processor
     */
    protected function getProcessorService()
    {
        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Processor'] = new \Shopware\Core\Checkout\Cart\Processor(new \Shopware\Core\Checkout\Cart\Validator(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Delivery\\DeliveryValidator'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Delivery\\DeliveryValidator'] = new \Shopware\Core\Checkout\Cart\Delivery\DeliveryValidator()));
            yield 1 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\LineItemValidator'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\LineItemValidator'] = new \Shopware\Core\Checkout\Cart\LineItem\LineItemValidator()));
            yield 2 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Address\\AddressValidator'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Address\\AddressValidator'] = new \Shopware\Core\Checkout\Cart\Address\AddressValidator()));
            yield 3 => ($this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentMethodValidator'] ?? ($this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentMethodValidator'] = new \Shopware\Core\Checkout\Payment\Cart\PaymentMethodValidator()));
        }, 4)), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\AmountCalculator'] ?? $this->getAmountCalculatorService()), new \Shopware\Core\Checkout\Cart\Transaction\TransactionProcessor(), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\Product\\Cart\\ProductCartProcessor'] ?? $this->getProductCartProcessorService());
            yield 1 => ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionProcessor'] ?? $this->getPromotionProcessorService());
            yield 2 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\CreditCartProcessor'] ?? $this->getCreditCartProcessorService());
            yield 3 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\CustomCartProcessor'] ?? $this->getCustomCartProcessorService());
            yield 4 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Delivery\\DeliveryProcessor'] ?? $this->getDeliveryProcessorService());
            yield 5 => ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionDeliveryProcessor'] ?? $this->getPromotionDeliveryProcessorService());
        }, 6), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\Product\\Cart\\ProductCartProcessor'] ?? $this->getProductCartProcessorService());
            yield 1 => ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionCollector'] ?? $this->getPromotionCollectorService());
            yield 2 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Delivery\\DeliveryProcessor'] ?? $this->getDeliveryProcessorService());
        }, 3));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Cart\Tax\TaxCalculator' shared service.
     *
     * @return \Shopware\Core\Checkout\Cart\Tax\TaxCalculator
     */
    protected function getTaxCalculatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Tax/TaxCalculator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/Tax/TaxRuleCalculator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\TaxCalculator'] = new \Shopware\Core\Checkout\Cart\Tax\TaxCalculator(new \Shopware\Core\Checkout\Cart\Tax\TaxRuleCalculator());
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\SalesChannel\AccountRegistrationService' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\SalesChannel\AccountRegistrationService
     */
    protected function getAccountRegistrationServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/SalesChannel/AccountRegistrationService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/ValidationServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/DataValidationFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Validation/CustomerValidationFactory.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountRegistrationService'] = new \Shopware\Core\Checkout\Customer\SalesChannel\AccountRegistrationService(($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Event\\BusinessEventDispatcher'] ?? $this->getBusinessEventDispatcherService()), ($this->privates['Shopware\\Core\\System\\NumberRange\\ValueGenerator\\NumberRangeValueGeneratorInterface'] ?? $this->getNumberRangeValueGeneratorInterfaceService()), ($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), new \Shopware\Core\Checkout\Customer\Validation\CustomerValidationFactory(($this->privates['Shopware\\Core\\Checkout\\Customer\\Validation\\CustomerProfileValidationFactory'] ?? $this->getCustomerProfileValidationFactoryService())), ($this->privates['Shopware\\Core\\Checkout\\Customer\\Validation\\AddressValidationFactory'] ?? $this->getAddressValidationFactoryService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->services['sales_channel_domain.repository'] ?? $this->getSalesChannelDomain_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\SalesChannel\AccountService' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\SalesChannel\AccountService
     */
    protected function getAccountServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/SalesChannel/AccountService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Password/LegacyPasswordVerifier.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountService'] = new \Shopware\Core\Checkout\Customer\SalesChannel\AccountService(($this->services['customer_address.repository'] ?? $this->getCustomerAddress_RepositoryService()), ($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()), ($this->services['customer_recovery.repository'] ?? $this->getCustomerRecovery_RepositoryService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextPersister'] ?? $this->getSalesChannelContextPersisterService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\Validation\\CustomerProfileValidationFactory'] ?? $this->getCustomerProfileValidationFactoryService()), new \Shopware\Core\Checkout\Customer\Password\LegacyPasswordVerifier(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Password\\LegacyEncoder\\Md5'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Password\\LegacyEncoder\\Md5'] = new \Shopware\Core\Checkout\Customer\Password\LegacyEncoder\Md5()));
            yield 1 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Password\\LegacyEncoder\\Sha256'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Password\\LegacyEncoder\\Sha256'] = new \Shopware\Core\Checkout\Customer\Password\LegacyEncoder\Sha256()));
        }, 2)), ($this->services['payment_method.repository'] ?? $this->getPaymentMethod_RepositoryService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->services['router'] ?? $this->getRouterService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\SalesChannel\AddressService' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\SalesChannel\AddressService
     */
    protected function getAddressServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/SalesChannel/AddressService.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AddressService'] = new \Shopware\Core\Checkout\Customer\SalesChannel\AddressService(($this->services['country.repository'] ?? $this->getCountry_RepositoryService()), ($this->services['customer_address.repository'] ?? $this->getCustomerAddress_RepositoryService()), ($this->privates['Shopware\\Core\\Checkout\\Customer\\Validation\\AddressValidationFactory'] ?? $this->getAddressValidationFactoryService()), ($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\Subscriber\CustomerMetaFieldSubscriber' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Subscriber\CustomerMetaFieldSubscriber
     */
    protected function getCustomerMetaFieldSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Subscriber/CustomerMetaFieldSubscriber.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\Subscriber\\CustomerMetaFieldSubscriber'] = new \Shopware\Core\Checkout\Customer\Subscriber\CustomerMetaFieldSubscriber(($this->services['order.repository'] ?? $this->getOrder_RepositoryService()), ($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\Subscriber\CustomerRemoteAddressSubscriber' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Subscriber\CustomerRemoteAddressSubscriber
     */
    protected function getCustomerRemoteAddressSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Subscriber/CustomerRemoteAddressSubscriber.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\Subscriber\\CustomerRemoteAddressSubscriber'] = new \Shopware\Core\Checkout\Customer\Subscriber\CustomerRemoteAddressSubscriber(($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\Subscriber\CustomerTokenSubscriber' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Subscriber\CustomerTokenSubscriber
     */
    protected function getCustomerTokenSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Subscriber/CustomerTokenSubscriber.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\Subscriber\\CustomerTokenSubscriber'] = new \Shopware\Core\Checkout\Customer\Subscriber\CustomerTokenSubscriber(($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextPersister'] ?? $this->getSalesChannelContextPersisterService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\Validation\AddressValidationFactory' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Validation\AddressValidationFactory
     */
    protected function getAddressValidationFactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/ValidationServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/DataValidationFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Validation/AddressValidationFactory.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\Validation\\AddressValidationFactory'] = new \Shopware\Core\Checkout\Customer\Validation\AddressValidationFactory(($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerEmailUniqueValidator' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerEmailUniqueValidator
     */
    protected function getCustomerEmailUniqueValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Validation/Constraint/CustomerEmailUniqueValidator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\Validation\\Constraint\\CustomerEmailUniqueValidator'] = new \Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerEmailUniqueValidator(($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerPasswordMatchesValidator' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerPasswordMatchesValidator
     */
    protected function getCustomerPasswordMatchesValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Validation/Constraint/CustomerPasswordMatchesValidator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\Validation\\Constraint\\CustomerPasswordMatchesValidator'] = new \Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerPasswordMatchesValidator(($this->privates['Shopware\\Core\\Checkout\\Customer\\SalesChannel\\AccountService'] ?? $this->getAccountServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Customer\Validation\CustomerProfileValidationFactory' shared service.
     *
     * @return \Shopware\Core\Checkout\Customer\Validation\CustomerProfileValidationFactory
     */
    protected function getCustomerProfileValidationFactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/ValidationServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/DataValidationFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Customer/Validation/CustomerProfileValidationFactory.php';

        return $this->privates['Shopware\\Core\\Checkout\\Customer\\Validation\\CustomerProfileValidationFactory'] = new \Shopware\Core\Checkout\Customer\Validation\CustomerProfileValidationFactory(($this->services['Shopware\\Core\\System\\Salutation\\SalutationDefinition'] ?? $this->getSalutationDefinitionService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Document\DocumentGenerator\CreditNoteGenerator' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\DocumentGenerator\CreditNoteGenerator
     */
    protected function getCreditNoteGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGenerator/DocumentGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGenerator/CreditNoteGenerator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Document\\DocumentGenerator\\CreditNoteGenerator'] = new \Shopware\Core\Checkout\Document\DocumentGenerator\CreditNoteGenerator(($this->privates['Shopware\\Core\\Checkout\\Document\\Twig\\DocumentTemplateRenderer'] ?? $this->getDocumentTemplateRendererService()), (\dirname(__DIR__, 4).'/src'));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Document\DocumentGenerator\DeliveryNoteGenerator' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\DocumentGenerator\DeliveryNoteGenerator
     */
    protected function getDeliveryNoteGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGenerator/DocumentGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGenerator/DeliveryNoteGenerator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Document\\DocumentGenerator\\DeliveryNoteGenerator'] = new \Shopware\Core\Checkout\Document\DocumentGenerator\DeliveryNoteGenerator(($this->privates['Shopware\\Core\\Checkout\\Document\\Twig\\DocumentTemplateRenderer'] ?? $this->getDocumentTemplateRendererService()), (\dirname(__DIR__, 4).'/src'));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Document\DocumentGenerator\InvoiceGenerator' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\DocumentGenerator\InvoiceGenerator
     */
    protected function getInvoiceGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGenerator/DocumentGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGenerator/InvoiceGenerator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Document\\DocumentGenerator\\InvoiceGenerator'] = new \Shopware\Core\Checkout\Document\DocumentGenerator\InvoiceGenerator(($this->privates['Shopware\\Core\\Checkout\\Document\\Twig\\DocumentTemplateRenderer'] ?? $this->getDocumentTemplateRendererService()), (\dirname(__DIR__, 4).'/src'));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Document\DocumentGenerator\StornoGenerator' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\DocumentGenerator\StornoGenerator
     */
    protected function getStornoGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGenerator/DocumentGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGenerator/StornoGenerator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Document\\DocumentGenerator\\StornoGenerator'] = new \Shopware\Core\Checkout\Document\DocumentGenerator\StornoGenerator(($this->privates['Shopware\\Core\\Checkout\\Document\\Twig\\DocumentTemplateRenderer'] ?? $this->getDocumentTemplateRendererService()), (\dirname(__DIR__, 4).'/src'));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Document\DocumentService' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\DocumentService
     */
    protected function getDocumentServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/DocumentGenerator/DocumentGeneratorRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/FileGenerator/FileGeneratorRegistry.php';

        return $this->privates['Shopware\\Core\\Checkout\\Document\\DocumentService'] = new \Shopware\Core\Checkout\Document\DocumentService(new \Shopware\Core\Checkout\Document\DocumentGenerator\DocumentGeneratorRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Checkout\\Document\\DocumentGenerator\\InvoiceGenerator'] ?? $this->getInvoiceGeneratorService());
            yield 1 => ($this->privates['Shopware\\Core\\Checkout\\Document\\DocumentGenerator\\DeliveryNoteGenerator'] ?? $this->getDeliveryNoteGeneratorService());
            yield 2 => ($this->privates['Shopware\\Core\\Checkout\\Document\\DocumentGenerator\\StornoGenerator'] ?? $this->getStornoGeneratorService());
            yield 3 => ($this->privates['Shopware\\Core\\Checkout\\Document\\DocumentGenerator\\CreditNoteGenerator'] ?? $this->getCreditNoteGeneratorService());
        }, 4)), new \Shopware\Core\Checkout\Document\FileGenerator\FileGeneratorRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Checkout\\Document\\FileGenerator\\PdfGenerator'] ?? ($this->privates['Shopware\\Core\\Checkout\\Document\\FileGenerator\\PdfGenerator'] = new \Shopware\Core\Checkout\Document\FileGenerator\PdfGenerator()));
        }, 1)), ($this->services['order.repository'] ?? $this->getOrder_RepositoryService()), ($this->services['document.repository'] ?? $this->getDocument_RepositoryService()), ($this->services['document_type.repository'] ?? $this->getDocumentType_RepositoryService()), ($this->services['document_base_config.repository'] ?? $this->getDocumentBaseConfig_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\Media\\MediaService'] ?? $this->getMediaServiceService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Document\Twig\DocumentTemplateRenderer' shared service.
     *
     * @return \Shopware\Core\Checkout\Document\Twig\DocumentTemplateRenderer
     */
    protected function getDocumentTemplateRendererService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Twig/DocumentTemplateRenderer.php';

        return $this->privates['Shopware\\Core\\Checkout\\Document\\Twig\\DocumentTemplateRenderer'] = new \Shopware\Core\Checkout\Document\Twig\DocumentTemplateRenderer(($this->services['Shopware\\Storefront\\Theme\\Twig\\ThemeTemplateFinder'] ?? $this->getThemeTemplateFinderService()), ($this->services['twig'] ?? $this->getTwigService()), ($this->services['translator'] ?? $this->getTranslatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler
     */
    protected function getOrderTransactionStateHandlerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Aggregate/OrderTransaction/OrderTransactionStateHandler.php';

        return $this->privates['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionStateHandler'] = new \Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler(($this->privates['Shopware\\Core\\System\\StateMachine\\StateMachineRegistry'] ?? $this->getStateMachineRegistryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Order\Listener\OrderStateChangeEventListener' shared service.
     *
     * @return \Shopware\Core\Checkout\Order\Listener\OrderStateChangeEventListener
     */
    protected function getOrderStateChangeEventListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Order/Listener/OrderStateChangeEventListener.php';

        return $this->privates['Shopware\\Core\\Checkout\\Order\\Listener\\OrderStateChangeEventListener'] = new \Shopware\Core\Checkout\Order\Listener\OrderStateChangeEventListener(($this->services['order.repository'] ?? $this->getOrder_RepositoryService()), ($this->services['order_transaction.repository'] ?? $this->getOrderTransaction_RepositoryService()), ($this->services['order_delivery.repository'] ?? $this->getOrderDelivery_RepositoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Payment\Cart\PaymentHandler\CashPayment' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\CashPayment
     */
    protected function getCashPaymentService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/SynchronousPaymentHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/DefaultPayment.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/CashPayment.php';

        return $this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\CashPayment'] = new \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\CashPayment(($this->privates['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionStateHandler'] ?? $this->getOrderTransactionStateHandlerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DebitPayment' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DebitPayment
     */
    protected function getDebitPaymentService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/SynchronousPaymentHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/DefaultPayment.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/DebitPayment.php';

        return $this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\DebitPayment'] = new \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DebitPayment(($this->privates['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionStateHandler'] ?? $this->getOrderTransactionStateHandlerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DefaultPayment' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DefaultPayment
     */
    protected function getDefaultPaymentService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/SynchronousPaymentHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/DefaultPayment.php';

        return $this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\DefaultPayment'] = new \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DefaultPayment(($this->privates['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionStateHandler'] ?? $this->getOrderTransactionStateHandlerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Payment\Cart\PaymentHandler\InvoicePayment' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\InvoicePayment
     */
    protected function getInvoicePaymentService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/SynchronousPaymentHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/DefaultPayment.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/InvoicePayment.php';

        return $this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\InvoicePayment'] = new \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\InvoicePayment(($this->privates['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionStateHandler'] ?? $this->getOrderTransactionStateHandlerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PrePayment' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PrePayment
     */
    protected function getPrePaymentService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/SynchronousPaymentHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/DefaultPayment.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/PrePayment.php';

        return $this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\PrePayment'] = new \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PrePayment(($this->privates['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionStateHandler'] ?? $this->getOrderTransactionStateHandlerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Payment\PaymentService' shared service.
     *
     * @return \Shopware\Core\Checkout\Payment\PaymentService
     */
    protected function getPaymentServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/PaymentService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentTransactionChainProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/Token/TokenFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/Token/JWTFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Payment/Cart/PaymentHandler/PaymentHandlerRegistry.php';

        $a = new \Shopware\Core\Checkout\Payment\Cart\Token\JWTFactory(($this->privates['shopware.private_key'] ?? ($this->privates['shopware.private_key'] = new \League\OAuth2\Server\CryptKey((\dirname(__DIR__, 4).'/config/jwt/private.pem'), $this->getEnv('string:default:jwt_private_key_passphrase_default:JWT_PRIVATE_KEY_PASSPHRASE')))));
        $b = new \Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PaymentHandlerRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\PrePayment'] ?? $this->getPrePaymentService());
            yield 1 => ($this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\DebitPayment'] ?? $this->getDebitPaymentService());
            yield 2 => ($this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\CashPayment'] ?? $this->getCashPaymentService());
            yield 3 => ($this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\InvoicePayment'] ?? $this->getInvoicePaymentService());
            yield 4 => ($this->privates['Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\DefaultPayment'] ?? $this->getDefaultPaymentService());
        }, 5), new RewindableGenerator(function () {
            return new \EmptyIterator();
        }, 0));

        return $this->privates['Shopware\\Core\\Checkout\\Payment\\PaymentService'] = new \Shopware\Core\Checkout\Payment\PaymentService(new \Shopware\Core\Checkout\Payment\Cart\PaymentTransactionChainProcessor($a, ($this->services['order.repository'] ?? $this->getOrder_RepositoryService()), ($this->services['router'] ?? $this->getRouterService()), $b, ($this->services['order_customer.repository'] ?? $this->getOrderCustomer_RepositoryService())), $a, ($this->services['payment_method.repository'] ?? $this->getPaymentMethod_RepositoryService()), $b, ($this->services['order_transaction.repository'] ?? $this->getOrderTransaction_RepositoryService()), ($this->privates['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderTransaction\\OrderTransactionStateHandler'] ?? $this->getOrderTransactionStateHandlerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Promotion\Cart\PromotionCollector' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Cart\PromotionCollector
     */
    protected function getPromotionCollectorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartDataCollectorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionCollector.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Gateway/PromotionGatewayInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Gateway/PromotionGateway.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Service/PromotionDateTimeServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Service/PromotionDateTimeService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionItemBuilder.php';

        return $this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionCollector'] = new \Shopware\Core\Checkout\Promotion\Cart\PromotionCollector(new \Shopware\Core\Checkout\Promotion\Gateway\PromotionGateway(($this->services['promotion.repository'] ?? $this->getPromotion_RepositoryService()), new \Shopware\Core\Checkout\Promotion\Service\PromotionDateTimeService()), ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionItemBuilder'] ?? ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionItemBuilder'] = new \Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder())));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Promotion\Cart\PromotionDeliveryProcessor' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Cart\PromotionDeliveryProcessor
     */
    protected function getPromotionDeliveryProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionDeliveryProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionCartInformationTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionDeliveryCalculator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionItemBuilder.php';

        return $this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionDeliveryProcessor'] = new \Shopware\Core\Checkout\Promotion\Cart\PromotionDeliveryProcessor(new \Shopware\Core\Checkout\Promotion\Cart\PromotionDeliveryCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\QuantityPriceCalculator'] ?? $this->getQuantityPriceCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PercentagePriceCalculator'] ?? $this->getPercentagePriceCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionItemBuilder'] ?? ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionItemBuilder'] = new \Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder()))));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Promotion\Cart\PromotionProcessor' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Cart\PromotionProcessor
     */
    protected function getPromotionProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionCartInformationTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/PromotionCalculator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/LineItem/Group/LineItemGroupBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/LineItem/Group/LineItemGroupRuleMatcherInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/LineItem/Group/RulesMatcher/AnyRuleMatcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/LineItem/LineItemQuantitySplitter.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/Discount/Composition/DiscountCompositionBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/Discount/Filter/AdvancedPackageFilter.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Cart/Discount/Filter/FilterServiceRegistry.php';

        $a = new \Shopware\Core\Checkout\Cart\LineItem\LineItemQuantitySplitter(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\QuantityPriceCalculator'] ?? $this->getQuantityPriceCalculatorService()));

        return $this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\PromotionProcessor'] = new \Shopware\Core\Checkout\Promotion\Cart\PromotionProcessor(new \Shopware\Core\Checkout\Promotion\Cart\PromotionCalculator(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\AmountCalculator'] ?? $this->getAmountCalculatorService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\AbsolutePriceCalculator'] ?? $this->getAbsolutePriceCalculatorService()), new \Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupBuilder(($this->privates['Shopware\\Core\\Checkout\\Cart\\LineItem\\Group\\LineItemGroupServiceRegistry'] ?? $this->getLineItemGroupServiceRegistryService()), new \Shopware\Core\Checkout\Cart\LineItem\Group\RulesMatcher\AnyRuleMatcher(), $a), new \Shopware\Core\Checkout\Promotion\Cart\Discount\Composition\DiscountCompositionBuilder(), new \Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackageFilter(new \Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\FilterServiceRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\Discount\\Filter\\Sorter\\FilterSorterPriceAsc'] ?? ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\Discount\\Filter\\Sorter\\FilterSorterPriceAsc'] = new \Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Sorter\FilterSorterPriceAsc()));
            yield 1 => ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\Discount\\Filter\\Sorter\\FilterSorterPriceDesc'] ?? ($this->privates['Shopware\\Core\\Checkout\\Promotion\\Cart\\Discount\\Filter\\Sorter\\FilterSorterPriceDesc'] = new \Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Sorter\FilterSorterPriceDesc()));
        }, 2))), $a, ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PercentagePriceCalculator'] ?? $this->getPercentagePriceCalculatorService())));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Promotion\DataAbstractionLayer\Indexing\PromotionExclusionIndexer' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\DataAbstractionLayer\Indexing\PromotionExclusionIndexer
     */
    protected function getPromotionExclusionIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/DataAbstractionLayer/Indexing/PromotionExclusionIndexer.php';

        return $this->privates['Shopware\\Core\\Checkout\\Promotion\\DataAbstractionLayer\\Indexing\\PromotionExclusionIndexer'] = new \Shopware\Core\Checkout\Promotion\DataAbstractionLayer\Indexing\PromotionExclusionIndexer(($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Checkout\\Promotion\\PromotionDefinition'] ?? $this->getPromotionDefinitionService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Promotion\DataAbstractionLayer\Indexing\PromotionRedemptionIndexer' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\DataAbstractionLayer\Indexing\PromotionRedemptionIndexer
     */
    protected function getPromotionRedemptionIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/DataAbstractionLayer/Indexing/PromotionRedemptionIndexer.php';

        return $this->privates['Shopware\\Core\\Checkout\\Promotion\\DataAbstractionLayer\\Indexing\\PromotionRedemptionIndexer'] = new \Shopware\Core\Checkout\Promotion\DataAbstractionLayer\Indexing\PromotionRedemptionIndexer(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Checkout\\Order\\Aggregate\\OrderLineItem\\OrderLineItemDefinition'] ?? $this->getOrderLineItemDefinitionService()), ($this->services['promotion.repository'] ?? $this->getPromotion_RepositoryService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Promotion\Subscriber\PromotionIndividualCodeRedeemer' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Subscriber\PromotionIndividualCodeRedeemer
     */
    protected function getPromotionIndividualCodeRedeemerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Subscriber/PromotionIndividualCodeRedeemer.php';

        return $this->privates['Shopware\\Core\\Checkout\\Promotion\\Subscriber\\PromotionIndividualCodeRedeemer'] = new \Shopware\Core\Checkout\Promotion\Subscriber\PromotionIndividualCodeRedeemer(($this->services['promotion_individual_code.repository'] ?? $this->getPromotionIndividualCode_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Promotion\Subscriber\Storefront\StorefrontCartSubscriber' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Subscriber\Storefront\StorefrontCartSubscriber
     */
    protected function getStorefrontCartSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Subscriber/Storefront/StorefrontCartSubscriber.php';

        return $this->privates['Shopware\\Core\\Checkout\\Promotion\\Subscriber\\Storefront\\StorefrontCartSubscriber'] = new \Shopware\Core\Checkout\Promotion\Subscriber\Storefront\StorefrontCartSubscriber(($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Checkout\Promotion\Validator\PromotionValidator' shared service.
     *
     * @return \Shopware\Core\Checkout\Promotion\Validator\PromotionValidator
     */
    protected function getPromotionValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Promotion/Validator/PromotionValidator.php';

        return $this->privates['Shopware\\Core\\Checkout\\Promotion\\Validator\\PromotionValidator'] = new \Shopware\Core\Checkout\Promotion\Validator\PromotionValidator(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Category\DataAbstractionLayer\Indexing\BreadcrumbIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Category\DataAbstractionLayer\Indexing\BreadcrumbIndexer
     */
    protected function getBreadcrumbIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Category/DataAbstractionLayer/Indexing/BreadcrumbIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Category\\DataAbstractionLayer\\Indexing\\BreadcrumbIndexer'] = new \Shopware\Core\Content\Category\DataAbstractionLayer\Indexing\BreadcrumbIndexer(($this->services['language.repository'] ?? $this->getLanguage_RepositoryService()), ($this->services['category.repository'] ?? $this->getCategory_RepositoryService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Category\Service\NavigationLoader' shared service.
     *
     * @return \Shopware\Core\Content\Category\Service\NavigationLoader
     */
    protected function getNavigationLoaderService()
    {
        return $this->privates['Shopware\\Core\\Content\\Category\\Service\\NavigationLoader'] = new \Shopware\Core\Content\Category\Service\NavigationLoader(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['sales_channel.category.repository'] ?? $this->getSalesChannel_Category_RepositoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Cms\DataResolver\Element\FormCmsElementResolver' shared service.
     *
     * @return \Shopware\Core\Content\Cms\DataResolver\Element\FormCmsElementResolver
     */
    protected function getFormCmsElementResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/DataResolver/Element/CmsElementResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/DataResolver/Element/AbstractCmsElementResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/DataResolver/Element/FormCmsElementResolver.php';

        return $this->privates['Shopware\\Core\\Content\\Cms\\DataResolver\\Element\\FormCmsElementResolver'] = new \Shopware\Core\Content\Cms\DataResolver\Element\FormCmsElementResolver(($this->services['salutation.repository'] ?? $this->getSalutation_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader' shared service.
     *
     * @return \Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader
     */
    protected function getSalesChannelCmsPageLoaderService()
    {
        return $this->privates['Shopware\\Core\\Content\\Cms\\SalesChannel\\SalesChannelCmsPageLoader'] = new \Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader(($this->services['cms_page.repository'] ?? $this->getCmsPage_RepositoryService()), ($this->services['Shopware\\Core\\Content\\Cms\\DataResolver\\CmsSlotsDataResolver'] ?? $this->getCmsSlotsDataResolverService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand
     */
    protected function getDeleteExpiredFilesCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Command/DeleteExpiredFilesCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Service/DeleteExpiredFilesService.php';

        $this->privates['Shopware\\Core\\Content\\ImportExport\\Command\\DeleteExpiredFilesCommand'] = $instance = new \Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand(new \Shopware\Core\Content\ImportExport\Service\DeleteExpiredFilesService(($this->services['import_export_file.repository'] ?? $this->getImportExportFile_RepositoryService())));

        $instance->setName('import-export:delete-expired');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\Command\ImportEntityCommand' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Command\ImportEntityCommand
     */
    protected function getImportEntityCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Command/ImportEntityCommand.php';

        $this->privates['Shopware\\Core\\Content\\ImportExport\\Command\\ImportEntityCommand'] = $instance = new \Shopware\Core\Content\ImportExport\Command\ImportEntityCommand(($this->privates['Shopware\\Core\\Content\\ImportExport\\Service\\ImportExportService'] ?? $this->getImportExportServiceService()), ($this->services['import_export_profile.repository'] ?? $this->getImportExportProfile_RepositoryService()), ($this->services['Shopware\\Core\\Content\\ImportExport\\ImportExportFactory'] ?? $this->getImportExportFactoryService()));

        $instance->setName('import:entity');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializer' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializer
     */
    protected function getMediaSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Entity/AbstractEntitySerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Entity/EntitySerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Entity/MediaSerializer.php';

        return $this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Entity\\MediaSerializer'] = new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializer(($this->privates['Shopware\\Core\\Content\\Media\\MediaService'] ?? $this->getMediaServiceService()), ($this->services['Shopware\\Core\\Content\\Media\\File\\FileSaver'] ?? $this->getFileSaverService()), ($this->services['media_folder.repository'] ?? $this->getMediaFolder_RepositoryService()), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\ProductSerializer' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\ProductSerializer
     */
    protected function getProductSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Entity/AbstractEntitySerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Entity/EntitySerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Entity/ProductSerializer.php';

        return $this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Entity\\ProductSerializer'] = new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\ProductSerializer(($this->services['product_visibility.repository'] ?? $this->getProductVisibility_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\PriceSerializer' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\PriceSerializer
     */
    protected function getPriceSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Field/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Field/FieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Field/PriceSerializer.php';

        return $this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Field\\PriceSerializer'] = new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\PriceSerializer(($this->services['currency.repository'] ?? $this->getCurrency_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\TranslationsSerializer' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\TranslationsSerializer
     */
    protected function getTranslationsSerializerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Field/AbstractFieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Field/FieldSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/Field/TranslationsSerializer.php';

        return $this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Field\\TranslationsSerializer'] = new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\TranslationsSerializer(($this->services['language.repository'] ?? $this->getLanguage_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\DataAbstractionLayer\SystemDefaultValidator' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\DataAbstractionLayer\SystemDefaultValidator
     */
    protected function getSystemDefaultValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/SystemDefaultValidator.php';

        return $this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\SystemDefaultValidator'] = new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\SystemDefaultValidator(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\Event\Subscriber\FileDeletedSubscriber' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Event\Subscriber\FileDeletedSubscriber
     */
    protected function getFileDeletedSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Event/Subscriber/FileDeletedSubscriber.php';

        return $this->privates['Shopware\\Core\\Content\\ImportExport\\Event\\Subscriber\\FileDeletedSubscriber'] = new \Shopware\Core\Content\ImportExport\Event\Subscriber\FileDeletedSubscriber(($this->services['message_bus'] ?? $this->getMessageBusService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\Processing\Pipe\PipeFactory' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Processing\Pipe\PipeFactory
     */
    protected function getPipeFactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Processing/Pipe/AbstractPipeFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Processing/Pipe/PipeFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/DataAbstractionLayer/Serializer/SerializerRegistry.php';

        return $this->privates['Shopware\\Core\\Content\\ImportExport\\Processing\\Pipe\\PipeFactory'] = new \Shopware\Core\Content\ImportExport\Processing\Pipe\PipeFactory(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\SerializerRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Entity\\MediaSerializer'] ?? $this->getMediaSerializerService());
            yield 1 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Entity\\ProductSerializer'] ?? $this->getProductSerializerService());
            yield 2 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Entity\\EntitySerializer'] ?? ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Entity\\EntitySerializer'] = new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\EntitySerializer()));
        }, 3), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Field\\ToOneSerializer'] ?? ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Field\\ToOneSerializer'] = new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\ToOneSerializer()));
            yield 1 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Field\\TranslationsSerializer'] ?? $this->getTranslationsSerializerService());
            yield 2 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Field\\PriceSerializer'] ?? $this->getPriceSerializerService());
            yield 3 => ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Field\\FieldSerializer'] ?? ($this->privates['Shopware\\Core\\Content\\ImportExport\\DataAbstractionLayer\\Serializer\\Field\\FieldSerializer'] = new \Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\FieldSerializer()));
        }, 4)));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\Processing\Writer\CsvFileWriterFactory' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Processing\Writer\CsvFileWriterFactory
     */
    protected function getCsvFileWriterFactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Processing/Writer/AbstractWriterFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Processing/Writer/CsvFileWriterFactory.php';

        return $this->privates['Shopware\\Core\\Content\\ImportExport\\Processing\\Writer\\CsvFileWriterFactory'] = new \Shopware\Core\Content\ImportExport\Processing\Writer\CsvFileWriterFactory(($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ImportExport\Service\ImportExportService' shared service.
     *
     * @return \Shopware\Core\Content\ImportExport\Service\ImportExportService
     */
    protected function getImportExportServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ImportExport/Service/ImportExportService.php';

        return $this->privates['Shopware\\Core\\Content\\ImportExport\\Service\\ImportExportService'] = new \Shopware\Core\Content\ImportExport\Service\ImportExportService(($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()), ($this->services['import_export_file.repository'] ?? $this->getImportExportFile_RepositoryService()), ($this->services['import_export_log.repository'] ?? $this->getImportExportLog_RepositoryService()), ($this->services['user.repository'] ?? $this->getUser_RepositoryService()), ($this->services['import_export_profile.repository'] ?? $this->getImportExportProfile_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\MailTemplate\Service\MailService' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Service\MailService
     */
    protected function getMailServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Service/MailService.php';

        return $this->privates['Shopware\\Core\\Content\\MailTemplate\\Service\\MailService'] = new \Shopware\Core\Content\MailTemplate\Service\MailService(($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Twig\\StringTemplateRenderer'] ?? $this->getStringTemplateRendererService()), ($this->services['Shopware\\Core\\Content\\MailTemplate\\Service\\MessageFactory'] ?? $this->getMessageFactoryService()), ($this->services['Shopware\\Core\\Content\\MailTemplate\\Service\\MailSender'] ?? $this->getMailSenderService()), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), ($this->services['Shopware\\Core\\System\\SalesChannel\\SalesChannelDefinition'] ?? $this->getSalesChannelDefinitionService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\UrlGeneratorInterface'] ?? $this->getUrlGeneratorInterfaceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\MailTemplate\Subscriber\MailSendSubscriber' shared service.
     *
     * @return \Shopware\Core\Content\MailTemplate\Subscriber\MailSendSubscriber
     */
    protected function getMailSendSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/MailTemplate/Subscriber/MailSendSubscriber.php';

        return $this->privates['Shopware\\Core\\Content\\MailTemplate\\Subscriber\\MailSendSubscriber'] = new \Shopware\Core\Content\MailTemplate\Subscriber\MailSendSubscriber(($this->privates['Shopware\\Core\\Content\\MailTemplate\\Service\\MailService'] ?? $this->getMailServiceService()), ($this->services['mail_template.repository'] ?? $this->getMailTemplate_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\Media\\MediaService'] ?? $this->getMediaServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand' shared service.
     *
     * @return \Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand
     */
    protected function getDeleteNotUsedMediaCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Commands/DeleteNotUsedMediaCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/DeleteNotUsedMediaService.php';

        $this->privates['Shopware\\Core\\Content\\Media\\Commands\\DeleteNotUsedMediaCommand'] = $instance = new \Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand(new \Shopware\Core\Content\Media\DeleteNotUsedMediaService(($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), ($this->services['media_default_folder.repository'] ?? $this->getMediaDefaultFolder_RepositoryService())));

        $instance->setName('media:delete-unused');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand' shared service.
     *
     * @return \Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand
     */
    protected function getGenerateMediaTypesCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Commands/GenerateMediaTypesCommand.php';

        $this->privates['Shopware\\Core\\Content\\Media\\Commands\\GenerateMediaTypesCommand'] = $instance = new \Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand(($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\TypeDetector'] ?? $this->getTypeDetectorService()), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()));

        $instance->setName('media:generate-media-types');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand' shared service.
     *
     * @return \Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand
     */
    protected function getGenerateThumbnailsCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Commands/GenerateThumbnailsCommand.php';

        $this->privates['Shopware\\Core\\Content\\Media\\Commands\\GenerateThumbnailsCommand'] = $instance = new \Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand(($this->privates['Shopware\\Core\\Content\\Media\\Thumbnail\\ThumbnailService'] ?? $this->getThumbnailServiceService()), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), ($this->services['media_folder.repository'] ?? $this->getMediaFolder_RepositoryService()), ($this->services['message_bus'] ?? $this->getMessageBusService()));

        $instance->setName('media:generate-thumbnails');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\DataAbstractionLayer\Indexing\MediaFolderConfigIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Media\DataAbstractionLayer\Indexing\MediaFolderConfigIndexer
     */
    protected function getMediaFolderConfigIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/DataAbstractionLayer/Indexing/MediaFolderConfigIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaFolderConfigIndexer'] = new \Shopware\Core\Content\Media\DataAbstractionLayer\Indexing\MediaFolderConfigIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['media_folder.repository'] ?? $this->getMediaFolder_RepositoryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\DataAbstractionLayer\Indexing\MediaFolderSizeIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Media\DataAbstractionLayer\Indexing\MediaFolderSizeIndexer
     */
    protected function getMediaFolderSizeIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/DataAbstractionLayer/Indexing/MediaFolderSizeIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaFolderSizeIndexer'] = new \Shopware\Core\Content\Media\DataAbstractionLayer\Indexing\MediaFolderSizeIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['media_folder_configuration.repository'] ?? $this->getMediaFolderConfiguration_RepositoryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\DataAbstractionLayer\Indexing\MediaThumbnailIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Media\DataAbstractionLayer\Indexing\MediaThumbnailIndexer
     */
    protected function getMediaThumbnailIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/DataAbstractionLayer/Indexing/MediaThumbnailIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaThumbnailIndexer'] = new \Shopware\Core\Content\Media\DataAbstractionLayer\Indexing\MediaThumbnailIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['Shopware\\Core\\Content\\Media\\MediaDefinition'] ?? $this->getMediaDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\File\FileNameProvider' shared service.
     *
     * @return \Shopware\Core\Content\Media\File\WindowsStyleFileNameProvider
     */
    protected function getFileNameProviderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/File/FileNameProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/File/WindowsStyleFileNameProvider.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\File\\FileNameProvider'] = new \Shopware\Core\Content\Media\File\WindowsStyleFileNameProvider(($this->services['media.repository'] ?? $this->getMedia_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\MediaService' shared service.
     *
     * @return \Shopware\Core\Content\Media\MediaService
     */
    protected function getMediaServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/MediaService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/File/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/File/FileFetcher.php';

        $a = ($this->services['media.repository'] ?? $this->getMedia_RepositoryService());

        return $this->privates['Shopware\\Core\\Content\\Media\\MediaService'] = new \Shopware\Core\Content\Media\MediaService($a, ($this->services['media_folder.repository'] ?? $this->getMediaFolder_RepositoryService()), new \Shopware\Core\Content\Media\File\FileLoader(($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService()), ($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()), ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\UrlGeneratorInterface'] ?? $this->getUrlGeneratorInterfaceService()), $a), ($this->services['Shopware\\Core\\Content\\Media\\File\\FileSaver'] ?? $this->getFileSaverService()), new \Shopware\Core\Content\Media\File\FileFetcher());
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Message\GenerateThumbnailsHandler' shared service.
     *
     * @return \Shopware\Core\Content\Media\Message\GenerateThumbnailsHandler
     */
    protected function getGenerateThumbnailsHandlerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Message/GenerateThumbnailsHandler.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\Message\\GenerateThumbnailsHandler'] = new \Shopware\Core\Content\Media\Message\GenerateThumbnailsHandler(($this->privates['Shopware\\Core\\Content\\Media\\Thumbnail\\ThumbnailService'] ?? $this->getThumbnailServiceService()), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Pathname\PathnameStrategy\FilenamePathnameStrategy' shared service.
     *
     * @return \Shopware\Core\Content\Media\Pathname\PathnameStrategy\FilenamePathnameStrategy
     */
    protected function getFilenamePathnameStrategyService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/AbstractPathNameStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/FilenamePathnameStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/PlainPathnameStrategy.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\FilenamePathnameStrategy'] = new \Shopware\Core\Content\Media\Pathname\PathnameStrategy\FilenamePathnameStrategy(($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PlainPathnameStrategy'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PlainPathnameStrategy'] = new \Shopware\Core\Content\Media\Pathname\PathnameStrategy\PlainPathnameStrategy())));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Pathname\PathnameStrategy\IdPathnameStrategy' shared service.
     *
     * @return \Shopware\Core\Content\Media\Pathname\PathnameStrategy\IdPathnameStrategy
     */
    protected function getIdPathnameStrategyService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/AbstractPathNameStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/IdPathnameStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/PlainPathnameStrategy.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\IdPathnameStrategy'] = new \Shopware\Core\Content\Media\Pathname\PathnameStrategy\IdPathnameStrategy(($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PlainPathnameStrategy'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PlainPathnameStrategy'] = new \Shopware\Core\Content\Media\Pathname\PathnameStrategy\PlainPathnameStrategy())));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Pathname\PathnameStrategy\PhysicalFilenamePathnameStrategy' shared service.
     *
     * @return \Shopware\Core\Content\Media\Pathname\PathnameStrategy\PhysicalFilenamePathnameStrategy
     */
    protected function getPhysicalFilenamePathnameStrategyService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/AbstractPathNameStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/PhysicalFilenamePathnameStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Pathname/PathnameStrategy/PlainPathnameStrategy.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PhysicalFilenamePathnameStrategy'] = new \Shopware\Core\Content\Media\Pathname\PathnameStrategy\PhysicalFilenamePathnameStrategy(($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PlainPathnameStrategy'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PlainPathnameStrategy'] = new \Shopware\Core\Content\Media\Pathname\PathnameStrategy\PlainPathnameStrategy())));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Pathname\UrlGeneratorInterface' shared service.
     *
     * @return \Shopware\Core\Content\Media\Pathname\UrlGenerator
     */
    protected function getUrlGeneratorInterfaceService()
    {
        return $this->privates['Shopware\\Core\\Content\\Media\\Pathname\\UrlGeneratorInterface'] = new \Shopware\Core\Content\Media\Pathname\UrlGenerator((new \Shopware\Core\Content\Media\Pathname\PathnameStrategy\StrategyFactory(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\FilenamePathnameStrategy'] ?? $this->getFilenamePathnameStrategyService());
            yield 1 => ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PhysicalFilenamePathnameStrategy'] ?? $this->getPhysicalFilenamePathnameStrategyService());
            yield 2 => ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PlainPathnameStrategy'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\PlainPathnameStrategy'] = new \Shopware\Core\Content\Media\Pathname\PathnameStrategy\PlainPathnameStrategy()));
            yield 3 => ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\PathnameStrategy\\IdPathnameStrategy'] ?? $this->getIdPathnameStrategyService());
        }, 4)))->factory($this->getEnv('default:default_cdn_strategy:SHOPWARE_CDN_STRATEGY_DEFAULT')), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), NULL);
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Subscriber\MediaLoadedSubscriber' shared service.
     *
     * @return \Shopware\Core\Content\Media\Subscriber\MediaLoadedSubscriber
     */
    protected function getMediaLoadedSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Subscriber/MediaLoadedSubscriber.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\Subscriber\\MediaLoadedSubscriber'] = new \Shopware\Core\Content\Media\Subscriber\MediaLoadedSubscriber(($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\UrlGeneratorInterface'] ?? $this->getUrlGeneratorInterfaceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\Thumbnail\ThumbnailService' shared service.
     *
     * @return \Shopware\Core\Content\Media\Thumbnail\ThumbnailService
     */
    protected function getThumbnailServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/Thumbnail/ThumbnailService.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\Thumbnail\\ThumbnailService'] = new \Shopware\Core\Content\Media\Thumbnail\ThumbnailService(($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), ($this->services['media_thumbnail.repository'] ?? $this->getMediaThumbnail_RepositoryService()), ($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService()), ($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()), ($this->privates['Shopware\\Core\\Content\\Media\\Pathname\\UrlGeneratorInterface'] ?? $this->getUrlGeneratorInterfaceService()), ($this->services['media_folder.repository'] ?? $this->getMediaFolder_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Media\TypeDetector\TypeDetector' shared service.
     *
     * @return \Shopware\Core\Content\Media\TypeDetector\TypeDetector
     */
    protected function getTypeDetectorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/TypeDetector/TypeDetectorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Media/TypeDetector/TypeDetector.php';

        return $this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\TypeDetector'] = new \Shopware\Core\Content\Media\TypeDetector\TypeDetector(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\AudioTypeDetector'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\AudioTypeDetector'] = new \Shopware\Core\Content\Media\TypeDetector\AudioTypeDetector()));
            yield 1 => ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\DocumentTypeDetector'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\DocumentTypeDetector'] = new \Shopware\Core\Content\Media\TypeDetector\DocumentTypeDetector()));
            yield 2 => ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\ImageTypeDetector'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\ImageTypeDetector'] = new \Shopware\Core\Content\Media\TypeDetector\ImageTypeDetector()));
            yield 3 => ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\VideoTypeDetector'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\VideoTypeDetector'] = new \Shopware\Core\Content\Media\TypeDetector\VideoTypeDetector()));
            yield 4 => ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\DefaultTypeDetector'] ?? ($this->privates['Shopware\\Core\\Content\\Media\\TypeDetector\\DefaultTypeDetector'] = new \Shopware\Core\Content\Media\TypeDetector\DefaultTypeDetector()));
        }, 5));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Newsletter\NewsletterSubscriptionService' shared service.
     *
     * @return \Shopware\Core\Content\Newsletter\NewsletterSubscriptionService
     */
    protected function getNewsletterSubscriptionServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Newsletter/NewsletterSubscriptionServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Newsletter/NewsletterSubscriptionService.php';

        return $this->privates['Shopware\\Core\\Content\\Newsletter\\NewsletterSubscriptionService'] = new \Shopware\Core\Content\Newsletter\NewsletterSubscriptionService(($this->services['newsletter_recipient.repository'] ?? $this->getNewsletterRecipient_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->services['sales_channel_domain.repository'] ?? $this->getSalesChannelDomain_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ProductExport\EventListener\ProductExportEventListener' shared service.
     *
     * @return \Shopware\Core\Content\ProductExport\EventListener\ProductExportEventListener
     */
    protected function getProductExportEventListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/EventListener/ProductExportEventListener.php';

        return $this->privates['Shopware\\Core\\Content\\ProductExport\\EventListener\\ProductExportEventListener'] = new \Shopware\Core\Content\ProductExport\EventListener\ProductExportEventListener(($this->services['product_export.repository'] ?? $this->getProductExport_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportFileHandler'] ?? $this->getProductExportFileHandlerService()), ($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ProductExport\Service\ProductExportFileHandler' shared service.
     *
     * @return \Shopware\Core\Content\ProductExport\Service\ProductExportFileHandler
     */
    protected function getProductExportFileHandlerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportFileHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportFileHandler.php';

        return $this->privates['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportFileHandler'] = new \Shopware\Core\Content\ProductExport\Service\ProductExportFileHandler(($this->privates['shopware.filesystem.private'] ?? $this->getShopware_Filesystem_PrivateService()), 'export');
    }

    /*
     * Gets the private 'Shopware\Core\Content\ProductExport\Service\ProductExportRenderer' shared service.
     *
     * @return \Shopware\Core\Content\ProductExport\Service\ProductExportRenderer
     */
    protected function getProductExportRendererService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportRendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportRenderer.php';

        return $this->privates['Shopware\\Core\\Content\\ProductExport\\Service\\ProductExportRenderer'] = new \Shopware\Core\Content\ProductExport\Service\ProductExportRenderer(($this->privates['Shopware\\Core\\Framework\\Adapter\\Twig\\StringTemplateRenderer'] ?? $this->getStringTemplateRendererService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Shopware\\Core\\Content\\Seo\\SeoUrlPlaceholderHandlerInterface'] ?? $this->getSeoUrlPlaceholderHandlerInterfaceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\ProductStream\DataAbstractionLayer\Indexing\ProductStreamIndexer' shared service.
     *
     * @return \Shopware\Core\Content\ProductStream\DataAbstractionLayer\Indexing\ProductStreamIndexer
     */
    protected function getProductStreamIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductStream/DataAbstractionLayer/Indexing/ProductStreamIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\ProductStream\\DataAbstractionLayer\\Indexing\\ProductStreamIndexer'] = new \Shopware\Core\Content\ProductStream\DataAbstractionLayer\Indexing\ProductStreamIndexer(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['product_stream.repository'] ?? $this->getProductStream_RepositoryService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['serializer'] ?? $this->getSerializerService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\Cart\ProductCartProcessor' shared service.
     *
     * @return \Shopware\Core\Content\Product\Cart\ProductCartProcessor
     */
    protected function getProductCartProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Cart/CartDataCollectorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Cart/ProductCartProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Cart/ProductGatewayInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Cart/ProductGateway.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Price/ProductPriceDefinitionBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Price/ProductPriceDefinitionBuilder.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\Cart\\ProductCartProcessor'] = new \Shopware\Core\Content\Product\Cart\ProductCartProcessor(new \Shopware\Core\Content\Product\Cart\ProductGateway(($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService())), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\QuantityPriceCalculator'] ?? $this->getQuantityPriceCalculatorService()), ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Price\\ProductPriceDefinitionBuilderInterface'] ?? ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Price\\ProductPriceDefinitionBuilderInterface'] = new \Shopware\Core\Content\Product\SalesChannel\Price\ProductPriceDefinitionBuilder())));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\Cart\ProductLineItemCommandValidator' shared service.
     *
     * @return \Shopware\Core\Content\Product\Cart\ProductLineItemCommandValidator
     */
    protected function getProductLineItemCommandValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Cart/ProductLineItemCommandValidator.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\Cart\\ProductLineItemCommandValidator'] = new \Shopware\Core\Content\Product\Cart\ProductLineItemCommandValidator(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\Cms\ProductListingCmsElementResolver' shared service.
     *
     * @return \Shopware\Core\Content\Product\Cms\ProductListingCmsElementResolver
     */
    protected function getProductListingCmsElementResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/DataResolver/Element/CmsElementResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Cms/DataResolver/Element/AbstractCmsElementResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/Cms/ProductListingCmsElementResolver.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\Cms\\ProductListingCmsElementResolver'] = new \Shopware\Core\Content\Product\Cms\ProductListingCmsElementResolver(($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingGateway'] ?? $this->getProductListingGatewayService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductCategoryTreeIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductCategoryTreeIndexer
     */
    protected function getProductCategoryTreeIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/DataAbstractionLayer/Indexing/ProductCategoryTreeIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductCategoryTreeIndexer'] = new \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductCategoryTreeIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\InheritanceIndexer'] ?? $this->getInheritanceIndexerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductListingPriceIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductListingPriceIndexer
     */
    protected function getProductListingPriceIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/DataAbstractionLayer/Indexing/ProductListingPriceIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductListingPriceIndexer'] = new \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductListingPriceIndexer(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\PriceRounding'] = new \Shopware\Core\Checkout\Cart\Price\PriceRounding())));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductRatingAverageIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductRatingAverageIndexer
     */
    protected function getProductRatingAverageIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/DataAbstractionLayer/Indexing/ProductRatingAverageIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductRatingAverageIndexer'] = new \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductRatingAverageIndexer(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductStockIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductStockIndexer
     */
    protected function getProductStockIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/DataAbstractionLayer/Indexing/ProductStockIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductStockIndexer'] = new \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\ProductStockIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\VariantListingIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\VariantListingIndexer
     */
    protected function getVariantListingIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/DataAbstractionLayer/Indexing/VariantListingIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\VariantListingIndexer'] = new \Shopware\Core\Content\Product\DataAbstractionLayer\Indexing\VariantListingIndexer(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber' shared service.
     *
     * @return \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber
     */
    protected function getProductListingFeaturesSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Listing/ProductListingFeaturesSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Listing/ProductListingSortingRegistry.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingFeaturesSubscriber'] = new \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['property_group_option.repository'] ?? $this->getPropertyGroupOption_RepositoryService()), new \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingSortingRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['product_listing.sorting.name_ascending'] ?? ($this->privates['product_listing.sorting.name_ascending'] = new \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingSorting('name-asc', 'filter.sortByNameAscending', ['product.name' => 'asc'])));
            yield 1 => ($this->privates['product_listing.sorting.name_descending'] ?? ($this->privates['product_listing.sorting.name_descending'] = new \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingSorting('name-desc', 'filter.sortByNameDescending', ['product.name' => 'desc'])));
            yield 2 => ($this->privates['product_listing.sorting.price_ascending'] ?? ($this->privates['product_listing.sorting.price_ascending'] = new \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingSorting('price-asc', 'filter.sortByPriceAscending', ['product.listingPrices' => 'asc'])));
            yield 3 => ($this->privates['product_listing.sorting.price_descending'] ?? ($this->privates['product_listing.sorting.price_descending'] = new \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingSorting('price-desc', 'filter.sortByPriceDescending', ['product.listingPrices' => 'desc'])));
            yield 4 => ($this->privates['product_listing.sorting.score'] ?? ($this->privates['product_listing.sorting.score'] = new \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingSorting('score', 'filter.sortByScore', ['_score' => 'desc'])));
        }, 5)));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingGateway' shared service.
     *
     * @return \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingGateway
     */
    protected function getProductListingGatewayService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Listing/ProductListingGatewayInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Listing/ProductListingGateway.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Listing\\ProductListingGateway'] = new \Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingGateway(($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Product\SalesChannel\SalesChannelProductSubscriber' shared service.
     *
     * @return \Shopware\Core\Content\Product\SalesChannel\SalesChannelProductSubscriber
     */
    protected function getSalesChannelProductSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/SalesChannelProductSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Price/ProductPriceDefinitionBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SalesChannel/Price/ProductPriceDefinitionBuilder.php';

        return $this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\SalesChannelProductSubscriber'] = new \Shopware\Core\Content\Product\SalesChannel\SalesChannelProductSubscriber(($this->privates['Shopware\\Core\\Checkout\\Cart\\Price\\QuantityPriceCalculator'] ?? $this->getQuantityPriceCalculatorService()), ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Price\\ProductPriceDefinitionBuilderInterface'] ?? ($this->privates['Shopware\\Core\\Content\\Product\\SalesChannel\\Price\\ProductPriceDefinitionBuilderInterface'] = new \Shopware\Core\Content\Product\SalesChannel\Price\ProductPriceDefinitionBuilder())), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Rule\DataAbstractionLayer\Indexing\RulePayloadIndexer' shared service.
     *
     * @return \Shopware\Core\Content\Rule\DataAbstractionLayer\Indexing\RulePayloadIndexer
     */
    protected function getRulePayloadIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Rule/DataAbstractionLayer/Indexing/RulePayloadIndexer.php';

        return $this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\Indexing\\RulePayloadIndexer'] = new \Shopware\Core\Content\Rule\DataAbstractionLayer\Indexing\RulePayloadIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Framework\\Rule\\Collector\\RuleConditionRegistry'] ?? $this->getRuleConditionRegistryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Content\\Rule\\RuleDefinition'] ?? $this->getRuleDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadSubscriber' shared service.
     *
     * @return \Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadSubscriber
     */
    protected function getRulePayloadSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Rule/DataAbstractionLayer/RulePayloadSubscriber.php';

        return $this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\RulePayloadSubscriber'] = new \Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadSubscriber(($this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\Indexing\\RulePayloadIndexer'] ?? $this->getRulePayloadIndexerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Rule\RuleValidator' shared service.
     *
     * @return \Shopware\Core\Content\Rule\RuleValidator
     */
    protected function getRuleValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Rule/RuleValidator.php';

        return $this->privates['Shopware\\Core\\Content\\Rule\\RuleValidator'] = new \Shopware\Core\Content\Rule\RuleValidator(($this->services['validator'] ?? $this->getValidatorService()), ($this->privates['Shopware\\Core\\Framework\\Rule\\Collector\\RuleConditionRegistry'] ?? $this->getRuleConditionRegistryService()), ($this->services['rule_condition.repository'] ?? $this->getRuleCondition_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Seo\SeoUrlGenerator' shared service.
     *
     * @return \Shopware\Core\Content\Seo\SeoUrlGenerator
     */
    protected function getSeoUrlGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrlGenerator.php';

        return $this->privates['Shopware\\Core\\Content\\Seo\\SeoUrlGenerator'] = new \Shopware\Core\Content\Seo\SeoUrlGenerator(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->privates['slugify'] ?? $this->getSlugifyService()), ($this->privates['router.default'] ?? $this->getRouter_DefaultService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Seo\SeoUrlPersister' shared service.
     *
     * @return \Shopware\Core\Content\Seo\SeoUrlPersister
     */
    protected function getSeoUrlPersisterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrlPersister.php';

        return $this->privates['Shopware\\Core\\Content\\Seo\\SeoUrlPersister'] = new \Shopware\Core\Content\Seo\SeoUrlPersister(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['seo_url.repository'] ?? $this->getSeoUrl_RepositoryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->privates['slugify'] ?? $this->getSlugifyService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Seo\SeoUrlRoute\SeoUrlRouteRegistry' shared service.
     *
     * @return \Shopware\Core\Content\Seo\SeoUrlRoute\SeoUrlRouteRegistry
     */
    protected function getSeoUrlRouteRegistryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrlRoute/SeoUrlRouteRegistry.php';

        return $this->privates['Shopware\\Core\\Content\\Seo\\SeoUrlRoute\\SeoUrlRouteRegistry'] = new \Shopware\Core\Content\Seo\SeoUrlRoute\SeoUrlRouteRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Storefront\\Framework\\Seo\\SeoUrlRoute\\ProductPageSeoUrlRoute'] ?? $this->getProductPageSeoUrlRouteService());
            yield 1 => ($this->privates['Shopware\\Storefront\\Framework\\Seo\\SeoUrlRoute\\NavigationPageSeoUrlRoute'] ?? $this->getNavigationPageSeoUrlRouteService());
        }, 2));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Sitemap\ConfigHandler\File' shared service.
     *
     * @return \Shopware\Core\Content\Sitemap\ConfigHandler\File
     */
    protected function getFileService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/ConfigHandler/ConfigHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/ConfigHandler/File.php';

        return $this->privates['Shopware\\Core\\Content\\Sitemap\\ConfigHandler\\File'] = new \Shopware\Core\Content\Sitemap\ConfigHandler\File($this->parameters['shopware.sitemap']);
    }

    /*
     * Gets the private 'Shopware\Core\Content\Sitemap\Provider\CategoryUrlProvider' shared service.
     *
     * @return \Shopware\Core\Content\Sitemap\Provider\CategoryUrlProvider
     */
    protected function getCategoryUrlProviderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Provider/UrlProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Provider/CategoryUrlProvider.php';

        return $this->privates['Shopware\\Core\\Content\\Sitemap\\Provider\\CategoryUrlProvider'] = new \Shopware\Core\Content\Sitemap\Provider\CategoryUrlProvider(($this->services['sales_channel.category.repository'] ?? $this->getSalesChannel_Category_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\Sitemap\\Service\\ConfigHandler'] ?? $this->getConfigHandlerService()), ($this->services['Shopware\\Core\\Content\\Seo\\SeoUrlPlaceholderHandlerInterface'] ?? $this->getSeoUrlPlaceholderHandlerInterfaceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Sitemap\Provider\CustomUrlProvider' shared service.
     *
     * @return \Shopware\Core\Content\Sitemap\Provider\CustomUrlProvider
     */
    protected function getCustomUrlProviderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Provider/UrlProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Provider/CustomUrlProvider.php';

        return $this->privates['Shopware\\Core\\Content\\Sitemap\\Provider\\CustomUrlProvider'] = new \Shopware\Core\Content\Sitemap\Provider\CustomUrlProvider(($this->privates['Shopware\\Core\\Content\\Sitemap\\Service\\ConfigHandler'] ?? $this->getConfigHandlerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Sitemap\Provider\ProductUrlProvider' shared service.
     *
     * @return \Shopware\Core\Content\Sitemap\Provider\ProductUrlProvider
     */
    protected function getProductUrlProviderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Provider/UrlProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Provider/ProductUrlProvider.php';

        return $this->privates['Shopware\\Core\\Content\\Sitemap\\Provider\\ProductUrlProvider'] = new \Shopware\Core\Content\Sitemap\Provider\ProductUrlProvider(($this->services['sales_channel.product.repository'] ?? $this->getSalesChannel_Product_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\Sitemap\\Service\\ConfigHandler'] ?? $this->getConfigHandlerService()), ($this->services['Shopware\\Core\\Content\\Seo\\SeoUrlPlaceholderHandlerInterface'] ?? $this->getSeoUrlPlaceholderHandlerInterfaceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTaskHandler' shared service.
     *
     * @return \Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTaskHandler
     */
    protected function getSitemapGenerateTaskHandlerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/ScheduledTaskHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/ScheduledTask/SitemapGenerateTaskHandler.php';

        return $this->privates['Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapGenerateTaskHandler'] = new \Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTaskHandler(($this->services['scheduled_task.repository'] ?? $this->getScheduledTask_RepositoryService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] ?? $this->getSalesChannelContextFactoryService()), ($this->privates['Shopware\\Core\\Content\\Sitemap\\Service\\SitemapExporter'] ?? $this->getSitemapExporterService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->services['message_bus'] ?? $this->getMessageBusService()));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Sitemap\Service\ConfigHandler' shared service.
     *
     * @return \Shopware\Core\Content\Sitemap\Service\ConfigHandler
     */
    protected function getConfigHandlerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Service/ConfigHandler.php';

        return $this->privates['Shopware\\Core\\Content\\Sitemap\\Service\\ConfigHandler'] = new \Shopware\Core\Content\Sitemap\Service\ConfigHandler(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\Sitemap\\ConfigHandler\\File'] ?? $this->getFileService());
        }, 1));
    }

    /*
     * Gets the private 'Shopware\Core\Content\Sitemap\Service\SitemapExporter' shared service.
     *
     * @return \Shopware\Core\Content\Sitemap\Service\SitemapExporter
     */
    protected function getSitemapExporterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Service/SitemapExporterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Service/SitemapExporter.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Service/SitemapWriterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Sitemap/Service/SitemapWriter.php';

        return $this->privates['Shopware\\Core\\Content\\Sitemap\\Service\\SitemapExporter'] = new \Shopware\Core\Content\Sitemap\Service\SitemapExporter(new \Shopware\Core\Content\Sitemap\Service\SitemapWriter(($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService())), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Content\\Sitemap\\Provider\\CategoryUrlProvider'] ?? $this->getCategoryUrlProviderService());
            yield 1 => ($this->privates['Shopware\\Core\\Content\\Sitemap\\Provider\\CustomUrlProvider'] ?? $this->getCustomUrlProviderService());
            yield 2 => ($this->privates['Shopware\\Core\\Content\\Sitemap\\Provider\\ProductUrlProvider'] ?? $this->getProductUrlProviderService());
        }, 3), ($this->services['cache.system'] ?? $this->getCache_SystemService()), 100, ($this->services['Shopware\\Core\\Content\\Seo\\SeoUrlPlaceholderHandlerInterface'] ?? $this->getSeoUrlPlaceholderHandlerInterfaceService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Adapter\Cache\CacheClearer' shared service.
     *
     * @return \Shopware\Core\Framework\Adapter\Cache\CacheClearer
     */
    protected function getCacheClearer2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Cache/CacheClearer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/filesystem/Filesystem.php';

        return $this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] = new \Shopware\Core\Framework\Adapter\Cache\CacheClearer([0 => ($this->privates['cache.object'] ?? $this->getCache_ObjectService()), 1 => ($this->privates['cache.http'] ?? $this->getCache_HttpService())], ($this->services['cache_clearer'] ?? $this->getCacheClearerService()), ($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), $this->targetDir.'', 'prod');
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory' shared service.
     *
     * @return \Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory
     */
    protected function getFilesystemFactoryService()
    {
        return $this->privates['Shopware\\Core\\Framework\\Adapter\\Filesystem\\FilesystemFactory'] = new \Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\Adapter\\Filesystem\\FilesystemFactory.local'] ?? ($this->privates['Shopware\\Core\\Framework\\Adapter\\Filesystem\\FilesystemFactory.local'] = new \Shopware\Core\Framework\Adapter\Filesystem\Adapter\LocalFactory()));
            yield 1 => ($this->privates['Shopware\\Core\\Framework\\Adapter\\Filesystem\\FilesystemFactory.amazon_s3'] ?? ($this->privates['Shopware\\Core\\Framework\\Adapter\\Filesystem\\FilesystemFactory.amazon_s3'] = new \Shopware\Core\Framework\Adapter\Filesystem\Adapter\AwsS3v3Factory()));
            yield 2 => ($this->privates['Shopware\\Core\\Framework\\Adapter\\Filesystem\\FilesystemFactory.google_storage'] ?? ($this->privates['Shopware\\Core\\Framework\\Adapter\\Filesystem\\FilesystemFactory.google_storage'] = new \Shopware\Core\Framework\Adapter\Filesystem\Adapter\GoogleStorageFactory()));
        }, 3));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Adapter\Translation\TranslatorCacheInvalidate' shared service.
     *
     * @return \Shopware\Core\Framework\Adapter\Translation\TranslatorCacheInvalidate
     */
    protected function getTranslatorCacheInvalidateService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Translation/TranslatorCacheInvalidate.php';

        return $this->privates['Shopware\\Core\\Framework\\Adapter\\Translation\\TranslatorCacheInvalidate'] = new \Shopware\Core\Framework\Adapter\Translation\TranslatorCacheInvalidate(($this->privates['cache.object'] ?? $this->getCache_ObjectService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer' shared service.
     *
     * @return \Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer
     */
    protected function getStringTemplateRendererService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Adapter/Twig/StringTemplateRenderer.php';

        return $this->privates['Shopware\\Core\\Framework\\Adapter\\Twig\\StringTemplateRenderer'] = new \Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer(($this->services['twig'] ?? $this->getTwigService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Api\ApiDefinition\DefinitionService' shared service.
     *
     * @return \Shopware\Core\Framework\Api\ApiDefinition\DefinitionService
     */
    protected function getDefinitionServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/ApiDefinition/DefinitionService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/ApiDefinition/ApiDefinitionGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/ApiDefinition/Generator/OpenApi3Generator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/ApiDefinition/Generator/OpenApi/OpenApiSchemaBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/ApiDefinition/Generator/OpenApi/OpenApiPathBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/ApiDefinition/Generator/OpenApi/OpenApiDefinitionSchemaBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/ApiDefinition/Generator/OpenApi/OpenApiLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/ApiDefinition/Generator/EntitySchemaGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Api\\ApiDefinition\\DefinitionService'] = new \Shopware\Core\Framework\Api\ApiDefinition\DefinitionService(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelDefinitionInstanceRegistry'] ?? $this->getSalesChannelDefinitionInstanceRegistryService()), new \Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi3Generator(new \Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiSchemaBuilder(), new \Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiPathBuilder(), new \Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiDefinitionSchemaBuilder(($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService())), new \Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiLoader(\dirname(__DIR__, 4))), new \Shopware\Core\Framework\Api\ApiDefinition\Generator\EntitySchemaGenerator());
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Api\ApiVersion\ApiVersionSubscriber' shared service.
     *
     * @return \Shopware\Core\Framework\Api\ApiVersion\ApiVersionSubscriber
     */
    protected function getApiVersionSubscriberService()
    {
        return $this->privates['Shopware\\Core\\Framework\\Api\\ApiVersion\\ApiVersionSubscriber'] = new \Shopware\Core\Framework\Api\ApiVersion\ApiVersionSubscriber($this->parameters['kernel.supported_api_versions']);
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Api\Command\DumpSchemaCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Command\DumpSchemaCommand
     */
    protected function getDumpSchemaCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Command/DumpSchemaCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Api\\Command\\DumpSchemaCommand'] = $instance = new \Shopware\Core\Framework\Api\Command\DumpSchemaCommand(($this->privates['Shopware\\Core\\Framework\\Api\\ApiDefinition\\DefinitionService'] ?? $this->getDefinitionServiceService()));

        $instance->setName('framework:schema');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Api\Converter\ApiVersionConverter' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Converter\ApiVersionConverter
     */
    protected function getApiVersionConverterService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Converter/ApiVersionConverter.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Converter/ConverterRegistry.php';

        return $this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] = new \Shopware\Core\Framework\Api\Converter\ApiVersionConverter(new \Shopware\Core\Framework\Api\Converter\ConverterRegistry(new RewindableGenerator(function () {
            return new \EmptyIterator();
        }, 0)));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Api\EventListener\Authentication\ApiAuthenticationListener' shared service.
     *
     * @return \Shopware\Core\Framework\Api\EventListener\Authentication\ApiAuthenticationListener
     */
    protected function getApiAuthenticationListenerService()
    {
        $a = ($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\AccessTokenRepository'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\AccessTokenRepository'] = new \Shopware\Core\Framework\Api\OAuth\AccessTokenRepository()));
        $b = ($this->privates['shopware.public_key'] ?? ($this->privates['shopware.public_key'] = new \League\OAuth2\Server\CryptKey((\dirname(__DIR__, 4).'/config/jwt/public.pem'))));
        $c = new \League\OAuth2\Server\AuthorizationValidators\BearerTokenValidator($a);
        $c->setPublicKey($b);

        return $this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\Authentication\\ApiAuthenticationListener'] = new \Shopware\Core\Framework\Api\EventListener\Authentication\ApiAuthenticationListener(new \League\OAuth2\Server\ResourceServer($a, $b, $c), ($this->privates['shopware.api.authorization_server'] ?? $this->getShopware_Api_AuthorizationServerService()), new \Shopware\Core\Framework\Api\OAuth\UserRepository(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())), ($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\RefreshTokenRepository'] ?? $this->getRefreshTokenRepositoryService()), ($this->privates['Symfony\\Bridge\\PsrHttpMessage\\Factory\\PsrHttpFactory'] ?? $this->getPsrHttpFactoryService()), ($this->privates['Shopware\\Core\\Framework\\Routing\\RouteScopeRegistry'] ?? $this->getRouteScopeRegistryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Api\EventListener\Authentication\SalesChannelAuthenticationListener' shared service.
     *
     * @return \Shopware\Core\Framework\Api\EventListener\Authentication\SalesChannelAuthenticationListener
     */
    protected function getSalesChannelAuthenticationListenerService()
    {
        return $this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\Authentication\\SalesChannelAuthenticationListener'] = new \Shopware\Core\Framework\Api\EventListener\Authentication\SalesChannelAuthenticationListener(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\Routing\\RouteScopeRegistry'] ?? $this->getRouteScopeRegistryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Api\EventListener\Authentication\UserCredentialsChangedSubscriber' shared service.
     *
     * @return \Shopware\Core\Framework\Api\EventListener\Authentication\UserCredentialsChangedSubscriber
     */
    protected function getUserCredentialsChangedSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/EventListener/Authentication/UserCredentialsChangedSubscriber.php';

        return $this->privates['Shopware\\Core\\Framework\\Api\\EventListener\\Authentication\\UserCredentialsChangedSubscriber'] = new \Shopware\Core\Framework\Api\EventListener\Authentication\UserCredentialsChangedSubscriber(($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\RefreshTokenRepository'] ?? $this->getRefreshTokenRepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Api\OAuth\RefreshTokenRepository' shared service.
     *
     * @return \Shopware\Core\Framework\Api\OAuth\RefreshTokenRepository
     */
    protected function getRefreshTokenRepositoryService()
    {
        return $this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\RefreshTokenRepository'] = new \Shopware\Core\Framework\Api\OAuth\RefreshTokenRepository(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver' shared service.
     *
     * @return \Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver
     */
    protected function getResponseFactoryInterfaceValueResolverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Response/ResponseFactoryInterfaceValueResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Response/ResponseFactoryRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Response/ResponseFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Response/Type/JsonFactoryBase.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Response/Type/Api/JsonApiType.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Serializer/JsonApiEncoder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Response/Type/SalesChannel/JsonApiType.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Response/Type/Api/JsonType.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Serializer/JsonEntityEncoder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Api/Response/Type/SalesChannel/JsonType.php';

        $a = ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService());

        $b = new \Shopware\Core\Framework\Api\Serializer\JsonApiEncoder($a);
        $c = new \Shopware\Core\Framework\Api\Serializer\JsonEntityEncoder(($this->services['serializer'] ?? $this->getSerializerService()), $a);

        return $this->privates['Shopware\\Core\\Framework\\Api\\Response\\ResponseFactoryInterfaceValueResolver'] = new \Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver(new \Shopware\Core\Framework\Api\Response\ResponseFactoryRegistry(new \Shopware\Core\Framework\Api\Response\Type\Api\JsonApiType($b), new \Shopware\Core\Framework\Api\Response\Type\SalesChannel\JsonApiType($b), new \Shopware\Core\Framework\Api\Response\Type\Api\JsonType($c), new \Shopware\Core\Framework\Api\Response\Type\SalesChannel\JsonType($c)));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Cache\CachedEntityAggregator' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Cache\CachedEntityAggregator
     */
    protected function getCachedEntityAggregatorService()
    {
        $a = ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService());

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityAggregator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\CachedEntityAggregator(($this->privates['cache.object'] ?? $this->getCache_ObjectService()), new \Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator(($this->services['Shopware\\Elasticsearch\\Framework\\ElasticsearchHelper'] ?? $this->getElasticsearchHelperService()), ($this->services['Elasticsearch\\Client'] ?? $this->getClientService()), new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityAggregator(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Parser\\SqlQueryParser'] ?? $this->getSqlQueryParserService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] ?? $this->getEntityDefinitionQueryHelperService()), $a, ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\SearchTermInterpreter'] ?? $this->getSearchTermInterpreterService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\EntityScoreQueryBuilder'] ?? ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\EntityScoreQueryBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Search\Term\EntityScoreQueryBuilder()))), $a), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Cache\CachedEntityReader' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Cache\CachedEntityReader
     */
    protected function getCachedEntityReaderService()
    {
        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\CachedEntityReader(($this->privates['cache.object'] ?? $this->getCache_ObjectService()), new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityReader(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityHydrator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityHydrator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityHydrator())), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] ?? $this->getEntityDefinitionQueryHelperService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Parser\\SqlQueryParser'] ?? $this->getSqlQueryParserService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\SearchTermInterpreter'] ?? $this->getSearchTermInterpreterService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\EntityScoreQueryBuilder'] ?? ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\EntityScoreQueryBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Search\Term\EntityScoreQueryBuilder()))), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Cache\CachedEntitySearcher' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Cache\CachedEntitySearcher
     */
    protected function getCachedEntitySearcherService()
    {
        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\CachedEntitySearcher(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['cache.object'] ?? $this->getCache_ObjectService()), new \Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher(($this->services['Elasticsearch\\Client'] ?? $this->getClientService()), new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntitySearcher(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Parser\\SqlQueryParser'] ?? $this->getSqlQueryParserService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] ?? $this->getEntityDefinitionQueryHelperService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\SearchTermInterpreter'] ?? $this->getSearchTermInterpreterService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\EntityScoreQueryBuilder'] ?? ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\EntityScoreQueryBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Search\Term\EntityScoreQueryBuilder()))), ($this->services['Shopware\\Elasticsearch\\Framework\\ElasticsearchHelper'] ?? $this->getElasticsearchHelperService()), ($this->privates['Shopware\\Elasticsearch\\Framework\\DataAbstractionLayer\\CriteriaParser'] ?? $this->getCriteriaParserService())));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Cache\InvalidateCacheSubscriber' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Cache\InvalidateCacheSubscriber
     */
    protected function getInvalidateCacheSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Cache/InvalidateCacheSubscriber.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\InvalidateCacheSubscriber'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\InvalidateCacheSubscriber(($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand
     */
    protected function getCreateEntitiesCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Command/CreateEntitiesCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/EntityGenerator.php';

        $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateEntitiesCommand'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand(new \Shopware\Core\Framework\DataAbstractionLayer\EntityGenerator(), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), (\dirname(__DIR__, 4).'/src'));

        $instance->setName('dal:create:entities');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand
     */
    protected function getCreateSchemaCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Command/CreateSchemaCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/SchemaGenerator.php';

        $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\CreateSchemaCommand'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand(new \Shopware\Core\Framework\DataAbstractionLayer\SchemaGenerator(), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), (\dirname(__DIR__, 4).'/src'));

        $instance->setName('dal:create:schema');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand
     */
    protected function getDataAbstractionLayerValidateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Command/DataAbstractionLayerValidateCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/DefinitionValidator.php';

        $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\DataAbstractionLayerValidateCommand'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand(new \Shopware\Core\Framework\DataAbstractionLayer\DefinitionValidator(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())));

        $instance->setName('dal:validate');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand
     */
    protected function getRefreshIndexCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Command/ConsoleProgressTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Command/RefreshIndexCommand.php';

        $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Command\\RefreshIndexCommand'] = $instance = new \Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\IndexerRegistryInterface'] ?? $this->getIndexerRegistryInterfaceService()));

        $instance->setName('dal:refresh:index');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory
     */
    protected function getIteratorFactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Dbal/Common/IteratorFactory.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper
     */
    protected function getEntityDefinitionQueryHelperService()
    {
        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper(new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\JoinBuilder\AntiJoinBuilder());
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Indexing\IndexerRegistryInterface' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Indexing\IndexerRegistry
     */
    protected function getIndexerRegistryInterfaceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerRegistry.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\IndexerRegistryInterface'] = new \Shopware\Core\Framework\DataAbstractionLayer\Indexing\IndexerRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\InheritanceIndexer'] ?? $this->getInheritanceIndexerService());
            yield 1 => ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\ChildCountIndexer'] ?? $this->getChildCountIndexerService());
            yield 2 => ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\TreeIndexer'] ?? $this->getTreeIndexerService());
            yield 3 => ($this->privates['Shopware\\Core\\Content\\Category\\DataAbstractionLayer\\Indexing\\BreadcrumbIndexer'] ?? $this->getBreadcrumbIndexerService());
            yield 4 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductRatingAverageIndexer'] ?? $this->getProductRatingAverageIndexerService());
            yield 5 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductStockIndexer'] ?? $this->getProductStockIndexerService());
            yield 6 => ($this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaFolderConfigIndexer'] ?? $this->getMediaFolderConfigIndexerService());
            yield 7 => ($this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaFolderSizeIndexer'] ?? $this->getMediaFolderSizeIndexerService());
            yield 8 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductCategoryTreeIndexer'] ?? $this->getProductCategoryTreeIndexerService());
            yield 9 => ($this->privates['Shopware\\Core\\Checkout\\Promotion\\DataAbstractionLayer\\Indexing\\PromotionRedemptionIndexer'] ?? $this->getPromotionRedemptionIndexerService());
            yield 10 => ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\ManyToManyIdFieldIndexer'] ?? $this->getManyToManyIdFieldIndexerService());
            yield 11 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\ProductListingPriceIndexer'] ?? $this->getProductListingPriceIndexerService());
            yield 12 => ($this->services['Shopware\\Core\\Content\\Seo\\DataAbstractionLayer\\Indexing\\SeoUrlIndexer'] ?? $this->getSeoUrlIndexerService());
            yield 13 => ($this->privates['Shopware\\Core\\Content\\Media\\DataAbstractionLayer\\Indexing\\MediaThumbnailIndexer'] ?? $this->getMediaThumbnailIndexerService());
            yield 14 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\Indexing\\VariantListingIndexer'] ?? $this->getVariantListingIndexerService());
            yield 15 => ($this->privates['Shopware\\Core\\Content\\Rule\\DataAbstractionLayer\\Indexing\\RulePayloadIndexer'] ?? $this->getRulePayloadIndexerService());
            yield 16 => ($this->privates['Shopware\\Core\\Content\\ProductStream\\DataAbstractionLayer\\Indexing\\ProductStreamIndexer'] ?? $this->getProductStreamIndexerService());
            yield 17 => ($this->privates['Shopware\\Core\\Checkout\\Promotion\\DataAbstractionLayer\\Indexing\\PromotionExclusionIndexer'] ?? $this->getPromotionExclusionIndexerService());
            yield 18 => ($this->services['Shopware\\Core\\Content\\Product\\SearchKeyword\\ProductSearchKeywordIndexer'] ?? $this->getProductSearchKeywordIndexerService());
            yield 19 => ($this->services['Shopware\\Elasticsearch\\Framework\\Indexing\\EntityIndexer'] ?? $this->getEntityIndexerService());
        }, 20), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\ChildCountIndexer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\ChildCountIndexer
     */
    protected function getChildCountIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/Indexer/ChildCountIndexer.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\ChildCountIndexer'] = new \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\ChildCountIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\InheritanceIndexer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\InheritanceIndexer
     */
    protected function getInheritanceIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/Indexer/InheritanceIndexer.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\InheritanceIndexer'] = new \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\InheritanceIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\ManyToManyIdFieldIndexer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\ManyToManyIdFieldIndexer
     */
    protected function getManyToManyIdFieldIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/Indexer/ManyToManyIdFieldIndexer.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\ManyToManyIdFieldIndexer'] = new \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\ManyToManyIdFieldIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\TreeIndexer' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\TreeIndexer
     */
    protected function getTreeIndexerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/IndexerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/Indexer/TreeIndexer.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Indexer\\TreeIndexer'] = new \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Indexer\TreeIndexer(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] ?? ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\EntityCacheKeyGenerator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator('65d7bc893a56808ceeb447db79df3483'))), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\RegisteredIndexerSubscriber' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\RegisteredIndexerSubscriber
     */
    protected function getRegisteredIndexerSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Indexing/Subscriber/RegisteredIndexerSubscriber.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\Subscriber\\RegisteredIndexerSubscriber'] = new \Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\RegisteredIndexerSubscriber(($this->services['Shopware\\Core\\Framework\\Migration\\IndexerQueuer'] ?? $this->getIndexerQueuerService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\MessageQueue\\IndexerMessageSender'] ?? $this->getIndexerMessageSenderService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\SqlQueryParser' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\SqlQueryParser
     */
    protected function getSqlQueryParserService()
    {
        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Parser\\SqlQueryParser'] = new \Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\SqlQueryParser(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] ?? $this->getEntityDefinitionQueryHelperService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder
     */
    protected function getRequestCriteriaBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/RequestCriteriaBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Search/Parser/AggregationParser.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\RequestCriteriaBuilder'] = new \Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder(new \Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\AggregationParser(), ($this->privates['Shopware\\Core\\Framework\\Api\\Converter\\ApiVersionConverter'] ?? $this->getApiVersionConverterService()), 500, $this->parameters['shopware.api.allowed_limits']);
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Search\Term\SearchTermInterpreter' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Search\Term\SearchTermInterpreter
     */
    protected function getSearchTermInterpreterService()
    {
        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\SearchTermInterpreter'] = new \Shopware\Core\Framework\DataAbstractionLayer\Search\Term\SearchTermInterpreter(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\Tokenizer'] ?? ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\Tokenizer'] = new \Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Tokenizer())));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityExistsValidator' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityExistsValidator
     */
    protected function getEntityExistsValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Validation/EntityExistsValidator.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Validation\\EntityExistsValidator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityExistsValidator(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityNotExistsValidator' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityNotExistsValidator
     */
    protected function getEntityNotExistsValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Validation/EntityNotExistsValidator.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Validation\\EntityNotExistsValidator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityNotExistsValidator(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\VersionManager' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\VersionManager
     */
    protected function getVersionManagerService()
    {
        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\VersionManager'] = new \Shopware\Core\Framework\DataAbstractionLayer\VersionManager(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntitySearcher'] ?? $this->getCachedEntitySearcherService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriteGatewayInterface'] ?? $this->getEntityWriteGatewayInterfaceService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['serializer'] ?? $this->getSerializerService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommit\\VersionCommitDefinition'] ?? $this->getVersionCommitDefinitionService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\Aggregate\\VersionCommitData\\VersionCommitDataDefinition'] ?? $this->getVersionCommitDataDefinitionService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\Version\\VersionDefinition'] ?? $this->getVersionDefinitionService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteGatewayInterface' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityWriteGateway
     */
    protected function getEntityWriteGatewayInterfaceService()
    {
        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriteGatewayInterface'] = new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityWriteGateway(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\ExceptionHandlerRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\System\\Language\\LanguageExceptionHandler'] ?? ($this->privates['Shopware\\Core\\System\\Language\\LanguageExceptionHandler'] = new \Shopware\Core\System\Language\LanguageExceptionHandler()));
            yield 1 => ($this->privates['Shopware\\Core\\System\\SalesChannel\\SalesChannelExceptionHandler'] ?? ($this->privates['Shopware\\Core\\System\\SalesChannel\\SalesChannelExceptionHandler'] = new \Shopware\Core\System\SalesChannel\SalesChannelExceptionHandler()));
            yield 2 => ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\ProductExceptionHandler'] ?? ($this->privates['Shopware\\Core\\Content\\Product\\DataAbstractionLayer\\ProductExceptionHandler'] = new \Shopware\Core\Content\Product\DataAbstractionLayer\ProductExceptionHandler()));
            yield 3 => ($this->privates['Shopware\\Core\\Content\\Newsletter\\NewsletterExceptionHandler'] ?? ($this->privates['Shopware\\Core\\Content\\Newsletter\\NewsletterExceptionHandler'] = new \Shopware\Core\Content\Newsletter\NewsletterExceptionHandler()));
            yield 4 => ($this->privates['Shopware\\Core\\Content\\ProductExport\\DataAbstractionLayer\\ProductExportExceptionHandler'] ?? ($this->privates['Shopware\\Core\\Content\\ProductExport\\DataAbstractionLayer\\ProductExportExceptionHandler'] = new \Shopware\Core\Content\ProductExport\DataAbstractionLayer\ProductExportExceptionHandler()));
            yield 5 => ($this->privates['Shopware\\Core\\Checkout\\Order\\OrderExceptionHandler'] ?? ($this->privates['Shopware\\Core\\Checkout\\Order\\OrderExceptionHandler'] = new \Shopware\Core\Checkout\Order\OrderExceptionHandler()));
        }, 6)));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter
     */
    protected function getEntityWriterService()
    {
        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] = new \Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\WriteCommandExtractor'] ?? $this->getWriteCommandExtractorService()), new \Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityForeignKeyResolver(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] ?? $this->getEntityDefinitionQueryHelperService())), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriteGatewayInterface'] ?? $this->getEntityWriteGatewayInterfaceService()), ($this->privates['Shopware\\Core\\System\\Language\\CachedLanguageLoader'] ?? $this->getCachedLanguageLoaderService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\LockValidator' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\LockValidator
     */
    protected function getLockValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Write/Validation/LockValidator.php';

        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\Validation\\LockValidator'] = new \Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\LockValidator(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor' shared service.
     *
     * @return \Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor
     */
    protected function getWriteCommandExtractorService()
    {
        return $this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\WriteCommandExtractor'] = new \Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriteGatewayInterface'] ?? $this->getEntityWriteGatewayInterfaceService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Command\DemodataCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Command\DemodataCommand
     */
    protected function getDemodataCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Command/DemodataCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataService.php';

        $this->privates['Shopware\\Core\\Framework\\Demodata\\Command\\DemodataCommand'] = $instance = new \Shopware\Core\Framework\Demodata\Command\DemodataCommand(new \Shopware\Core\Framework\Demodata\DemodataService(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\RuleGenerator'] ?? $this->getRuleGeneratorService());
            yield 1 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\CustomerGenerator'] ?? $this->getCustomerGeneratorService());
            yield 2 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\PropertyGroupGenerator'] ?? $this->getPropertyGroupGeneratorService());
            yield 3 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\CategoryGenerator'] ?? $this->getCategoryGeneratorService());
            yield 4 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\ProductManufacturerGenerator'] ?? $this->getProductManufacturerGeneratorService());
            yield 5 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\ProductReviewGenerator'] ?? $this->getProductReviewGeneratorService());
            yield 6 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\ProductGenerator'] ?? $this->getProductGeneratorService());
            yield 7 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\MediaGenerator'] ?? $this->getMediaGeneratorService());
            yield 8 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\ProductStreamGenerator'] ?? $this->getProductStreamGeneratorService());
            yield 9 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\OrderGenerator'] ?? $this->getOrderGeneratorService());
            yield 10 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\CustomFieldGenerator'] ?? $this->getCustomFieldGeneratorService());
            yield 11 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\MailTemplateGenerator'] ?? $this->getMailTemplateGeneratorService());
            yield 12 => ($this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\MailHeaderFooterGenerator'] ?? $this->getMailHeaderFooterGeneratorService());
        }, 13), \dirname(__DIR__, 4), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService())), 'prod');

        $instance->setName('framework:demodata');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\CategoryGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\CategoryGenerator
     */
    protected function getCategoryGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/CategoryGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\CategoryGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\CategoryGenerator(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['category.repository'] ?? $this->getCategory_RepositoryService()), ($this->services['cms_page.repository'] ?? $this->getCmsPage_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\CustomFieldGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\CustomFieldGenerator
     */
    protected function getCustomFieldGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/CustomFieldGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\CustomFieldGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\CustomFieldGenerator(($this->services['custom_field_set.repository'] ?? $this->getCustomFieldSet_RepositoryService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\CustomerGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\CustomerGenerator
     */
    protected function getCustomerGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/CustomerGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\CustomerGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\CustomerGenerator(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['customer_group.repository'] ?? $this->getCustomerGroup_RepositoryService()), ($this->privates['Shopware\\Core\\System\\NumberRange\\ValueGenerator\\NumberRangeValueGeneratorInterface'] ?? $this->getNumberRangeValueGeneratorInterfaceService()), ($this->services['Shopware\\Core\\Checkout\\Customer\\CustomerDefinition'] ?? $this->getCustomerDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\MailHeaderFooterGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\MailHeaderFooterGenerator
     */
    protected function getMailHeaderFooterGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/MailHeaderFooterGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\MailHeaderFooterGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\MailHeaderFooterGenerator(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['Shopware\\Core\\Content\\MailTemplate\\Aggregate\\MailHeaderFooter\\MailHeaderFooterDefinition'] ?? $this->getMailHeaderFooterDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\MailTemplateGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\MailTemplateGenerator
     */
    protected function getMailTemplateGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/MailTemplateGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\MailTemplateGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\MailTemplateGenerator(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['mail_template_type.repository'] ?? $this->getMailTemplateType_RepositoryService()), ($this->services['Shopware\\Core\\Content\\MailTemplate\\MailTemplateDefinition'] ?? $this->getMailTemplateDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\MediaGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\MediaGenerator
     */
    protected function getMediaGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/MediaGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\MediaGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\MediaGenerator(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['Shopware\\Core\\Content\\Media\\File\\FileSaver'] ?? $this->getFileSaverService()), ($this->privates['Shopware\\Core\\Content\\Media\\File\\FileNameProvider'] ?? $this->getFileNameProviderService()), ($this->services['media_default_folder.repository'] ?? $this->getMediaDefaultFolder_RepositoryService()), ($this->services['media_folder.repository'] ?? $this->getMediaFolder_RepositoryService()), ($this->services['Shopware\\Core\\Content\\Media\\MediaDefinition'] ?? $this->getMediaDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\OrderGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\OrderGenerator
     */
    protected function getOrderGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/OrderGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\OrderGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\OrderGenerator(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] ?? $this->getSalesChannelContextFactoryService()), ($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Order\\OrderConverter'] ?? $this->getOrderConverterService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['Shopware\\Core\\Checkout\\Order\\OrderDefinition'] ?? $this->getOrderDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\ProductGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\ProductGenerator
     */
    protected function getProductGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/ProductGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\ProductGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\ProductGenerator(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['tax.repository'] ?? $this->getTax_RepositoryService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\ProductManufacturerGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\ProductManufacturerGenerator
     */
    protected function getProductManufacturerGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/ProductManufacturerGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\ProductManufacturerGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\ProductManufacturerGenerator(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductManufacturer\\ProductManufacturerDefinition'] ?? $this->getProductManufacturerDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\ProductReviewGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\ProductReviewGenerator
     */
    protected function getProductReviewGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/ProductReviewGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\ProductReviewGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\ProductReviewGenerator(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['Shopware\\Core\\Content\\Product\\Aggregate\\ProductReview\\ProductReviewDefinition'] ?? $this->getProductReviewDefinitionService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\ProductStreamGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\ProductStreamGenerator
     */
    protected function getProductStreamGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/ProductStreamGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\ProductStreamGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\ProductStreamGenerator(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['Shopware\\Core\\Content\\ProductStream\\ProductStreamDefinition'] ?? $this->getProductStreamDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\PropertyGroupGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\PropertyGroupGenerator
     */
    protected function getPropertyGroupGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/PropertyGroupGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\PropertyGroupGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\PropertyGroupGenerator(($this->services['property_group.repository'] ?? $this->getPropertyGroup_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\Generator\RuleGenerator' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\Generator\RuleGenerator
     */
    protected function getRuleGeneratorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/DemodataGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/Generator/RuleGenerator.php';

        return $this->privates['Shopware\\Core\\Framework\\Demodata\\Generator\\RuleGenerator'] = new \Shopware\Core\Framework\Demodata\Generator\RuleGenerator(($this->services['rule.repository'] ?? $this->getRule_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Write\\EntityWriter'] ?? $this->getEntityWriterService()), ($this->services['payment_method.repository'] ?? $this->getPaymentMethod_RepositoryService()), ($this->services['shipping_method.repository'] ?? $this->getShippingMethod_RepositoryService()), ($this->services['Shopware\\Core\\Content\\Rule\\RuleDefinition'] ?? $this->getRuleDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand
     */
    protected function getCleanPersonalDataCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Demodata/PersonalData/CleanPersonalDataCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Demodata\\PersonalData\\CleanPersonalDataCommand'] = $instance = new \Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()));

        $instance->setName('database:clean-personal-data');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Event\BusinessEventDispatcher' shared service.
     *
     * @return \Shopware\Core\Framework\Event\BusinessEventDispatcher
     */
    protected function getBusinessEventDispatcherService()
    {
        return $this->privates['Shopware\\Core\\Framework\\Event\\BusinessEventDispatcher'] = new \Shopware\Core\Framework\Event\BusinessEventDispatcher(new \Symfony\Component\EventDispatcher\EventDispatcher(), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['Shopware\\Core\\Framework\\Event\\EventAction\\EventActionDefinition'] ?? $this->getEventActionDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\FeatureFlag\Command\FeatureFlagCreateCommand' shared service.
     *
     * @return \Shopware\Core\Framework\FeatureFlag\Command\FeatureFlagCreateCommand
     */
    protected function getFeatureFlagCreateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/FeatureFlag/Command/FeatureFlagCreateCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/FeatureFlag/FeatureFlagGenerator.php';

        $this->privates['Shopware\\Core\\Framework\\FeatureFlag\\Command\\FeatureFlagCreateCommand'] = $instance = new \Shopware\Core\Framework\FeatureFlag\Command\FeatureFlagCreateCommand(new \Shopware\Core\Framework\FeatureFlag\FeatureFlagGenerator());

        $instance->setName('feature:add');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Log\LoggingService' shared service.
     *
     * @return \Shopware\Core\Framework\Log\LoggingService
     */
    protected function getLoggingServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Log/LoggingService.php';

        return $this->privates['Shopware\\Core\\Framework\\Log\\LoggingService'] = new \Shopware\Core\Framework\Log\LoggingService('prod', ($this->services['monolog.logger.business_events'] ?? $this->getMonolog_Logger_BusinessEventsService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\MessageQueue\Middleware\RetryMiddleware' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\Middleware\RetryMiddleware
     */
    protected function getRetryMiddlewareService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Middleware/MiddlewareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Middleware/RetryMiddleware.php';

        return $this->privates['Shopware\\Core\\Framework\\MessageQueue\\Middleware\\RetryMiddleware'] = new \Shopware\Core\Framework\MessageQueue\Middleware\RetryMiddleware(($this->services['dead_message.repository'] ?? $this->getDeadMessage_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\MessageQueue\ScheduledTask\Command\RegisterScheduledTasksCommand' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\ScheduledTask\Command\RegisterScheduledTasksCommand
     */
    protected function getRegisterScheduledTasksCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/Command/RegisterScheduledTasksCommand.php';

        $this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\RegisterScheduledTasksCommand'] = $instance = new \Shopware\Core\Framework\MessageQueue\ScheduledTask\Command\RegisterScheduledTasksCommand(($this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Registry\\TaskRegistry'] ?? $this->getTaskRegistryService()));

        $instance->setName('scheduled-task:register');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\MessageQueue\ScheduledTask\Command\ScheduledTaskRunner' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\ScheduledTask\Command\ScheduledTaskRunner
     */
    protected function getScheduledTaskRunnerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/Command/ScheduledTaskRunner.php';

        $this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Command\\ScheduledTaskRunner'] = $instance = new \Shopware\Core\Framework\MessageQueue\ScheduledTask\Command\ScheduledTaskRunner(($this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Scheduler\\TaskScheduler'] ?? $this->getTaskSchedulerService()), ($this->privates['cache.messenger.restart_workers_signal'] ?? $this->getCache_Messenger_RestartWorkersSignalService()));

        $instance->setName('scheduled-task:run');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry
     */
    protected function getTaskRegistryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/Registry/TaskRegistry.php';

        return $this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Registry\\TaskRegistry'] = new \Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\RequeueDeadMessagesTask'] ?? ($this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\RequeueDeadMessagesTask'] = new \Shopware\Core\Framework\MessageQueue\ScheduledTask\RequeueDeadMessagesTask()));
            yield 1 => ($this->privates['Shopware\\Core\\Content\\Newsletter\\ScheduledTask\\NewsletterRecipientTask'] ?? ($this->privates['Shopware\\Core\\Content\\Newsletter\\ScheduledTask\\NewsletterRecipientTask'] = new \Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTask()));
            yield 2 => ($this->privates['Shopware\\Core\\Content\\ProductExport\\ScheduledTask\\ProductExportGenerateTask'] ?? ($this->privates['Shopware\\Core\\Content\\ProductExport\\ScheduledTask\\ProductExportGenerateTask'] = new \Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTask()));
            yield 3 => ($this->privates['Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapGenerateTask'] ?? ($this->privates['Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapGenerateTask'] = new \Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTask()));
            yield 4 => ($this->privates['Shopware\\Elasticsearch\\Framework\\Indexing\\CreateAliasTask'] ?? ($this->privates['Shopware\\Elasticsearch\\Framework\\Indexing\\CreateAliasTask'] = new \Shopware\Elasticsearch\Framework\Indexing\CreateAliasTask()));
        }, 5), ($this->services['scheduled_task.repository'] ?? $this->getScheduledTask_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskScheduler' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskScheduler
     */
    protected function getTaskSchedulerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/Scheduler/TaskScheduler.php';

        return $this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Scheduler\\TaskScheduler'] = new \Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskScheduler(($this->services['scheduled_task.repository'] ?? $this->getScheduledTask_RepositoryService()), ($this->services['message_bus'] ?? $this->getMessageBusService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\MessageQueue\ScheduledTask\Subscriber\PluginLifecycleSubscriber' shared service.
     *
     * @return \Shopware\Core\Framework\MessageQueue\ScheduledTask\Subscriber\PluginLifecycleSubscriber
     */
    protected function getPluginLifecycleSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/ScheduledTask/Subscriber/PluginLifecycleSubscriber.php';

        return $this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Subscriber\\PluginLifecycleSubscriber'] = new \Shopware\Core\Framework\MessageQueue\ScheduledTask\Subscriber\PluginLifecycleSubscriber(($this->privates['Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\Registry\\TaskRegistry'] ?? $this->getTaskRegistryService()), ($this->privates['cache.messenger.restart_workers_signal'] ?? $this->getCache_Messenger_RestartWorkersSignalService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Migration\Command\CreateMigrationCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Migration\Command\CreateMigrationCommand
     */
    protected function getCreateMigrationCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/Command/CreateMigrationCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Migration\\Command\\CreateMigrationCommand'] = $instance = new \Shopware\Core\Framework\Migration\Command\CreateMigrationCommand(($this->services['Shopware\\Core\\Framework\\Plugin\\KernelPluginCollection'] ?? $this->getKernelPluginCollectionService()), ($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginService'] ?? $this->getPluginServiceService()), \dirname(__DIR__, 4));

        $instance->setName('database:create-migration');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Migration\Command\MigrationCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Migration\Command\MigrationCommand
     */
    protected function getMigrationCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/Command/MigrationCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Migration\\Command\\MigrationCommand'] = $instance = new \Shopware\Core\Framework\Migration\Command\MigrationCommand(($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationCollectionLoader'] ?? $this->getMigrationCollectionLoaderService()), ($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationRuntime'] ?? $this->getMigrationRuntimeService()), ($this->privates['cache.object'] ?? $this->getCache_ObjectService()));

        $instance->setName('database:migrate');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand
     */
    protected function getMigrationDestructiveCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/Command/MigrationCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/Command/MigrationDestructiveCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Migration\\Command\\MigrationDestructiveCommand'] = $instance = new \Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand(($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationCollectionLoader'] ?? $this->getMigrationCollectionLoaderService()), ($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationRuntime'] ?? $this->getMigrationRuntimeService()), ($this->privates['cache.object'] ?? $this->getCache_ObjectService()));

        $instance->setName('database:migrate-destructive');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand
     */
    protected function getRefreshMigrationCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/Command/RefreshMigrationCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Migration\\Command\\RefreshMigrationCommand'] = $instance = new \Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand();

        $instance->setName('database:refresh-migration');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Migration\MigrationCollection' shared service.
     *
     * @return \Shopware\Core\Framework\Migration\MigrationCollection
     */
    protected function getMigrationCollectionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/MigrationCollection.php';

        return $this->privates['Shopware\\Core\\Framework\\Migration\\MigrationCollection'] = new \Shopware\Core\Framework\Migration\MigrationCollection($this->parameters['migration.directories']);
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Migration\MigrationCollectionLoader' shared service.
     *
     * @return \Shopware\Core\Framework\Migration\MigrationCollectionLoader
     */
    protected function getMigrationCollectionLoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/MigrationCollectionLoader.php';

        return $this->privates['Shopware\\Core\\Framework\\Migration\\MigrationCollectionLoader'] = new \Shopware\Core\Framework\Migration\MigrationCollectionLoader(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationCollection'] ?? $this->getMigrationCollectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Migration\MigrationRuntime' shared service.
     *
     * @return \Shopware\Core\Framework\Migration\MigrationRuntime
     */
    protected function getMigrationRuntimeService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Migration/MigrationRuntime.php';

        return $this->privates['Shopware\\Core\\Framework\\Migration\\MigrationRuntime'] = new \Shopware\Core\Framework\Migration\MigrationRuntime(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\BundleConfigDumper' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\BundleConfigDumper
     */
    protected function getBundleConfigDumperService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/BundleConfigDumper.php';

        return $this->privates['Shopware\\Core\\Framework\\Plugin\\BundleConfigDumper'] = new \Shopware\Core\Framework\Plugin\BundleConfigDumper(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\Command\BundleDumpCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Command\BundleDumpCommand
     */
    protected function getBundleDumpCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/BundleDumpCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Plugin\\Command\\BundleDumpCommand'] = $instance = new \Shopware\Core\Framework\Plugin\Command\BundleDumpCommand(($this->privates['Shopware\\Core\\Framework\\Plugin\\BundleConfigDumper'] ?? $this->getBundleConfigDumperService()));

        $instance->setName('bundle:dump');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand
     */
    protected function getPluginActivateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/AbstractPluginLifecycleCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/PluginActivateCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginActivateCommand'] = $instance = new \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand(($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginLifecycleService'] ?? $this->getPluginLifecycleServiceService()), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()));

        $instance->setName('plugin:activate');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand
     */
    protected function getPluginDeactivateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/AbstractPluginLifecycleCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/PluginDeactivateCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginDeactivateCommand'] = $instance = new \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand(($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginLifecycleService'] ?? $this->getPluginLifecycleServiceService()), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()));

        $instance->setName('plugin:deactivate');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand
     */
    protected function getPluginInstallCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/AbstractPluginLifecycleCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/PluginInstallCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginInstallCommand'] = $instance = new \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand(($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginLifecycleService'] ?? $this->getPluginLifecycleServiceService()), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()));

        $instance->setName('plugin:install');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand
     */
    protected function getPluginUninstallCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/AbstractPluginLifecycleCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/PluginUninstallCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUninstallCommand'] = $instance = new \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand(($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginLifecycleService'] ?? $this->getPluginLifecycleServiceService()), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()));

        $instance->setName('plugin:uninstall');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand
     */
    protected function getPluginUpdateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/AbstractPluginLifecycleCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/Lifecycle/PluginUpdateCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Plugin\\Command\\Lifecycle\\PluginUpdateCommand'] = $instance = new \Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand(($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginLifecycleService'] ?? $this->getPluginLifecycleServiceService()), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->privates['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheClearer'] ?? $this->getCacheClearer2Service()));

        $instance->setName('plugin:update');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\Command\PluginCreateCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Command\PluginCreateCommand
     */
    protected function getPluginCreateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/PluginCreateCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Plugin\\Command\\PluginCreateCommand'] = $instance = new \Shopware\Core\Framework\Plugin\Command\PluginCreateCommand(\dirname(__DIR__, 4));

        $instance->setName('plugin:create');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\Command\PluginListCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Command\PluginListCommand
     */
    protected function getPluginListCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/PluginListCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Plugin\\Command\\PluginListCommand'] = $instance = new \Shopware\Core\Framework\Plugin\Command\PluginListCommand(($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()));

        $instance->setName('plugin:list');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand
     */
    protected function getPluginRefreshCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Command/PluginRefreshCommand.php';

        $this->privates['Shopware\\Core\\Framework\\Plugin\\Command\\PluginRefreshCommand'] = $instance = new \Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand(($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginService'] ?? $this->getPluginServiceService()));

        $instance->setName('plugin:refresh');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\PluginLifecycleService' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\PluginLifecycleService
     */
    protected function getPluginLifecycleServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/PluginLifecycleService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Util/AssetService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Composer/CommandExecutor.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Requirement/RequirementsValidator.php';

        $a = ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService());
        $b = ($this->services['Shopware\\Core\\Framework\\Plugin\\KernelPluginCollection'] ?? $this->getKernelPluginCollectionService());

        return $this->privates['Shopware\\Core\\Framework\\Plugin\\PluginLifecycleService'] = new \Shopware\Core\Framework\Plugin\PluginLifecycleService($a, ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), $b, $this, ($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationCollection'] ?? $this->getMigrationCollectionService()), ($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationCollectionLoader'] ?? $this->getMigrationCollectionLoaderService()), ($this->privates['Shopware\\Core\\Framework\\Migration\\MigrationRuntime'] ?? $this->getMigrationRuntimeService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), new \Shopware\Core\Framework\Plugin\Util\AssetService(($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService()), ($this->services['kernel'] ?? $this->get('kernel', 1)), $b), new \Shopware\Core\Framework\Plugin\Composer\CommandExecutor(\dirname(__DIR__, 4)), new \Shopware\Core\Framework\Plugin\Requirement\RequirementsValidator($a, \dirname(__DIR__, 4)), ($this->privates['cache.messenger.restart_workers_signal'] ?? $this->getCache_Messenger_RestartWorkersSignalService()), '6.1.5', ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\PluginManagementService' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\PluginManagementService
     */
    protected function getPluginManagementServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/PluginManagementService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/PluginZipDetector.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/PluginExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/filesystem/Filesystem.php';

        $a = ($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem()));

        return $this->privates['Shopware\\Core\\Framework\\Plugin\\PluginManagementService'] = new \Shopware\Core\Framework\Plugin\PluginManagementService(\dirname(__DIR__, 4), new \Shopware\Core\Framework\Plugin\PluginZipDetector(), new \Shopware\Core\Framework\Plugin\PluginExtractor((\dirname(__DIR__, 4).'/custom/plugins'), $a), ($this->privates['Shopware\\Core\\Framework\\Plugin\\PluginService'] ?? $this->getPluginServiceService()), $a);
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Plugin\PluginService' shared service.
     *
     * @return \Shopware\Core\Framework\Plugin\PluginService
     */
    protected function getPluginServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/PluginService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Changelog/ChangelogService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Changelog/ChangelogParser.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Util/PluginFinder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Composer/PackageProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/Util/VersionSanitizer.php';

        return $this->privates['Shopware\\Core\\Framework\\Plugin\\PluginService'] = new \Shopware\Core\Framework\Plugin\PluginService((\dirname(__DIR__, 4).'/custom/plugins'), \dirname(__DIR__, 4), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->services['language.repository'] ?? $this->getLanguage_RepositoryService()), new \Shopware\Core\Framework\Plugin\Changelog\ChangelogService(new \Shopware\Core\Framework\Plugin\Changelog\ChangelogParser()), new \Shopware\Core\Framework\Plugin\Util\PluginFinder(new \Shopware\Core\Framework\Plugin\Composer\PackageProvider()), new \Shopware\Core\Framework\Plugin\Util\VersionSanitizer());
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Routing\ContextResolverListener' shared service.
     *
     * @return \Shopware\Core\Framework\Routing\ContextResolverListener
     */
    protected function getContextResolverListenerService()
    {
        return $this->privates['Shopware\\Core\\Framework\\Routing\\ContextResolverListener'] = new \Shopware\Core\Framework\Routing\ContextResolverListener(($this->privates['Shopware\\Core\\Framework\\Routing\\SalesChannelRequestContextResolver'] ?? $this->getSalesChannelRequestContextResolverService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Routing\RouteScopeListener' shared service.
     *
     * @return \Shopware\Core\Framework\Routing\RouteScopeListener
     */
    protected function getRouteScopeListenerService()
    {
        return $this->privates['Shopware\\Core\\Framework\\Routing\\RouteScopeListener'] = new \Shopware\Core\Framework\Routing\RouteScopeListener(($this->privates['Shopware\\Core\\Framework\\Routing\\RouteScopeRegistry'] ?? $this->getRouteScopeRegistryService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\Routing\\SymfonyRouteScopeWhitelist'] ?? ($this->privates['Shopware\\Core\\Framework\\Routing\\SymfonyRouteScopeWhitelist'] = new \Shopware\Core\Framework\Routing\SymfonyRouteScopeWhitelist()));
        }, 1));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Routing\RouteScopeRegistry' shared service.
     *
     * @return \Shopware\Core\Framework\Routing\RouteScopeRegistry
     */
    protected function getRouteScopeRegistryService()
    {
        return $this->privates['Shopware\\Core\\Framework\\Routing\\RouteScopeRegistry'] = new \Shopware\Core\Framework\Routing\RouteScopeRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\Routing\\RouteScope'] ?? ($this->privates['Shopware\\Core\\Framework\\Routing\\RouteScope'] = new \Shopware\Core\Framework\Routing\RouteScope()));
            yield 1 => ($this->privates['Shopware\\Core\\Framework\\Routing\\ApiRouteScope'] ?? ($this->privates['Shopware\\Core\\Framework\\Routing\\ApiRouteScope'] = new \Shopware\Core\Framework\Routing\ApiRouteScope()));
            yield 2 => ($this->privates['Shopware\\Core\\Framework\\Routing\\SalesChannelApiRouteScope'] ?? ($this->privates['Shopware\\Core\\Framework\\Routing\\SalesChannelApiRouteScope'] = new \Shopware\Core\Framework\Routing\SalesChannelApiRouteScope()));
            yield 3 => ($this->privates['Shopware\\Administration\\Framework\\Routing\\AdministrationRouteScope'] ?? ($this->privates['Shopware\\Administration\\Framework\\Routing\\AdministrationRouteScope'] = new \Shopware\Administration\Framework\Routing\AdministrationRouteScope()));
            yield 4 => ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontRouteScope'] ?? ($this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontRouteScope'] = new \Shopware\Storefront\Framework\Routing\StorefrontRouteScope()));
        }, 5));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver' shared service.
     *
     * @return \Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver
     */
    protected function getSalesChannelRequestContextResolverService()
    {
        $a = ($this->privates['Shopware\\Core\\Framework\\Routing\\RouteScopeRegistry'] ?? $this->getRouteScopeRegistryService());

        return $this->privates['Shopware\\Core\\Framework\\Routing\\SalesChannelRequestContextResolver'] = new \Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver(new \Shopware\Core\Framework\Routing\ApiRequestContextResolver(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), $a), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextService'] ?? $this->getSalesChannelContextServiceService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), $a);
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Rule\Collector\RuleConditionRegistry' shared service.
     *
     * @return \Shopware\Core\Framework\Rule\Collector\RuleConditionRegistry
     */
    protected function getRuleConditionRegistryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Rule/Collector/RuleConditionRegistry.php';

        return $this->privates['Shopware\\Core\\Framework\\Rule\\Collector\\RuleConditionRegistry'] = new \Shopware\Core\Framework\Rule\Collector\RuleConditionRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\Rule\\Container\\AndRule'] ?? ($this->privates['Shopware\\Core\\Framework\\Rule\\Container\\AndRule'] = new \Shopware\Core\Framework\Rule\Container\AndRule()));
            yield 1 => ($this->privates['Shopware\\Core\\Framework\\Rule\\Container\\NotRule'] ?? ($this->privates['Shopware\\Core\\Framework\\Rule\\Container\\NotRule'] = new \Shopware\Core\Framework\Rule\Container\NotRule()));
            yield 2 => ($this->privates['Shopware\\Core\\Framework\\Rule\\Container\\OrRule'] ?? ($this->privates['Shopware\\Core\\Framework\\Rule\\Container\\OrRule'] = new \Shopware\Core\Framework\Rule\Container\OrRule()));
            yield 3 => ($this->privates['Shopware\\Core\\Framework\\Rule\\Container\\XorRule'] ?? ($this->privates['Shopware\\Core\\Framework\\Rule\\Container\\XorRule'] = new \Shopware\Core\Framework\Rule\Container\XorRule()));
            yield 4 => ($this->privates['Shopware\\Core\\Framework\\Rule\\DateRangeRule'] ?? ($this->privates['Shopware\\Core\\Framework\\Rule\\DateRangeRule'] = new \Shopware\Core\Framework\Rule\DateRangeRule()));
            yield 5 => ($this->privates['Shopware\\Core\\Framework\\Rule\\SalesChannelRule'] ?? ($this->privates['Shopware\\Core\\Framework\\Rule\\SalesChannelRule'] = new \Shopware\Core\Framework\Rule\SalesChannelRule()));
            yield 6 => ($this->privates['Shopware\\Core\\Framework\\Rule\\TimeRangeRule'] ?? ($this->privates['Shopware\\Core\\Framework\\Rule\\TimeRangeRule'] = new \Shopware\Core\Framework\Rule\TimeRangeRule()));
            yield 7 => ($this->privates['Shopware\\Core\\Framework\\Rule\\WeekdayRule'] ?? ($this->privates['Shopware\\Core\\Framework\\Rule\\WeekdayRule'] = new \Shopware\Core\Framework\Rule\WeekdayRule()));
            yield 8 => ($this->privates['Shopware\\Core\\System\\Currency\\Rule\\CurrencyRule'] ?? ($this->privates['Shopware\\Core\\System\\Currency\\Rule\\CurrencyRule'] = new \Shopware\Core\System\Currency\Rule\CurrencyRule()));
            yield 9 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\CartAmountRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\CartAmountRule'] = new \Shopware\Core\Checkout\Cart\Rule\CartAmountRule()));
            yield 10 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\GoodsCountRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\GoodsCountRule'] = new \Shopware\Core\Checkout\Cart\Rule\GoodsCountRule()));
            yield 11 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\GoodsPriceRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\GoodsPriceRule'] = new \Shopware\Core\Checkout\Cart\Rule\GoodsPriceRule()));
            yield 12 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemOfTypeRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemOfTypeRule'] = new \Shopware\Core\Checkout\Cart\Rule\LineItemOfTypeRule()));
            yield 13 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemRule'] = new \Shopware\Core\Checkout\Cart\Rule\LineItemRule()));
            yield 14 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemsInCartRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemsInCartRule'] = new \Shopware\Core\Checkout\Cart\Rule\LineItemsInCartRule()));
            yield 15 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemTotalPriceRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemTotalPriceRule'] = new \Shopware\Core\Checkout\Cart\Rule\LineItemTotalPriceRule()));
            yield 16 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemUnitPriceRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemUnitPriceRule'] = new \Shopware\Core\Checkout\Cart\Rule\LineItemUnitPriceRule()));
            yield 17 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemWithQuantityRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemWithQuantityRule'] = new \Shopware\Core\Checkout\Cart\Rule\LineItemWithQuantityRule()));
            yield 18 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemWrapperRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemWrapperRule'] = new \Shopware\Core\Checkout\Cart\Rule\LineItemWrapperRule()));
            yield 19 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\CartWeightRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\CartWeightRule'] = new \Shopware\Core\Checkout\Cart\Rule\CartWeightRule()));
            yield 20 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\CartHasDeliveryFreeItemRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\CartHasDeliveryFreeItemRule'] = new \Shopware\Core\Checkout\Cart\Rule\CartHasDeliveryFreeItemRule()));
            yield 21 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\BillingCountryRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\BillingCountryRule'] = new \Shopware\Core\Checkout\Customer\Rule\BillingCountryRule()));
            yield 22 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\BillingStreetRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\BillingStreetRule'] = new \Shopware\Core\Checkout\Customer\Rule\BillingStreetRule()));
            yield 23 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\BillingZipCodeRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\BillingZipCodeRule'] = new \Shopware\Core\Checkout\Customer\Rule\BillingZipCodeRule()));
            yield 24 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\CustomerGroupRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\CustomerGroupRule'] = new \Shopware\Core\Checkout\Customer\Rule\CustomerGroupRule()));
            yield 25 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\CustomerNumberRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\CustomerNumberRule'] = new \Shopware\Core\Checkout\Customer\Rule\CustomerNumberRule()));
            yield 26 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\DifferentAddressesRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\DifferentAddressesRule'] = new \Shopware\Core\Checkout\Customer\Rule\DifferentAddressesRule()));
            yield 27 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\IsNewCustomerRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\IsNewCustomerRule'] = new \Shopware\Core\Checkout\Customer\Rule\IsNewCustomerRule()));
            yield 28 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\LastNameRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\LastNameRule'] = new \Shopware\Core\Checkout\Customer\Rule\LastNameRule()));
            yield 29 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\IsCompanyRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\IsCompanyRule'] = new \Shopware\Core\Checkout\Customer\Rule\IsCompanyRule()));
            yield 30 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\ShippingCountryRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\ShippingCountryRule'] = new \Shopware\Core\Checkout\Customer\Rule\ShippingCountryRule()));
            yield 31 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\ShippingStreetRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\ShippingStreetRule'] = new \Shopware\Core\Checkout\Customer\Rule\ShippingStreetRule()));
            yield 32 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\ShippingZipCodeRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\ShippingZipCodeRule'] = new \Shopware\Core\Checkout\Customer\Rule\ShippingZipCodeRule()));
            yield 33 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemsInCartCountRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemsInCartCountRule'] = new \Shopware\Core\Checkout\Cart\Rule\LineItemsInCartCountRule()));
            yield 34 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\OrderCountRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\OrderCountRule'] = new \Shopware\Core\Checkout\Customer\Rule\OrderCountRule()));
            yield 35 => ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\DaysSinceLastOrderRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Customer\\Rule\\DaysSinceLastOrderRule'] = new \Shopware\Core\Checkout\Customer\Rule\DaysSinceLastOrderRule()));
            yield 36 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemTagRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\LineItemTagRule'] = new \Shopware\Core\Checkout\Cart\Rule\LineItemTagRule()));
            yield 37 => ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\AlwaysValidRule'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Rule\\AlwaysValidRule'] = new \Shopware\Core\Checkout\Cart\Rule\AlwaysValidRule()));
        }, 38));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Store\Services\FirstRunWizardClient' shared service.
     *
     * @return \Shopware\Core\Framework\Store\Services\FirstRunWizardClient
     */
    protected function getFirstRunWizardClientService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Store/Services/FirstRunWizardClient.php';

        return $this->privates['Shopware\\Core\\Framework\\Store\\Services\\FirstRunWizardClient'] = new \Shopware\Core\Framework\Store\Services\FirstRunWizardClient(($this->privates['Shopware\\Core\\Framework\\Store\\Services\\StoreService'] ?? $this->getStoreServiceService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService()), true, ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Store\Services\StoreClient' shared service.
     *
     * @return \Shopware\Core\Framework\Store\Services\StoreClient
     */
    protected function getStoreClientService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Store/Services/StoreClient.php';

        return $this->privates['Shopware\\Core\\Framework\\Store\\Services\\StoreClient'] = new \Shopware\Core\Framework\Store\Services\StoreClient(($this->privates['Shopware\\Core\\Framework\\Store\\Services\\StoreService'] ?? $this->getStoreServiceService()), ($this->services['plugin.repository'] ?? $this->getPlugin_RepositoryService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Store\Services\StoreService' shared service.
     *
     * @return \Shopware\Core\Framework\Store\Services\StoreService
     */
    protected function getStoreServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Store/Services/StoreService.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Store/Services/OpenSSLVerifier.php';

        return $this->privates['Shopware\\Core\\Framework\\Store\\Services\\StoreService'] = new \Shopware\Core\Framework\Store\Services\StoreService(($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->privates['Shopware\\Core\\Framework\\Store\\Services\\OpenSSLVerifier'] ?? ($this->privates['Shopware\\Core\\Framework\\Store\\Services\\OpenSSLVerifier'] = new \Shopware\Core\Framework\Store\Services\OpenSSLVerifier([0 => (\dirname(__DIR__, 4).'/vendor/shopware/platform/src/Core/Framework/Store/public.key'), 1 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Store/public.key')]))), '6.1.5', $this->getEnv('INSTANCE_ID'));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Update\Checkers\LicenseCheck' shared service.
     *
     * @return \Shopware\Core\Framework\Update\Checkers\LicenseCheck
     */
    protected function getLicenseCheckService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Checkers/CheckerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Checkers/LicenseCheck.php';

        return $this->privates['Shopware\\Core\\Framework\\Update\\Checkers\\LicenseCheck'] = new \Shopware\Core\Framework\Update\Checkers\LicenseCheck(($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()), ($this->privates['Shopware\\Core\\Framework\\Store\\Services\\StoreClient'] ?? $this->getStoreClientService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Update\Checkers\MysqlVersionCheck' shared service.
     *
     * @return \Shopware\Core\Framework\Update\Checkers\MysqlVersionCheck
     */
    protected function getMysqlVersionCheckService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Checkers/CheckerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Checkers/MysqlVersionCheck.php';

        return $this->privates['Shopware\\Core\\Framework\\Update\\Checkers\\MysqlVersionCheck'] = new \Shopware\Core\Framework\Update\Checkers\MysqlVersionCheck(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Update\Checkers\WriteableCheck' shared service.
     *
     * @return \Shopware\Core\Framework\Update\Checkers\WriteableCheck
     */
    protected function getWriteableCheckService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Checkers/CheckerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Checkers/WriteableCheck.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Update/Services/Filesystem.php';

        return $this->privates['Shopware\\Core\\Framework\\Update\\Checkers\\WriteableCheck'] = new \Shopware\Core\Framework\Update\Checkers\WriteableCheck(new \Shopware\Core\Framework\Update\Services\Filesystem(), \dirname(__DIR__, 4));
    }

    /*
     * Gets the private 'Shopware\Core\Framework\Validation\DataValidator' shared service.
     *
     * @return \Shopware\Core\Framework\Validation\DataValidator
     */
    protected function getDataValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Validation/DataValidator.php';

        return $this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] = new \Shopware\Core\Framework\Validation\DataValidator(($this->services['validator'] ?? $this->getValidatorService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\Currency\CurrencyValidator' shared service.
     *
     * @return \Shopware\Core\System\Currency\CurrencyValidator
     */
    protected function getCurrencyValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Currency/CurrencyValidator.php';

        return $this->privates['Shopware\\Core\\System\\Currency\\CurrencyValidator'] = new \Shopware\Core\System\Currency\CurrencyValidator(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\CustomField\CustomFieldService' shared service.
     *
     * @return \Shopware\Core\System\CustomField\CustomFieldService
     */
    protected function getCustomFieldServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/CustomField/CustomFieldService.php';

        return $this->privates['Shopware\\Core\\System\\CustomField\\CustomFieldService'] = new \Shopware\Core\System\CustomField\CustomFieldService(($this->services['custom_field.repository'] ?? $this->getCustomField_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\Language\CachedLanguageLoader' shared service.
     *
     * @return \Shopware\Core\System\Language\CachedLanguageLoader
     */
    protected function getCachedLanguageLoaderService()
    {
        return $this->privates['Shopware\\Core\\System\\Language\\CachedLanguageLoader'] = new \Shopware\Core\System\Language\CachedLanguageLoader(new \Shopware\Core\System\Language\LanguageLoader(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())), ($this->privates['cache.object'] ?? $this->getCache_ObjectService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\Language\LanguageValidator' shared service.
     *
     * @return \Shopware\Core\System\Language\LanguageValidator
     */
    protected function getLanguageValidatorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/Language/LanguageValidator.php';

        return $this->privates['Shopware\\Core\\System\\Language\\LanguageValidator'] = new \Shopware\Core\System\Language\LanguageValidator(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGenerator
     */
    protected function getNumberRangeValueGeneratorInterfaceService()
    {
        return $this->privates['Shopware\\Core\\System\\NumberRange\\ValueGenerator\\NumberRangeValueGeneratorInterface'] = new \Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGenerator(new \Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\System\\NumberRange\\ValueGenerator\\Pattern\\ValueGeneratorPatternIncrement'] ?? $this->getValueGeneratorPatternIncrementService());
            yield 1 => ($this->privates['Shopware\\Core\\System\\NumberRange\\ValueGenerator\\Pattern\\ValueGeneratorPatternDate'] ?? ($this->privates['Shopware\\Core\\System\\NumberRange\\ValueGenerator\\Pattern\\ValueGeneratorPatternDate'] = new \Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternDate()));
        }, 2)), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Cache\\CachedEntityReader'] ?? $this->getCachedEntityReaderService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Shopware\\Core\\System\\NumberRange\\NumberRangeDefinition'] ?? $this->getNumberRangeDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternIncrement' shared service.
     *
     * @return \Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternIncrement
     */
    protected function getValueGeneratorPatternIncrementService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/ValueGenerator/Pattern/ValueGeneratorPatternInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/ValueGenerator/Pattern/ValueGeneratorPatternIncrement.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/ValueGenerator/Pattern/IncrementStorage/IncrementStorageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/NumberRange/ValueGenerator/Pattern/IncrementStorage/IncrementSqlStorage.php';

        return $this->privates['Shopware\\Core\\System\\NumberRange\\ValueGenerator\\Pattern\\ValueGeneratorPatternIncrement'] = new \Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternIncrement(new \Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\IncrementSqlStorage(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())));
    }

    /*
     * Gets the private 'Shopware\Core\System\SalesChannel\Command\SalesChannelCreateCommand' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Command\SalesChannelCreateCommand
     */
    protected function getSalesChannelCreateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Command/SalesChannelCreateCommand.php';

        $this->privates['Shopware\\Core\\System\\SalesChannel\\Command\\SalesChannelCreateCommand'] = $instance = new \Shopware\Core\System\SalesChannel\Command\SalesChannelCreateCommand(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->services['payment_method.repository'] ?? $this->getPaymentMethod_RepositoryService()), ($this->services['shipping_method.repository'] ?? $this->getShippingMethod_RepositoryService()), ($this->services['country.repository'] ?? $this->getCountry_RepositoryService()), ($this->services['snippet_set.repository'] ?? $this->getSnippetSet_RepositoryService()), ($this->services['category.repository'] ?? $this->getCategory_RepositoryService()));

        $instance->setName('sales-channel:create');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\System\SalesChannel\Context\SalesChannelContextFactory' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Context\SalesChannelContextFactory
     */
    protected function getSalesChannelContextFactoryService()
    {
        return $this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] = new \Shopware\Core\System\SalesChannel\Context\SalesChannelContextFactory(($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->services['currency.repository'] ?? $this->getCurrency_RepositoryService()), ($this->services['customer.repository'] ?? $this->getCustomer_RepositoryService()), ($this->services['customer_group.repository'] ?? $this->getCustomerGroup_RepositoryService()), ($this->services['country.repository'] ?? $this->getCountry_RepositoryService()), ($this->services['tax.repository'] ?? $this->getTax_RepositoryService()), ($this->services['customer_address.repository'] ?? $this->getCustomerAddress_RepositoryService()), ($this->services['payment_method.repository'] ?? $this->getPaymentMethod_RepositoryService()), ($this->services['shipping_method.repository'] ?? $this->getShippingMethod_RepositoryService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['country_state.repository'] ?? $this->getCountryState_RepositoryService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\TaxDetector'] ?? ($this->privates['Shopware\\Core\\Checkout\\Cart\\Tax\\TaxDetector'] = new \Shopware\Core\Checkout\Cart\Tax\TaxDetector())), new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\System\\Tax\\TaxRuleType\\EntireCountryRuleTypeFilter'] ?? ($this->privates['Shopware\\Core\\System\\Tax\\TaxRuleType\\EntireCountryRuleTypeFilter'] = new \Shopware\Core\System\Tax\TaxRuleType\EntireCountryRuleTypeFilter()));
            yield 1 => ($this->privates['Shopware\\Core\\System\\Tax\\TaxRuleType\\IndividualStatesRuleTypeFilter'] ?? ($this->privates['Shopware\\Core\\System\\Tax\\TaxRuleType\\IndividualStatesRuleTypeFilter'] = new \Shopware\Core\System\Tax\TaxRuleType\IndividualStatesRuleTypeFilter()));
            yield 2 => ($this->privates['Shopware\\Core\\System\\Tax\\TaxRuleType\\ZipCodeRangeRuleTypeFilter'] ?? ($this->privates['Shopware\\Core\\System\\Tax\\TaxRuleType\\ZipCodeRangeRuleTypeFilter'] = new \Shopware\Core\System\Tax\TaxRuleType\ZipCodeRangeRuleTypeFilter()));
            yield 3 => ($this->privates['Shopware\\Core\\System\\Tax\\TaxRuleType\\ZipCodeRuleTypeFilter'] ?? ($this->privates['Shopware\\Core\\System\\Tax\\TaxRuleType\\ZipCodeRuleTypeFilter'] = new \Shopware\Core\System\Tax\TaxRuleType\ZipCodeRuleTypeFilter()));
        }, 4));
    }

    /*
     * Gets the private 'Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister
     */
    protected function getSalesChannelContextPersisterService()
    {
        return $this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextPersister'] = new \Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\SalesChannel\Context\SalesChannelContextService' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\Context\SalesChannelContextService
     */
    protected function getSalesChannelContextServiceService()
    {
        return $this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextService'] = new \Shopware\Core\System\SalesChannel\Context\SalesChannelContextService(($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextFactory'] ?? $this->getSalesChannelContextFactoryService()), ($this->privates['Shopware\\Core\\Checkout\\Cart\\CartRuleLoader'] ?? $this->getCartRuleLoaderService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextPersister'] ?? $this->getSalesChannelContextPersisterService()), ($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelContextSwitcher' shared service.
     *
     * @return \Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelContextSwitcher
     */
    protected function getSalesChannelContextSwitcherService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/SalesChannel/SalesChannelContextSwitcher.php';

        return $this->privates['Shopware\\Core\\System\\SalesChannel\\SalesChannel\\SalesChannelContextSwitcher'] = new \Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelContextSwitcher(($this->privates['Shopware\\Core\\Framework\\Validation\\DataValidator'] ?? $this->getDataValidatorService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextPersister'] ?? $this->getSalesChannelContextPersisterService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\Snippet\SnippetService' shared service.
     *
     * @return \Shopware\Core\System\Snippet\SnippetService
     */
    protected function getSnippetServiceService()
    {
        return $this->privates['Shopware\\Core\\System\\Snippet\\SnippetService'] = new \Shopware\Core\System\Snippet\SnippetService(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->services['Shopware\\Core\\System\\Snippet\\Files\\SnippetFileCollection'] ?? $this->getSnippetFileCollectionService()), ($this->services['snippet.repository'] ?? $this->getSnippet_RepositoryService()), ($this->services['snippet_set.repository'] ?? $this->getSnippetSet_RepositoryService()), ($this->services['sales_channel_domain.repository'] ?? $this->getSalesChannelDomain_RepositoryService()), ($this->services['Shopware\\Core\\System\\Snippet\\Filter\\SnippetFilterFactory'] ?? $this->getSnippetFilterFactoryService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand
     */
    protected function getWorkflowDumpCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/StateMachine/Command/WorkflowDumpCommand.php';

        $this->privates['Shopware\\Core\\System\\StateMachine\\Command\\WorkflowDumpCommand'] = $instance = new \Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand(($this->privates['Shopware\\Core\\System\\StateMachine\\StateMachineRegistry'] ?? $this->getStateMachineRegistryService()));

        $instance->setName('state-machine:dump');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Core\System\StateMachine\StateMachineRegistry' shared service.
     *
     * @return \Shopware\Core\System\StateMachine\StateMachineRegistry
     */
    protected function getStateMachineRegistryService()
    {
        return $this->privates['Shopware\\Core\\System\\StateMachine\\StateMachineRegistry'] = new \Shopware\Core\System\StateMachine\StateMachineRegistry(($this->services['state_machine.repository'] ?? $this->getStateMachine_RepositoryService()), ($this->services['state_machine_state.repository'] ?? $this->getStateMachineState_RepositoryService()), ($this->services['state_machine_history.repository'] ?? $this->getStateMachineHistory_RepositoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()));
    }

    /*
     * Gets the private 'Shopware\Core\System\User\Command\UserCreateCommand' shared service.
     *
     * @return \Shopware\Core\System\User\Command\UserCreateCommand
     */
    protected function getUserCreateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Command/UserCreateCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/User/Service/UserProvisioner.php';

        $this->privates['Shopware\\Core\\System\\User\\Command\\UserCreateCommand'] = $instance = new \Shopware\Core\System\User\Command\UserCreateCommand(new \Shopware\Core\System\User\Service\UserProvisioner(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())));

        $instance->setName('user:create');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand' shared service.
     *
     * @return \Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand
     */
    protected function getElasticsearchCleanIndicesCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Command/ElasticsearchCleanIndicesCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/ElasticsearchOutdatedIndexDetector.php';

        $a = ($this->services['Elasticsearch\\Client'] ?? $this->getClientService());

        $this->privates['Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCleanIndicesCommand'] = $instance = new \Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand($a, new \Shopware\Elasticsearch\Framework\ElasticsearchOutdatedIndexDetector($a, ($this->privates['Shopware\\Elasticsearch\\Framework\\ElasticsearchRegistry'] ?? $this->getElasticsearchRegistryService()), ($this->services['language.repository'] ?? $this->getLanguage_RepositoryService()), ($this->services['Shopware\\Elasticsearch\\Framework\\ElasticsearchHelper'] ?? $this->getElasticsearchHelperService())));

        $instance->setName('es:index:cleanup');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand' shared service.
     *
     * @return \Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand
     */
    protected function getElasticsearchCreateAliasCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Command/ElasticsearchCreateAliasCommand.php';

        $this->privates['Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchCreateAliasCommand'] = $instance = new \Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand(($this->services['Shopware\\Elasticsearch\\Framework\\Indexing\\CreateAliasTaskHandler'] ?? $this->getCreateAliasTaskHandlerService()));

        $instance->setName('es:create:alias');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand' shared service.
     *
     * @return \Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand
     */
    protected function getElasticsearchIndexingCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/DataAbstractionLayer/Command/ConsoleProgressTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Command/ElasticsearchIndexingCommand.php';

        $this->privates['Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchIndexingCommand'] = $instance = new \Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand(($this->services['Shopware\\Elasticsearch\\Framework\\Indexing\\EntityIndexer'] ?? $this->getEntityIndexerService()));

        $instance->setName('es:index');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand' shared service.
     *
     * @return \Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand
     */
    protected function getElasticsearchTestAnalyzerCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Command/ElasticsearchTestAnalyzerCommand.php';

        $this->privates['Shopware\\Elasticsearch\\Framework\\Command\\ElasticsearchTestAnalyzerCommand'] = $instance = new \Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand(($this->services['Elasticsearch\\Client'] ?? $this->getClientService()));

        $instance->setName('es:test:analyzer');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Elasticsearch\Framework\DataAbstractionLayer\CriteriaParser' shared service.
     *
     * @return \Shopware\Elasticsearch\Framework\DataAbstractionLayer\CriteriaParser
     */
    protected function getCriteriaParserService()
    {
        return $this->privates['Shopware\\Elasticsearch\\Framework\\DataAbstractionLayer\\CriteriaParser'] = new \Shopware\Elasticsearch\Framework\DataAbstractionLayer\CriteriaParser(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\EntityDefinitionQueryHelper'] ?? $this->getEntityDefinitionQueryHelperService()));
    }

    /*
     * Gets the private 'Shopware\Elasticsearch\Framework\ElasticsearchRegistry' shared service.
     *
     * @return \Shopware\Elasticsearch\Framework\ElasticsearchRegistry
     */
    protected function getElasticsearchRegistryService()
    {
        return $this->privates['Shopware\\Elasticsearch\\Framework\\ElasticsearchRegistry'] = new \Shopware\Elasticsearch\Framework\ElasticsearchRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Elasticsearch\\Product\\ElasticsearchProductDefinition'] ?? $this->getElasticsearchProductDefinitionService());
        }, 1));
    }

    /*
     * Gets the private 'Shopware\Elasticsearch\Product\ElasticsearchProductDefinition' shared service.
     *
     * @return \Shopware\Elasticsearch\Product\ElasticsearchProductDefinition
     */
    protected function getElasticsearchProductDefinitionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/AbstractElasticsearchDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Product/ElasticsearchProductDefinition.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Framework/Indexing/EntityMapper.php';

        return $this->privates['Shopware\\Elasticsearch\\Product\\ElasticsearchProductDefinition'] = new \Shopware\Elasticsearch\Product\ElasticsearchProductDefinition(($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()), new \Shopware\Elasticsearch\Framework\Indexing\EntityMapper());
    }

    /*
     * Gets the private 'Shopware\Elasticsearch\Product\ProductSearchBuilder' shared service.
     *
     * @return \Shopware\Elasticsearch\Product\ProductSearchBuilder
     */
    protected function getProductSearchBuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SearchKeyword/ProductSearchBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/Product/ProductSearchBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SearchKeyword/ProductSearchBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SearchKeyword/ProductSearchTermInterpreterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Product/SearchKeyword/ProductSearchTermInterpreter.php';

        return $this->privates['Shopware\\Elasticsearch\\Product\\ProductSearchBuilder'] = new \Shopware\Elasticsearch\Product\ProductSearchBuilder(new \Shopware\Core\Content\Product\SearchKeyword\ProductSearchBuilder(new \Shopware\Core\Content\Product\SearchKeyword\ProductSearchTermInterpreter(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()), ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\Tokenizer'] ?? ($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Term\\Tokenizer'] = new \Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Tokenizer())), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()))), ($this->services['Shopware\\Elasticsearch\\Framework\\ElasticsearchHelper'] ?? $this->getElasticsearchHelperService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Production\Command\SystemGenerateAppSecretCommand' shared service.
     *
     * @return \Shopware\Production\Command\SystemGenerateAppSecretCommand
     */
    protected function getSystemGenerateAppSecretCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Command/SystemGenerateAppSecretCommand.php';

        $this->privates['Shopware\\Production\\Command\\SystemGenerateAppSecretCommand'] = $instance = new \Shopware\Production\Command\SystemGenerateAppSecretCommand(\dirname(__DIR__, 4));

        $instance->setName('system:generate-app-secret');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Production\Command\SystemGenerateJwtSecretCommand' shared service.
     *
     * @return \Shopware\Production\Command\SystemGenerateJwtSecretCommand
     */
    protected function getSystemGenerateJwtSecretCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Command/SystemGenerateJwtSecretCommand.php';

        $this->privates['Shopware\\Production\\Command\\SystemGenerateJwtSecretCommand'] = $instance = new \Shopware\Production\Command\SystemGenerateJwtSecretCommand(\dirname(__DIR__, 4));

        $instance->setName('system:generate-jwt-secret');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Production\Command\SystemInstallCommand' shared service.
     *
     * @return \Shopware\Production\Command\SystemInstallCommand
     */
    protected function getSystemInstallCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Command/SystemInstallCommand.php';

        $this->privates['Shopware\\Production\\Command\\SystemInstallCommand'] = $instance = new \Shopware\Production\Command\SystemInstallCommand(\dirname(__DIR__, 4));

        $instance->setName('system:install');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Production\Command\SystemSetupCommand' shared service.
     *
     * @return \Shopware\Production\Command\SystemSetupCommand
     */
    protected function getSystemSetupCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Command/SystemSetupCommand.php';

        $this->privates['Shopware\\Production\\Command\\SystemSetupCommand'] = $instance = new \Shopware\Production\Command\SystemSetupCommand(\dirname(__DIR__, 4));

        $instance->setName('system:setup');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Production\Command\SystemUpdateFinishCommand' shared service.
     *
     * @return \Shopware\Production\Command\SystemUpdateFinishCommand
     */
    protected function getSystemUpdateFinishCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Command/SystemUpdateFinishCommand.php';

        $this->privates['Shopware\\Production\\Command\\SystemUpdateFinishCommand'] = $instance = new \Shopware\Production\Command\SystemUpdateFinishCommand($this);

        $instance->setName('system:update:finish');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Production\Command\SystemUpdatePrepareCommand' shared service.
     *
     * @return \Shopware\Production\Command\SystemUpdatePrepareCommand
     */
    protected function getSystemUpdatePrepareCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Command/SystemUpdatePrepareCommand.php';

        $this->privates['Shopware\\Production\\Command\\SystemUpdatePrepareCommand'] = $instance = new \Shopware\Production\Command\SystemUpdatePrepareCommand($this);

        $instance->setName('system:update:prepare');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\AffiliateTracking\AffiliateTrackingListener' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\AffiliateTracking\AffiliateTrackingListener
     */
    protected function getAffiliateTrackingListenerService()
    {
        return $this->privates['Shopware\\Storefront\\Framework\\AffiliateTracking\\AffiliateTrackingListener'] = new \Shopware\Storefront\Framework\AffiliateTracking\AffiliateTrackingListener(($this->services['session'] ?? $this->getSessionService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Cache\CacheResponseSubscriber' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Cache\CacheResponseSubscriber
     */
    protected function getCacheResponseSubscriberService()
    {
        return $this->privates['Shopware\\Storefront\\Framework\\Cache\\CacheResponseSubscriber'] = new \Shopware\Storefront\Framework\Cache\CacheResponseSubscriber(($this->services['Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService'] ?? $this->getCartServiceService()), $this->getEnv('default:shopware_http_cache_default_ttl_default:SHOPWARE_HTTP_DEFAULT_TTL'));
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmer' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmer
     */
    protected function getCacheWarmer2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Handler/AbstractMessageHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheWarmer/CacheWarmer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheWarmer/CacheRouteWarmerRegistry.php';

        return $this->privates['Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\CacheWarmer'] = new \Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmer(($this->services['sales_channel_domain.repository'] ?? $this->getSalesChannelDomain_RepositoryService()), ($this->services['message_bus'] ?? $this->getMessageBusService()), new \Shopware\Storefront\Framework\Cache\CacheWarmer\CacheRouteWarmerRegistry(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\Product\\ProductRouteWarmer'] ?? $this->getProductRouteWarmerService());
            yield 1 => ($this->privates['Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\Navigation\\NavigationRouteWarmer'] ?? $this->getNavigationRouteWarmerService());
        }, 2)), ($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['router'] ?? $this->getRouterService()), ($this->services['Shopware\\Core\\Framework\\Routing\\RequestTransformerInterface'] ?? $this->getRequestTransformerInterfaceService()), ($this->services['Shopware\\Core\\Framework\\Adapter\\Cache\\CacheIdLoader'] ?? $this->getCacheIdLoaderService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Cache\CacheWarmer\Navigation\NavigationRouteWarmer' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Cache\CacheWarmer\Navigation\NavigationRouteWarmer
     */
    protected function getNavigationRouteWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheWarmer/CacheRouteWarmer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheWarmer/Navigation/NavigationRouteWarmer.php';

        return $this->privates['Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\Navigation\\NavigationRouteWarmer'] = new \Shopware\Storefront\Framework\Cache\CacheWarmer\Navigation\NavigationRouteWarmer(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Content\\Category\\CategoryDefinition'] ?? $this->getCategoryDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Cache\CacheWarmer\Product\ProductRouteWarmer' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Cache\CacheWarmer\Product\ProductRouteWarmer
     */
    protected function getProductRouteWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheWarmer/CacheRouteWarmer.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Cache/CacheWarmer/Product/ProductRouteWarmer.php';

        return $this->privates['Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\Product\\ProductRouteWarmer'] = new \Shopware\Storefront\Framework\Cache\CacheWarmer\Product\ProductRouteWarmer(($this->privates['Shopware\\Core\\Framework\\DataAbstractionLayer\\Dbal\\Common\\IteratorFactory'] ?? $this->getIteratorFactoryService()), ($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand
     */
    protected function getHttpCacheWarmUpCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Command/HttpCacheWarmUpCommand.php';

        $this->privates['Shopware\\Storefront\\Framework\\Command\\HttpCacheWarmUpCommand'] = $instance = new \Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand(($this->privates['Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\CacheWarmer'] ?? $this->getCacheWarmer2Service()), ($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));

        $instance->setName('http:cache:warm:up');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand
     */
    protected function getSalesChannelCreateStorefrontCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/System/SalesChannel/Command/SalesChannelCreateCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Command/SalesChannelCreateStorefrontCommand.php';

        $this->privates['Shopware\\Storefront\\Framework\\Command\\SalesChannelCreateStorefrontCommand'] = $instance = new \Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand(($this->services['Shopware\\Core\\Framework\\DataAbstractionLayer\\DefinitionInstanceRegistry'] ?? $this->getDefinitionInstanceRegistryService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->services['payment_method.repository'] ?? $this->getPaymentMethod_RepositoryService()), ($this->services['shipping_method.repository'] ?? $this->getShippingMethod_RepositoryService()), ($this->services['country.repository'] ?? $this->getCountry_RepositoryService()), ($this->services['snippet_set.repository'] ?? $this->getSnippetSet_RepositoryService()), ($this->services['category.repository'] ?? $this->getCategory_RepositoryService()));

        $instance->setName('sales-channel:create:storefront');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Csrf\CsrfRouteListener' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Csrf\CsrfRouteListener
     */
    protected function getCsrfRouteListenerService()
    {
        return $this->privates['Shopware\\Storefront\\Framework\\Csrf\\CsrfRouteListener'] = new \Shopware\Storefront\Framework\Csrf\CsrfRouteListener(($this->services['security.csrf.token_manager'] ?? $this->getSecurity_Csrf_TokenManagerService()), true, 'twig', ($this->services['session'] ?? $this->getSessionService()), ($this->services['translator'] ?? $this->getTranslatorService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Routing\StorefrontSubscriber' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Routing\StorefrontSubscriber
     */
    protected function getStorefrontSubscriberService()
    {
        $a = ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()));

        return $this->privates['Shopware\\Storefront\\Framework\\Routing\\StorefrontSubscriber'] = new \Shopware\Storefront\Framework\Routing\StorefrontSubscriber($a, ($this->services['router'] ?? $this->getRouterService()), ($this->services['Shopware\\Storefront\\Controller\\ErrorController'] ?? $this->getErrorControllerService()), ($this->privates['Shopware\\Core\\System\\SalesChannel\\Context\\SalesChannelContextService'] ?? $this->getSalesChannelContextServiceService()), ($this->services['Shopware\\Storefront\\Framework\\Csrf\\CsrfPlaceholderHandler'] ?? $this->getCsrfPlaceholderHandlerService()), false, new \Shopware\Storefront\Framework\Routing\MaintenanceModeResolver($a));
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Seo\SeoUrlRoute\NavigationPageSeoUrlRoute' shared service.
     *
     * @return \Shopware\Storefront\Framework\Seo\SeoUrlRoute\NavigationPageSeoUrlRoute
     */
    protected function getNavigationPageSeoUrlRouteService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrlRoute/SeoUrlRouteInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Seo/SeoUrlRoute/NavigationPageSeoUrlRoute.php';

        return $this->privates['Shopware\\Storefront\\Framework\\Seo\\SeoUrlRoute\\NavigationPageSeoUrlRoute'] = new \Shopware\Storefront\Framework\Seo\SeoUrlRoute\NavigationPageSeoUrlRoute(($this->services['Shopware\\Core\\Content\\Category\\CategoryDefinition'] ?? $this->getCategoryDefinitionService()), ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Seo\SeoUrlRoute\ProductPageSeoUrlRoute' shared service.
     *
     * @return \Shopware\Storefront\Framework\Seo\SeoUrlRoute\ProductPageSeoUrlRoute
     */
    protected function getProductPageSeoUrlRouteService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Content/Seo/SeoUrlRoute/SeoUrlRouteInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Seo/SeoUrlRoute/ProductPageSeoUrlRoute.php';

        return $this->privates['Shopware\\Storefront\\Framework\\Seo\\SeoUrlRoute\\ProductPageSeoUrlRoute'] = new \Shopware\Storefront\Framework\Seo\SeoUrlRoute\ProductPageSeoUrlRoute(($this->services['Shopware\\Core\\Content\\Product\\ProductDefinition'] ?? $this->getProductDefinitionService()), ($this->services['product.repository'] ?? $this->getProduct_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Framework\Twig\TwigDateRequestListener' shared autowired service.
     *
     * @return \Shopware\Storefront\Framework\Twig\TwigDateRequestListener
     */
    protected function getTwigDateRequestListenerService()
    {
        return $this->privates['Shopware\\Storefront\\Framework\\Twig\\TwigDateRequestListener'] = new \Shopware\Storefront\Framework\Twig\TwigDateRequestListener(($this->services['twig'] ?? $this->getTwigService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Page\Account\Login\AccountLoginPageLoader' shared autowired service.
     *
     * @return \Shopware\Storefront\Page\Account\Login\AccountLoginPageLoader
     */
    protected function getAccountLoginPageLoaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Page/Account/Login/AccountLoginPageLoader.php';

        return $this->privates['Shopware\\Storefront\\Page\\Account\\Login\\AccountLoginPageLoader'] = new \Shopware\Storefront\Page\Account\Login\AccountLoginPageLoader(($this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] ?? $this->getGenericPageLoaderService()), ($this->services['sales_channel.country.repository'] ?? $this->getSalesChannel_Country_RepositoryService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->services['sales_channel.salutation.repository'] ?? $this->getSalesChannel_Salutation_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Page\GenericPageLoader' shared autowired service.
     *
     * @return \Shopware\Storefront\Page\GenericPageLoader
     */
    protected function getGenericPageLoaderService()
    {
        return $this->privates['Shopware\\Storefront\\Page\\GenericPageLoader'] = new \Shopware\Storefront\Page\GenericPageLoader(($this->privates['Shopware\\Storefront\\Pagelet\\Header\\HeaderPageletLoader'] ?? $this->getHeaderPageletLoaderService()), new \Shopware\Storefront\Pagelet\Footer\FooterPageletLoader(($this->privates['Shopware\\Core\\Content\\Category\\Service\\NavigationLoader'] ?? $this->getNavigationLoaderService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService())), ($this->services['sales_channel.shipping_method.repository'] ?? $this->getSalesChannel_ShippingMethod_RepositoryService()), ($this->services['sales_channel.payment_method.repository'] ?? $this->getSalesChannel_PaymentMethod_RepositoryService()), ($this->services['Shopware\\Core\\System\\SystemConfig\\SystemConfigService'] ?? $this->getSystemConfigServiceService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Pagelet\Header\HeaderPageletLoader' shared autowired service.
     *
     * @return \Shopware\Storefront\Pagelet\Header\HeaderPageletLoader
     */
    protected function getHeaderPageletLoaderService()
    {
        return $this->privates['Shopware\\Storefront\\Pagelet\\Header\\HeaderPageletLoader'] = new \Shopware\Storefront\Pagelet\Header\HeaderPageletLoader(($this->services['sales_channel.language.repository'] ?? $this->getSalesChannel_Language_RepositoryService()), ($this->services['sales_channel.currency.repository'] ?? $this->getSalesChannel_Currency_RepositoryService()), ($this->services['sales_channel.category.repository'] ?? $this->getSalesChannel_Category_RepositoryService()), ($this->privates['Shopware\\Core\\Content\\Category\\Service\\NavigationLoader'] ?? $this->getNavigationLoaderService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\Command\ThemeChangeCommand' shared service.
     *
     * @return \Shopware\Storefront\Theme\Command\ThemeChangeCommand
     */
    protected function getThemeChangeCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Command/ThemeChangeCommand.php';

        $this->privates['Shopware\\Storefront\\Theme\\Command\\ThemeChangeCommand'] = $instance = new \Shopware\Storefront\Theme\Command\ThemeChangeCommand(($this->privates['Shopware\\Storefront\\Theme\\ThemeService'] ?? $this->getThemeServiceService()), ($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] ?? ($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] = new \Shopware\Storefront\Theme\StorefrontPluginRegistry(($this->services['kernel'] ?? $this->get('kernel', 1))))), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()), ($this->services['theme.repository'] ?? $this->getTheme_RepositoryService()), ($this->services['theme_sales_channel.repository'] ?? $this->getThemeSalesChannel_RepositoryService()), ($this->services['media_thumbnail.repository'] ?? $this->getMediaThumbnail_RepositoryService()));

        $instance->setName('theme:change');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\Command\ThemeCompileCommand' shared service.
     *
     * @return \Shopware\Storefront\Theme\Command\ThemeCompileCommand
     */
    protected function getThemeCompileCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Command/ThemeCompileCommand.php';

        $this->privates['Shopware\\Storefront\\Theme\\Command\\ThemeCompileCommand'] = $instance = new \Shopware\Storefront\Theme\Command\ThemeCompileCommand(($this->privates['Shopware\\Storefront\\Theme\\ThemeService'] ?? $this->getThemeServiceService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()));

        $instance->setName('theme:compile');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\Command\ThemeCreateCommand' shared service.
     *
     * @return \Shopware\Storefront\Theme\Command\ThemeCreateCommand
     */
    protected function getThemeCreateCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Command/ThemeCreateCommand.php';

        $this->privates['Shopware\\Storefront\\Theme\\Command\\ThemeCreateCommand'] = $instance = new \Shopware\Storefront\Theme\Command\ThemeCreateCommand(\dirname(__DIR__, 4));

        $instance->setName('theme:create');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\Command\ThemeDumpCommand' shared service.
     *
     * @return \Shopware\Storefront\Theme\Command\ThemeDumpCommand
     */
    protected function getThemeDumpCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Command/ThemeDumpCommand.php';

        $this->privates['Shopware\\Storefront\\Theme\\Command\\ThemeDumpCommand'] = $instance = new \Shopware\Storefront\Theme\Command\ThemeDumpCommand(($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] ?? ($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] = new \Shopware\Storefront\Theme\StorefrontPluginRegistry(($this->services['kernel'] ?? $this->get('kernel', 1))))), ($this->privates['Shopware\\Storefront\\Theme\\ThemeFileResolver'] ?? ($this->privates['Shopware\\Storefront\\Theme\\ThemeFileResolver'] = new \Shopware\Storefront\Theme\ThemeFileResolver())), ($this->services['theme.repository'] ?? $this->getTheme_RepositoryService()), $this->targetDir.'');

        $instance->setName('theme:dump');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\Command\ThemeRefreshCommand' shared service.
     *
     * @return \Shopware\Storefront\Theme\Command\ThemeRefreshCommand
     */
    protected function getThemeRefreshCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Command/ThemeRefreshCommand.php';

        $this->privates['Shopware\\Storefront\\Theme\\Command\\ThemeRefreshCommand'] = $instance = new \Shopware\Storefront\Theme\Command\ThemeRefreshCommand(($this->privates['Shopware\\Storefront\\Theme\\ThemeLifecycleService'] ?? $this->getThemeLifecycleServiceService()));

        $instance->setName('theme:refresh');

        return $instance;
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\Subscriber\FirstRunWizardSubscriber' shared service.
     *
     * @return \Shopware\Storefront\Theme\Subscriber\FirstRunWizardSubscriber
     */
    protected function getFirstRunWizardSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Subscriber/FirstRunWizardSubscriber.php';

        return $this->privates['Shopware\\Storefront\\Theme\\Subscriber\\FirstRunWizardSubscriber'] = new \Shopware\Storefront\Theme\Subscriber\FirstRunWizardSubscriber(($this->privates['Shopware\\Storefront\\Theme\\ThemeService'] ?? $this->getThemeServiceService()), ($this->privates['Shopware\\Storefront\\Theme\\ThemeLifecycleService'] ?? $this->getThemeLifecycleServiceService()), ($this->services['theme.repository'] ?? $this->getTheme_RepositoryService()), ($this->services['theme_sales_channel.repository'] ?? $this->getThemeSalesChannel_RepositoryService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber' shared service.
     *
     * @return \Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber
     */
    protected function getPluginLifecycleSubscriber2Service()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Subscriber/PluginLifecycleSubscriber.php';

        return $this->privates['Shopware\\Storefront\\Theme\\Subscriber\\PluginLifecycleSubscriber'] = new \Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber(($this->privates['Shopware\\Storefront\\Theme\\ThemeLifecycleService'] ?? $this->getThemeLifecycleServiceService()), ($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] ?? ($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] = new \Shopware\Storefront\Theme\StorefrontPluginRegistry(($this->services['kernel'] ?? $this->get('kernel', 1))))), ($this->privates['Shopware\\Storefront\\Theme\\ThemeService'] ?? $this->getThemeServiceService()), \dirname(__DIR__, 4), ($this->services['theme.repository'] ?? $this->getTheme_RepositoryService()), ($this->services['sales_channel.repository'] ?? $this->getSalesChannel_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\Subscriber\UpdateSubscriber' shared service.
     *
     * @return \Shopware\Storefront\Theme\Subscriber\UpdateSubscriber
     */
    protected function getUpdateSubscriberService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/Subscriber/UpdateSubscriber.php';

        return $this->privates['Shopware\\Storefront\\Theme\\Subscriber\\UpdateSubscriber'] = new \Shopware\Storefront\Theme\Subscriber\UpdateSubscriber(($this->privates['Shopware\\Storefront\\Theme\\ThemeService'] ?? $this->getThemeServiceService()), ($this->privates['Shopware\\Storefront\\Theme\\ThemeLifecycleService'] ?? $this->getThemeLifecycleServiceService()), ($this->services['theme.repository'] ?? $this->getTheme_RepositoryService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\ThemeLifecycleService' shared service.
     *
     * @return \Shopware\Storefront\Theme\ThemeLifecycleService
     */
    protected function getThemeLifecycleServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/shopware/storefront/Theme/ThemeLifecycleService.php';

        return $this->privates['Shopware\\Storefront\\Theme\\ThemeLifecycleService'] = new \Shopware\Storefront\Theme\ThemeLifecycleService(($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] ?? ($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] = new \Shopware\Storefront\Theme\StorefrontPluginRegistry(($this->services['kernel'] ?? $this->get('kernel', 1))))), ($this->services['theme.repository'] ?? $this->getTheme_RepositoryService()), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), ($this->services['media_folder.repository'] ?? $this->getMediaFolder_RepositoryService()), ($this->services['theme_media.repository'] ?? $this->getThemeMedia_RepositoryService()), ($this->services['Shopware\\Core\\Content\\Media\\File\\FileSaver'] ?? $this->getFileSaverService()));
    }

    /*
     * Gets the private 'Shopware\Storefront\Theme\ThemeService' shared service.
     *
     * @return \Shopware\Storefront\Theme\ThemeService
     */
    protected function getThemeServiceService()
    {
        $a = ($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] ?? ($this->services['Shopware\\Storefront\\Theme\\StorefrontPluginRegistry'] = new \Shopware\Storefront\Theme\StorefrontPluginRegistry(($this->services['kernel'] ?? $this->get('kernel', 1)))));

        return $this->privates['Shopware\\Storefront\\Theme\\ThemeService'] = new \Shopware\Storefront\Theme\ThemeService($a, ($this->services['theme.repository'] ?? $this->getTheme_RepositoryService()), ($this->services['theme_sales_channel.repository'] ?? $this->getThemeSalesChannel_RepositoryService()), ($this->services['media.repository'] ?? $this->getMedia_RepositoryService()), $a, new \Shopware\Storefront\Theme\ThemeCompiler(($this->privates['shopware.filesystem.public'] ?? $this->getShopware_Filesystem_PublicService()), ($this->privates['Shopware\\Storefront\\Theme\\ThemeFileResolver'] ?? ($this->privates['Shopware\\Storefront\\Theme\\ThemeFileResolver'] = new \Shopware\Storefront\Theme\ThemeFileResolver())), $this->targetDir.'', false), ($this->privates['cache.object'] ?? $this->getCache_ObjectService()));
    }

    /*
     * Gets the private 'Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory' shared service.
     *
     * @return \Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory
     */
    protected function getPsrHttpFactoryService()
    {
        $a = new \Nyholm\Psr7\Factory\Psr17Factory();

        return $this->privates['Symfony\\Bridge\\PsrHttpMessage\\Factory\\PsrHttpFactory'] = new \Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory($a, $a, $a, $a);
    }

    /*
     * Gets the private 'annotations.cache' shared service.
     *
     * @return \Symfony\Component\Cache\DoctrineProvider
     */
    protected function getAnnotations_CacheService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/Cache.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/FlushableCache.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/ClearableCache.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiGetCache.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiDeleteCache.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiPutCache.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/MultiOperationCache.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/cache/lib/Doctrine/Common/Cache/CacheProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/cache/DoctrineProvider.php';

        return new \Symfony\Component\Cache\DoctrineProvider(\Symfony\Component\Cache\Adapter\PhpArrayAdapter::create(($this->targetDir.''.'/annotations.php'), ($this->privates['cache.annotations'] ?? $this->getCache_AnnotationsService())));
    }

    /*
     * Gets the private 'annotations.cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer
     */
    protected function getAnnotations_CacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/AbstractPhpFileCacheWarmer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/AnnotationsCacheWarmer.php';

        return $this->privates['annotations.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer(($this->privates['annotations.reader'] ?? $this->getAnnotations_ReaderService()), ($this->targetDir.''.'/annotations.php'), '#^Symfony\\\\(?:Component\\\\HttpKernel\\\\|Bundle\\\\FrameworkBundle\\\\Controller\\\\(?!.*Controller$))#', false);
    }

    /*
     * Gets the private 'annotations.cached_reader' shared service.
     *
     * @return \Doctrine\Common\Annotations\CachedReader
     */
    protected function getAnnotations_CachedReaderService()
    {
        return $this->privates['annotations.cached_reader'] = new \Doctrine\Common\Annotations\CachedReader(($this->privates['annotations.reader'] ?? $this->getAnnotations_ReaderService()), $this->getAnnotations_CacheService(), false);
    }

    /*
     * Gets the private 'annotations.reader' shared service.
     *
     * @return \Doctrine\Common\Annotations\AnnotationReader
     */
    protected function getAnnotations_ReaderService()
    {
        $this->privates['annotations.reader'] = $instance = new \Doctrine\Common\Annotations\AnnotationReader();

        $a = new \Doctrine\Common\Annotations\AnnotationRegistry();
        $a->registerUniqueLoader('class_exists');

        $instance->addGlobalIgnoredName('required', $a);

        return $instance;
    }

    /*
     * Gets the private 'argument_resolver.service' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver
     */
    protected function getArgumentResolver_ServiceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ArgumentResolver/ServiceValueResolver.php';

        return $this->privates['argument_resolver.service'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver(($this->privates['.service_locator.I3K77mT'] ?? ($this->privates['.service_locator.I3K77mT'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], []))));
    }

    /*
     * Gets the private 'assets.packages' shared service.
     *
     * @return \Symfony\Component\Asset\Packages
     */
    protected function getAssets_PackagesService()
    {
        return $this->privates['assets.packages'] = new \Symfony\Component\Asset\Packages(new \Symfony\Component\Asset\PathPackage('', new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy(), new \Symfony\Component\Asset\Context\RequestStackContext(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), '', false)), []);
    }

    /*
     * Gets the private 'cache.annotations' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_AnnotationsService()
    {
        return $this->privates['cache.annotations'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('A-iPOzJS8h', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'cache.http' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TagAwareAdapter
     */
    protected function getCache_HttpService()
    {
        return $this->privates['cache.http'] = new \Symfony\Component\Cache\Adapter\TagAwareAdapter(($this->privates['.cache.http.inner'] ?? $this->get_Cache_Http_InnerService()), ($this->privates['cache.tags'] ?? $this->getCache_TagsService()));
    }

    /*
     * Gets the private 'cache.messenger.restart_workers_signal' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected function getCache_Messenger_RestartWorkersSignalService()
    {
        $this->privates['cache.messenger.restart_workers_signal'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('KZF0VVjKGW', 0, ($this->targetDir.''.'/pools'), ($this->privates['cache.default_marshaller'] ?? ($this->privates['cache.default_marshaller'] = new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL))));

        $instance->setLogger(($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));

        return $instance;
    }

    /*
     * Gets the private 'cache.object' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TagAwareAdapter
     */
    protected function getCache_ObjectService()
    {
        return $this->privates['cache.object'] = new \Symfony\Component\Cache\Adapter\TagAwareAdapter(($this->privates['.cache.object.inner'] ?? $this->get_Cache_Object_InnerService()), ($this->privates['cache.tags'] ?? $this->getCache_TagsService()));
    }

    /*
     * Gets the private 'cache.property_access' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_PropertyAccessService()
    {
        return $this->privates['cache.property_access'] = \Symfony\Component\PropertyAccess\PropertyAccessor::createCache('bHLNDO9pt1', 0, $this->getParameter('container.build_id'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'cache.property_info' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_PropertyInfoService()
    {
        return $this->privates['cache.property_info'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('3cezXtd7LC', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'cache.serializer' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_SerializerService()
    {
        return $this->privates['cache.serializer'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('eU5TYYIy7e', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'cache.tags' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected function getCache_TagsService()
    {
        $this->privates['cache.tags'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('lfkMI794yV', 0, ($this->targetDir.''.'/pools'), ($this->privates['cache.default_marshaller'] ?? ($this->privates['cache.default_marshaller'] = new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL))));

        $instance->setLogger(($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));

        return $instance;
    }

    /*
     * Gets the private 'cache.validator' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_ValidatorService()
    {
        return $this->privates['cache.validator'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('8er7gk80bi', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /*
     * Gets the private 'console.command.about' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\AboutCommand
     */
    protected function getConsole_Command_AboutService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/AboutCommand.php';

        $this->privates['console.command.about'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\AboutCommand();

        $instance->setName('about');

        return $instance;
    }

    /*
     * Gets the private 'console.command.assets_install' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand
     */
    protected function getConsole_Command_AssetsInstallService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/AssetsInstallCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/filesystem/Filesystem.php';

        $this->privates['console.command.assets_install'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand(($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), \dirname(__DIR__, 4));

        $instance->setName('assets:install');

        return $instance;
    }

    /*
     * Gets the private 'console.command.cache_clear' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand
     */
    protected function getConsole_Command_CacheClearService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/CacheClearCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/filesystem/Filesystem.php';

        $this->privates['console.command.cache_clear'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand(($this->services['cache_clearer'] ?? $this->getCacheClearerService()), ($this->services['filesystem'] ?? ($this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem())));

        $instance->setName('cache:clear');

        return $instance;
    }

    /*
     * Gets the private 'console.command.cache_pool_clear' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand
     */
    protected function getConsole_Command_CachePoolClearService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/CachePoolClearCommand.php';

        $this->privates['console.command.cache_pool_clear'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand(($this->services['cache.global_clearer'] ?? $this->getCache_GlobalClearerService()));

        $instance->setName('cache:pool:clear');

        return $instance;
    }

    /*
     * Gets the private 'console.command.cache_pool_delete' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand
     */
    protected function getConsole_Command_CachePoolDeleteService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/CachePoolDeleteCommand.php';

        $this->privates['console.command.cache_pool_delete'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand(($this->services['cache.global_clearer'] ?? $this->getCache_GlobalClearerService()));

        $instance->setName('cache:pool:delete');

        return $instance;
    }

    /*
     * Gets the private 'console.command.cache_pool_list' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand
     */
    protected function getConsole_Command_CachePoolListService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/CachePoolListCommand.php';

        $this->privates['console.command.cache_pool_list'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand([0 => 'cache.app', 1 => 'cache.system', 2 => 'cache.validator', 3 => 'cache.serializer', 4 => 'cache.annotations', 5 => 'cache.property_info', 6 => 'cache.messenger.restart_workers_signal', 7 => 'cache.object', 8 => 'cache.http', 9 => 'cache.tags', 10 => 'cache.property_access']);

        $instance->setName('cache:pool:list');

        return $instance;
    }

    /*
     * Gets the private 'console.command.cache_pool_prune' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand
     */
    protected function getConsole_Command_CachePoolPruneService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/CachePoolPruneCommand.php';

        $this->privates['console.command.cache_pool_prune'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand(new RewindableGenerator(function () {
            yield 'cache.app' => ($this->services['cache.app'] ?? $this->getCache_AppService());
            yield 'cache.messenger.restart_workers_signal' => ($this->privates['cache.messenger.restart_workers_signal'] ?? $this->getCache_Messenger_RestartWorkersSignalService());
            yield '.cache.object.inner' => ($this->privates['.cache.object.inner'] ?? $this->get_Cache_Object_InnerService());
            yield '.cache.http.inner' => ($this->privates['.cache.http.inner'] ?? $this->get_Cache_Http_InnerService());
            yield 'cache.tags' => ($this->privates['cache.tags'] ?? $this->getCache_TagsService());
        }, 5));

        $instance->setName('cache:pool:prune');

        return $instance;
    }

    /*
     * Gets the private 'console.command.cache_warmup' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand
     */
    protected function getConsole_Command_CacheWarmupService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/CacheWarmupCommand.php';

        $this->privates['console.command.cache_warmup'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand(($this->services['cache_warmer'] ?? $this->getCacheWarmerService()));

        $instance->setName('cache:warmup');

        return $instance;
    }

    /*
     * Gets the private 'console.command.config_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand
     */
    protected function getConsole_Command_ConfigDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/ContainerDebugCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/AbstractConfigCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/ConfigDebugCommand.php';

        $this->privates['console.command.config_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand();

        $instance->setName('debug:config');

        return $instance;
    }

    /*
     * Gets the private 'console.command.config_dump_reference' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand
     */
    protected function getConsole_Command_ConfigDumpReferenceService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/ContainerDebugCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/AbstractConfigCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/ConfigDumpReferenceCommand.php';

        $this->privates['console.command.config_dump_reference'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand();

        $instance->setName('config:dump-reference');

        return $instance;
    }

    /*
     * Gets the private 'console.command.container_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand
     */
    protected function getConsole_Command_ContainerDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/ContainerDebugCommand.php';

        $this->privates['console.command.container_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand();

        $instance->setName('debug:container');

        return $instance;
    }

    /*
     * Gets the private 'console.command.container_lint' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand
     */
    protected function getConsole_Command_ContainerLintService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/ContainerLintCommand.php';

        $this->privates['console.command.container_lint'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand();

        $instance->setName('lint:container');

        return $instance;
    }

    /*
     * Gets the private 'console.command.debug_autowiring' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand
     */
    protected function getConsole_Command_DebugAutowiringService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/ContainerDebugCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/DebugAutowiringCommand.php';

        $this->privates['console.command.debug_autowiring'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand(NULL, ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))));

        $instance->setName('debug:autowiring');

        return $instance;
    }

    /*
     * Gets the private 'console.command.event_dispatcher_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand
     */
    protected function getConsole_Command_EventDispatcherDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/EventDispatcherDebugCommand.php';

        $this->privates['console.command.event_dispatcher_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

        $instance->setName('debug:event-dispatcher');

        return $instance;
    }

    /*
     * Gets the private 'console.command.messenger_consume_messages' shared service.
     *
     * @return \Symfony\Component\Messenger\Command\ConsumeMessagesCommand
     */
    protected function getConsole_Command_MessengerConsumeMessagesService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Command/ConsumeMessagesCommand.php';

        $this->privates['console.command.messenger_consume_messages'] = $instance = new \Symfony\Component\Messenger\Command\ConsumeMessagesCommand(($this->privates['messenger.routable_message_bus'] ?? $this->getMessenger_RoutableMessageBusService()), ($this->privates['messenger.receiver_locator'] ?? $this->getMessenger_ReceiverLocatorService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['monolog.logger.messenger'] ?? $this->getMonolog_Logger_MessengerService()), $this->parameters['enqueue.transports']);

        $instance->setName('messenger:consume');
        $instance->setAliases([0 => 'messenger:consume-messages']);

        return $instance;
    }

    /*
     * Gets the private 'console.command.messenger_debug' shared service.
     *
     * @return \Symfony\Component\Messenger\Command\DebugCommand
     */
    protected function getConsole_Command_MessengerDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Command/DebugCommand.php';

        $this->privates['console.command.messenger_debug'] = $instance = new \Symfony\Component\Messenger\Command\DebugCommand(['messenger.bus.shopware' => ['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\MessageQueue\\IndexerMessage' => [0 => [0 => 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\MessageQueue\\IndexerHandler', 1 => []]], 'Shopware\\Core\\Framework\\MessageQueue\\Message\\EncryptedMessage' => [0 => [0 => 'Shopware\\Core\\Framework\\MessageQueue\\Handler\\EncryptedMessageHandler', 1 => []]], 'Shopware\\Core\\Framework\\MessageQueue\\Message\\RetryMessage' => [0 => [0 => 'Shopware\\Core\\Framework\\MessageQueue\\Handler\\RetryMessageHandler', 1 => []]], 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\RequeueDeadMessagesTask' => [0 => [0 => 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\RequeueDeadMessagesHandler', 1 => []]], 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\MessageQueue\\RegisterScheduledTaskMessage' => [0 => [0 => 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\MessageQueue\\RegisterScheduledTaskHandler', 1 => []]], 'Shopware\\Core\\Content\\Media\\Message\\GenerateThumbnailsMessage' => [0 => [0 => 'Shopware\\Core\\Content\\Media\\Message\\GenerateThumbnailsHandler', 1 => []]], 'Shopware\\Core\\Content\\Media\\Message\\UpdateThumbnailsMessage' => [0 => [0 => 'Shopware\\Core\\Content\\Media\\Message\\GenerateThumbnailsHandler', 1 => []]], 'Shopware\\Core\\Content\\Media\\Message\\DeleteFileMessage' => [0 => [0 => 'Shopware\\Core\\Content\\Media\\Message\\DeleteFileHandler', 1 => []]], 'Shopware\\Core\\Content\\Newsletter\\ScheduledTask\\NewsletterRecipientTask' => [0 => [0 => 'Shopware\\Core\\Content\\Newsletter\\ScheduledTask\\NewsletterRecipientTaskHandler', 1 => []]], 'Shopware\\Core\\Content\\ProductExport\\ScheduledTask\\ProductExportGenerateTask' => [0 => [0 => 'Shopware\\Core\\Content\\ProductExport\\ScheduledTask\\ProductExportGenerateTaskHandler', 1 => []]], 'Shopware\\Core\\Content\\ProductExport\\ScheduledTask\\ProductExportPartialGeneration' => [0 => [0 => 'Shopware\\Core\\Content\\ProductExport\\ScheduledTask\\ProductExportPartialGenerationHandler', 1 => []]], 'Shopware\\Core\\Content\\ImportExport\\Message\\DeleteFileMessage' => [0 => [0 => 'Shopware\\Core\\Content\\ImportExport\\Message\\DeleteFileHandler', 1 => []]], 'Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapGenerateTask' => [0 => [0 => 'Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapGenerateTaskHandler', 1 => []]], 'Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapMessage' => [0 => [0 => 'Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapGenerateTaskHandler', 1 => []]], 'Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\WarmUpMessage' => [0 => [0 => 'Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\CacheWarmer', 1 => []]], 'Shopware\\Elasticsearch\\Framework\\Indexing\\IndexingMessage' => [0 => [0 => 'Shopware\\Elasticsearch\\Framework\\Indexing\\IndexingMessageHandler', 1 => []]], 'Shopware\\Elasticsearch\\Framework\\Indexing\\CreateAliasTask' => [0 => [0 => 'Shopware\\Elasticsearch\\Framework\\Indexing\\CreateAliasTaskHandler', 1 => []]]]]);

        $instance->setName('debug:messenger');

        return $instance;
    }

    /*
     * Gets the private 'console.command.messenger_setup_transports' shared service.
     *
     * @return \Symfony\Component\Messenger\Command\SetupTransportsCommand
     */
    protected function getConsole_Command_MessengerSetupTransportsService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Command/SetupTransportsCommand.php';

        $this->privates['console.command.messenger_setup_transports'] = $instance = new \Symfony\Component\Messenger\Command\SetupTransportsCommand(($this->privates['messenger.receiver_locator'] ?? $this->getMessenger_ReceiverLocatorService()), $this->parameters['enqueue.transports']);

        $instance->setName('messenger:setup-transports');

        return $instance;
    }

    /*
     * Gets the private 'console.command.messenger_stop_workers' shared service.
     *
     * @return \Symfony\Component\Messenger\Command\StopWorkersCommand
     */
    protected function getConsole_Command_MessengerStopWorkersService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Command/StopWorkersCommand.php';

        $this->privates['console.command.messenger_stop_workers'] = $instance = new \Symfony\Component\Messenger\Command\StopWorkersCommand(($this->privates['cache.messenger.restart_workers_signal'] ?? $this->getCache_Messenger_RestartWorkersSignalService()));

        $instance->setName('messenger:stop-workers');

        return $instance;
    }

    /*
     * Gets the private 'console.command.router_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand
     */
    protected function getConsole_Command_RouterDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/RouterDebugCommand.php';

        $this->privates['console.command.router_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand(($this->services['router'] ?? $this->getRouterService()), ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))));

        $instance->setName('debug:router');

        return $instance;
    }

    /*
     * Gets the private 'console.command.router_match' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand
     */
    protected function getConsole_Command_RouterMatchService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/RouterMatchCommand.php';

        $this->privates['console.command.router_match'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand(($this->services['router'] ?? $this->getRouterService()));

        $instance->setName('router:match');

        return $instance;
    }

    /*
     * Gets the private 'console.command.secrets_decrypt_to_local' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand
     */
    protected function getConsole_Command_SecretsDecryptToLocalService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/SecretsDecryptToLocalCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_decrypt_to_local'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.local')))));

        $instance->setName('secrets:decrypt-to-local');

        return $instance;
    }

    /*
     * Gets the private 'console.command.secrets_encrypt_from_local' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand
     */
    protected function getConsole_Command_SecretsEncryptFromLocalService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/SecretsEncryptFromLocalCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_encrypt_from_local'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.local')))));

        $instance->setName('secrets:encrypt-from-local');

        return $instance;
    }

    /*
     * Gets the private 'console.command.secrets_generate_key' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand
     */
    protected function getConsole_Command_SecretsGenerateKeyService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/SecretsGenerateKeysCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_generate_key'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.local')))));

        $instance->setName('secrets:generate-keys');

        return $instance;
    }

    /*
     * Gets the private 'console.command.secrets_list' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand
     */
    protected function getConsole_Command_SecretsListService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/SecretsListCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_list'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.local')))));

        $instance->setName('secrets:list');

        return $instance;
    }

    /*
     * Gets the private 'console.command.secrets_remove' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand
     */
    protected function getConsole_Command_SecretsRemoveService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/SecretsRemoveCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_remove'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.local')))));

        $instance->setName('secrets:remove');

        return $instance;
    }

    /*
     * Gets the private 'console.command.secrets_set' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand
     */
    protected function getConsole_Command_SecretsSetService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/SecretsSetCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/AbstractVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/EnvVarLoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/SodiumVault.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Secrets/DotenvVault.php';

        $this->privates['console.command.secrets_set'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand(($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET')))), ($this->privates['secrets.local_vault'] ?? ($this->privates['secrets.local_vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault((\dirname(__DIR__, 4).'/.env.local')))));

        $instance->setName('secrets:set');

        return $instance;
    }

    /*
     * Gets the private 'console.command.translation_debug' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand
     */
    protected function getConsole_Command_TranslationDebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/TranslationDebugCommand.php';

        $this->privates['console.command.translation_debug'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand(($this->services['translator'] ?? $this->getTranslatorService()), ($this->privates['translation.reader'] ?? $this->getTranslation_ReaderService()), ($this->privates['translation.extractor'] ?? $this->getTranslation_ExtractorService()), (\dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/snippet'), (\dirname(__DIR__, 4).'/templates'), [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations')], [0 => (\dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Resources/views/Email'), 1 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportGenerator.php'), 2 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Twig/DocumentTemplateRenderer.php'), 3 => (\dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Csrf/CsrfRouteListener.php'), 4 => (\dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/TranslationDebugCommand.php'), 5 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Util/LegacyTranslatorProxy.php'), 6 => (\dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/TranslationsCacheWarmer.php'), 7 => (\dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/TranslationExtension.php'), 8 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/ScheduledTask/ProductExportPartialGenerationHandler.php')]);

        $instance->setName('debug:translation');

        return $instance;
    }

    /*
     * Gets the private 'console.command.translation_update' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand
     */
    protected function getConsole_Command_TranslationUpdateService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/TranslationUpdateCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Writer/TranslationWriterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Writer/TranslationWriter.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/DumperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/FileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/PhpFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/XliffFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/PoFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/MoFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/YamlFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/QtFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/CsvFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/IniFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/JsonFileDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Dumper/IcuResFileDumper.php';

        $a = new \Symfony\Component\Translation\Writer\TranslationWriter();
        $a->addDumper('php', new \Symfony\Component\Translation\Dumper\PhpFileDumper());
        $a->addDumper('xlf', new \Symfony\Component\Translation\Dumper\XliffFileDumper());
        $a->addDumper('po', new \Symfony\Component\Translation\Dumper\PoFileDumper());
        $a->addDumper('mo', new \Symfony\Component\Translation\Dumper\MoFileDumper());
        $a->addDumper('yml', new \Symfony\Component\Translation\Dumper\YamlFileDumper());
        $a->addDumper('yaml', new \Symfony\Component\Translation\Dumper\YamlFileDumper('yaml'));
        $a->addDumper('ts', new \Symfony\Component\Translation\Dumper\QtFileDumper());
        $a->addDumper('csv', new \Symfony\Component\Translation\Dumper\CsvFileDumper());
        $a->addDumper('ini', new \Symfony\Component\Translation\Dumper\IniFileDumper());
        $a->addDumper('json', new \Symfony\Component\Translation\Dumper\JsonFileDumper());
        $a->addDumper('res', new \Symfony\Component\Translation\Dumper\IcuResFileDumper());

        $this->privates['console.command.translation_update'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand($a, ($this->privates['translation.reader'] ?? $this->getTranslation_ReaderService()), ($this->privates['translation.extractor'] ?? $this->getTranslation_ExtractorService()), 'en-GB', (\dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/snippet'), (\dirname(__DIR__, 4).'/templates'), [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations')], [0 => (\dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Resources/views/Email'), 1 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/Service/ProductExportGenerator.php'), 2 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/Document/Twig/DocumentTemplateRenderer.php'), 3 => (\dirname(__DIR__, 4).'/vendor/shopware/storefront/Framework/Csrf/CsrfRouteListener.php'), 4 => (\dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/TranslationDebugCommand.php'), 5 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Util/LegacyTranslatorProxy.php'), 6 => (\dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/TranslationsCacheWarmer.php'), 7 => (\dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/TranslationExtension.php'), 8 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Content/ProductExport/ScheduledTask/ProductExportPartialGenerationHandler.php')]);

        $instance->setName('translation:update');

        return $instance;
    }

    /*
     * Gets the private 'console.command.xliff_lint' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand
     */
    protected function getConsole_Command_XliffLintService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Command/XliffLintCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/XliffLintCommand.php';

        $this->privates['console.command.xliff_lint'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand();

        $instance->setName('lint:xliff');

        return $instance;
    }

    /*
     * Gets the private 'console.command.yaml_lint' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand
     */
    protected function getConsole_Command_YamlLintService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/yaml/Command/LintCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Command/YamlLintCommand.php';

        $this->privates['console.command.yaml_lint'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand();

        $instance->setName('lint:yaml');

        return $instance;
    }

    /*
     * Gets the private 'console.error_listener' shared service.
     *
     * @return \Symfony\Component\Console\EventListener\ErrorListener
     */
    protected function getConsole_ErrorListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/EventListener/ErrorListener.php';

        $a = new \Symfony\Bridge\Monolog\Logger('console');
        $a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $this->privates['console.error_listener'] = new \Symfony\Component\Console\EventListener\ErrorListener($a);
    }

    /*
     * Gets the private 'container.env_var_processor' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\EnvVarProcessor
     */
    protected function getContainer_EnvVarProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/EnvVarProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/EnvVarProcessor.php';

        return $this->privates['container.env_var_processor'] = new \Symfony\Component\DependencyInjection\EnvVarProcessor($this, new RewindableGenerator(function () {
            yield 0 => ($this->privates['secrets.vault'] ?? ($this->privates['secrets.vault'] = new \Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault((\dirname(__DIR__, 4).'/config/secrets/prod'), $this->getEnv('base64:default::SYMFONY_DECRYPTION_SECRET'))));
        }, 1));
    }

    /*
     * Gets the private 'debug.debug_handlers_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener
     */
    protected function getDebug_DebugHandlersListenerService()
    {
        $a = new \Symfony\Bridge\Monolog\Logger('php');
        $a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $this->privates['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener(NULL, $a, NULL, 0, false, ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))), false);
    }

    /*
     * Gets the private 'enqueue.client.consume_command' shared service.
     *
     * @return \Enqueue\Symfony\Client\ConsumeCommand
     */
    protected function getEnqueue_Client_ConsumeCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Consumption/LimitsExtensionsCommandTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Client/SetupBrokerExtensionCommandTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Consumption/QueueConsumerOptionsCommandTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Consumption/ChooseLoggerCommandTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Client/ConsumeCommand.php';

        $this->privates['enqueue.client.consume_command'] = $instance = new \Enqueue\Symfony\Client\ConsumeCommand(($this->privates['enqueue.locator'] ?? $this->getEnqueue_LocatorService()), 'default', 'enqueue.client.%s.queue_consumer', 'enqueue.client.%s.driver', 'enqueue.client.%s.delegate_processor');

        $instance->setName('enqueue:consume');

        return $instance;
    }

    /*
     * Gets the private 'enqueue.client.default.context' shared service.
     *
     * @return \Interop\Queue\Context
     */
    protected function getEnqueue_Client_Default_ContextService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/queue-interop/queue-interop/src/Context.php';

        return $this->privates['enqueue.client.default.context'] = ($this->privates['enqueue.client.default.driver'] ?? $this->getEnqueue_Client_Default_DriverService())->getContext();
    }

    /*
     * Gets the private 'enqueue.client.default.delegate_processor' shared service.
     *
     * @return \Enqueue\Client\DelegateProcessor
     */
    protected function getEnqueue_Client_Default_DelegateProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/queue-interop/queue-interop/src/Processor.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/DelegateProcessor.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/ProcessorRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/ContainerProcessorRegistry.php';

        return $this->privates['enqueue.client.default.delegate_processor'] = new \Enqueue\Client\DelegateProcessor(new \Enqueue\Symfony\ContainerProcessorRegistry((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'enqueue.client.default.router_processor' => ['privates', 'enqueue.client.default.router_processor', 'getEnqueue_Client_Default_RouterProcessorService', false],
        ], [
            'enqueue.client.default.router_processor' => '?',
        ]))->withContext('enqueue.client.default.processor_registry', $this)));
    }

    /*
     * Gets the private 'enqueue.client.default.driver' shared service.
     *
     * @return \Enqueue\Client\DriverInterface
     */
    protected function getEnqueue_Client_Default_DriverService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/DriverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/Config.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/RouteCollection.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/DriverFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/DriverFactory.php';

        return $this->privates['enqueue.client.default.driver'] = (new \Enqueue\Client\DriverFactory())->create(($this->privates['enqueue.transport.default.connection_factory'] ?? $this->getEnqueue_Transport_Default_ConnectionFactoryService()), new \Enqueue\Client\Config('enqueue', '.', 'app', 'default', 'default', 'default', 'enqueue.client.default.router_processor', ['dsn' => 'null:', 'factory_service' => 'Shopware\\Core\\Framework\\MessageQueue\\Enqueue\\ConnectionFactoryFactory'], []), \Enqueue\Client\RouteCollection::fromArray([]));
    }

    /*
     * Gets the private 'enqueue.client.default.flush_spool_producer_listener' shared service.
     *
     * @return \Enqueue\Symfony\Client\FlushSpoolProducerListener
     */
    protected function getEnqueue_Client_Default_FlushSpoolProducerListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Client/FlushSpoolProducerListener.php';

        return $this->privates['enqueue.client.default.flush_spool_producer_listener'] = new \Enqueue\Symfony\Client\FlushSpoolProducerListener(($this->privates['enqueue.client.default.spool_producer'] ?? $this->getEnqueue_Client_Default_SpoolProducerService()));
    }

    /*
     * Gets the private 'enqueue.client.default.lazy_producer' shared service.
     *
     * @return \Enqueue\Symfony\Client\LazyProducer
     */
    protected function getEnqueue_Client_Default_LazyProducerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/ProducerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Client/LazyProducer.php';

        return $this->privates['enqueue.client.default.lazy_producer'] = new \Enqueue\Symfony\Client\LazyProducer(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'enqueue.client.default.producer' => ['services', 'enqueue.client.default.producer', 'getEnqueue_Client_Default_ProducerService', false],
        ], [
            'enqueue.client.default.producer' => '?',
        ]), 'enqueue.client.default.producer');
    }

    /*
     * Gets the private 'enqueue.client.default.queue_consumer' shared service.
     *
     * @return \Enqueue\Consumption\QueueConsumer
     */
    protected function getEnqueue_Client_Default_QueueConsumerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/QueueConsumerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/QueueConsumer.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/StartExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/PreSubscribeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/PreConsumeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/MessageReceivedExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/PostMessageReceivedExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/MessageResultExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/ProcessorExceptionExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/PostConsumeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/EndExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/InitLoggerExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/ExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/ChainExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/ConsumptionExtension/SetRouterPropertiesExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/ConsumptionExtension/ExclusiveCommandExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/ConsumptionExtension/FlushSpoolProducerExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/Extension/SignalExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/Extension/ReplyExtension.php';

        $a = ($this->privates['enqueue.client.default.driver'] ?? $this->getEnqueue_Client_Default_DriverService());

        return $this->privates['enqueue.client.default.queue_consumer'] = new \Enqueue\Consumption\QueueConsumer(($this->privates['enqueue.client.default.context'] ?? $this->getEnqueue_Client_Default_ContextService()), new \Enqueue\Consumption\ChainExtension([0 => new \Enqueue\Client\ConsumptionExtension\SetRouterPropertiesExtension($a), 1 => new \Enqueue\Client\ConsumptionExtension\ExclusiveCommandExtension($a), 2 => ($this->privates['enqueue.consumption.signal_extension'] ?? ($this->privates['enqueue.consumption.signal_extension'] = new \Enqueue\Consumption\Extension\SignalExtension())), 3 => ($this->privates['enqueue.consumption.reply_extension'] ?? ($this->privates['enqueue.consumption.reply_extension'] = new \Enqueue\Consumption\Extension\ReplyExtension())), 4 => new \Enqueue\Client\ConsumptionExtension\FlushSpoolProducerExtension(($this->privates['enqueue.client.default.spool_producer'] ?? $this->getEnqueue_Client_Default_SpoolProducerService()))]), [], ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), 10000);
    }

    /*
     * Gets the private 'enqueue.client.default.router_processor' shared service.
     *
     * @return \Enqueue\Client\RouterProcessor
     */
    protected function getEnqueue_Client_Default_RouterProcessorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/queue-interop/queue-interop/src/Processor.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/RouterProcessor.php';

        return $this->privates['enqueue.client.default.router_processor'] = new \Enqueue\Client\RouterProcessor(($this->privates['enqueue.client.default.driver'] ?? $this->getEnqueue_Client_Default_DriverService()));
    }

    /*
     * Gets the private 'enqueue.client.default.spool_producer' shared service.
     *
     * @return \Enqueue\Client\SpoolProducer
     */
    protected function getEnqueue_Client_Default_SpoolProducerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/ProducerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Client/SpoolProducer.php';

        return $this->privates['enqueue.client.default.spool_producer'] = new \Enqueue\Client\SpoolProducer(($this->privates['enqueue.client.default.lazy_producer'] ?? $this->getEnqueue_Client_Default_LazyProducerService()));
    }

    /*
     * Gets the private 'enqueue.client.produce_command' shared service.
     *
     * @return \Enqueue\Symfony\Client\ProduceCommand
     */
    protected function getEnqueue_Client_ProduceCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Client/ProduceCommand.php';

        $this->privates['enqueue.client.produce_command'] = $instance = new \Enqueue\Symfony\Client\ProduceCommand(($this->privates['enqueue.locator'] ?? $this->getEnqueue_LocatorService()), 'default', 'enqueue.client.%s.producer');

        $instance->setName('enqueue:produce');

        return $instance;
    }

    /*
     * Gets the private 'enqueue.client.routes_command' shared service.
     *
     * @return \Enqueue\Symfony\Client\RoutesCommand
     */
    protected function getEnqueue_Client_RoutesCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Client/RoutesCommand.php';

        $this->privates['enqueue.client.routes_command'] = $instance = new \Enqueue\Symfony\Client\RoutesCommand(($this->privates['enqueue.locator'] ?? $this->getEnqueue_LocatorService()), 'default', 'enqueue.client.%s.driver');

        $instance->setName('enqueue:routes');

        return $instance;
    }

    /*
     * Gets the private 'enqueue.client.setup_broker_command' shared service.
     *
     * @return \Enqueue\Symfony\Client\SetupBrokerCommand
     */
    protected function getEnqueue_Client_SetupBrokerCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Client/SetupBrokerCommand.php';

        $this->privates['enqueue.client.setup_broker_command'] = $instance = new \Enqueue\Symfony\Client\SetupBrokerCommand(($this->privates['enqueue.locator'] ?? $this->getEnqueue_LocatorService()), 'default', 'enqueue.client.%s.driver');

        $instance->setName('enqueue:setup-broker');

        return $instance;
    }

    /*
     * Gets the private 'enqueue.locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getEnqueue_LocatorService()
    {
        return $this->privates['enqueue.locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'enqueue.client.default.delegate_processor' => ['privates', 'enqueue.client.default.delegate_processor', 'getEnqueue_Client_Default_DelegateProcessorService', false],
            'enqueue.client.default.driver' => ['privates', 'enqueue.client.default.driver', 'getEnqueue_Client_Default_DriverService', false],
            'enqueue.client.default.producer' => ['privates', 'enqueue.client.default.lazy_producer', 'getEnqueue_Client_Default_LazyProducerService', false],
            'enqueue.client.default.queue_consumer' => ['privates', 'enqueue.client.default.queue_consumer', 'getEnqueue_Client_Default_QueueConsumerService', false],
            'enqueue.transport.default.context' => ['privates', 'enqueue.transport.default.context', 'getEnqueue_Transport_Default_ContextService', false],
            'enqueue.transport.default.processor_registry' => ['privates', 'enqueue.transport.default.processor_registry', 'getEnqueue_Transport_Default_ProcessorRegistryService', false],
            'enqueue.transport.default.queue_consumer' => ['privates', 'enqueue.transport.default.queue_consumer', 'getEnqueue_Transport_Default_QueueConsumerService', false],
        ], [
            'enqueue.client.default.delegate_processor' => '?',
            'enqueue.client.default.driver' => '?',
            'enqueue.client.default.producer' => '?',
            'enqueue.client.default.queue_consumer' => '?',
            'enqueue.transport.default.context' => '?',
            'enqueue.transport.default.processor_registry' => '?',
            'enqueue.transport.default.queue_consumer' => '?',
        ]);
    }

    /*
     * Gets the private 'enqueue.messenger_transport.factory' shared service.
     *
     * @return \Enqueue\MessengerAdapter\QueueInteropTransportFactory
     */
    protected function getEnqueue_MessengerTransport_FactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/TransportFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sroze/messenger-enqueue-transport/QueueInteropTransportFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Serialization/SerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Serialization/PhpSerializer.php';

        return $this->privates['enqueue.messenger_transport.factory'] = new \Enqueue\MessengerAdapter\QueueInteropTransportFactory(($this->privates['messenger.transport.native_php_serializer'] ?? ($this->privates['messenger.transport.native_php_serializer'] = new \Symfony\Component\Messenger\Transport\Serialization\PhpSerializer())), ($this->privates['enqueue.locator'] ?? $this->getEnqueue_LocatorService()), false);
    }

    /*
     * Gets the private 'enqueue.transport.consume_command' shared service.
     *
     * @return \Enqueue\Symfony\Consumption\ConfigurableConsumeCommand
     */
    protected function getEnqueue_Transport_ConsumeCommandService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Consumption/LimitsExtensionsCommandTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Consumption/QueueConsumerOptionsCommandTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Consumption/ChooseLoggerCommandTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/Consumption/ConfigurableConsumeCommand.php';

        $this->privates['enqueue.transport.consume_command'] = $instance = new \Enqueue\Symfony\Consumption\ConfigurableConsumeCommand(($this->privates['enqueue.locator'] ?? $this->getEnqueue_LocatorService()), 'default', 'enqueue.transport.%s.queue_consumer', 'enqueue.transport.%s.processor_registry');

        $instance->setName('enqueue:transport:consume');

        return $instance;
    }

    /*
     * Gets the private 'enqueue.transport.default.connection_factory' shared service.
     *
     * @return \Interop\Queue\ConnectionFactory
     */
    protected function getEnqueue_Transport_Default_ConnectionFactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/queue-interop/queue-interop/src/ConnectionFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/ConnectionFactoryFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/MessageQueue/Enqueue/ConnectionFactoryFactory.php';

        return $this->privates['enqueue.transport.default.connection_factory'] = (new \Shopware\Core\Framework\MessageQueue\Enqueue\ConnectionFactoryFactory(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())))->create(['dsn' => 'null:']);
    }

    /*
     * Gets the private 'enqueue.transport.default.context' shared service.
     *
     * @return \Interop\Queue\Context
     */
    protected function getEnqueue_Transport_Default_ContextService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/queue-interop/queue-interop/src/Context.php';

        return $this->privates['enqueue.transport.default.context'] = ($this->privates['enqueue.transport.default.connection_factory'] ?? $this->getEnqueue_Transport_Default_ConnectionFactoryService())->createContext();
    }

    /*
     * Gets the private 'enqueue.transport.default.processor_registry' shared service.
     *
     * @return \Enqueue\Symfony\ContainerProcessorRegistry
     */
    protected function getEnqueue_Transport_Default_ProcessorRegistryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/ProcessorRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Symfony/ContainerProcessorRegistry.php';

        return $this->privates['enqueue.transport.default.processor_registry'] = new \Enqueue\Symfony\ContainerProcessorRegistry(($this->privates['.service_locator.I3K77mT'] ?? ($this->privates['.service_locator.I3K77mT'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], [])))->withContext('enqueue.transport.default.processor_registry', $this));
    }

    /*
     * Gets the private 'enqueue.transport.default.queue_consumer' shared service.
     *
     * @return \Enqueue\Consumption\QueueConsumer
     */
    protected function getEnqueue_Transport_Default_QueueConsumerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/QueueConsumerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/QueueConsumer.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/StartExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/PreSubscribeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/PreConsumeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/MessageReceivedExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/PostMessageReceivedExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/MessageResultExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/ProcessorExceptionExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/PostConsumeExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/EndExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/InitLoggerExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/ExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/ChainExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/Extension/LogExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/Extension/SignalExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/enqueue/enqueue/Consumption/Extension/ReplyExtension.php';

        return $this->privates['enqueue.transport.default.queue_consumer'] = new \Enqueue\Consumption\QueueConsumer(($this->privates['enqueue.transport.default.context'] ?? $this->getEnqueue_Transport_Default_ContextService()), new \Enqueue\Consumption\ChainExtension([0 => ($this->privates['enqueue.consumption.signal_extension'] ?? ($this->privates['enqueue.consumption.signal_extension'] = new \Enqueue\Consumption\Extension\SignalExtension())), 1 => ($this->privates['enqueue.consumption.reply_extension'] ?? ($this->privates['enqueue.consumption.reply_extension'] = new \Enqueue\Consumption\Extension\ReplyExtension())), 2 => new \Enqueue\Consumption\Extension\LogExtension()]), [], ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), 10000);
    }

    /*
     * Gets the private 'esi_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SurrogateListener
     */
    protected function getEsiListenerService()
    {
        return $this->privates['esi_listener'] = new \Symfony\Component\HttpKernel\EventListener\SurrogateListener(($this->privates['esi'] ?? ($this->privates['esi'] = new \Symfony\Component\HttpKernel\HttpCache\Esi())));
    }

    /*
     * Gets the private 'exception_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ErrorListener
     */
    protected function getExceptionListenerService()
    {
        return $this->privates['exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ErrorListener('error_controller', ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()), false);
    }

    /*
     * Gets the private 'fragment.listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\FragmentListener
     */
    protected function getFragment_ListenerService()
    {
        return $this->privates['fragment.listener'] = new \Symfony\Component\HttpKernel\EventListener\FragmentListener(($this->privates['uri_signer'] ?? ($this->privates['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner($this->getEnv('APP_SECRET')))), '/_fragment');
    }

    /*
     * Gets the private 'fragment.renderer.esi' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer
     */
    protected function getFragment_Renderer_EsiService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Fragment/FragmentRendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Fragment/RoutableFragmentRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Fragment/AbstractSurrogateFragmentRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Fragment/EsiFragmentRenderer.php';

        $this->privates['fragment.renderer.esi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer(($this->privates['esi'] ?? ($this->privates['esi'] = new \Symfony\Component\HttpKernel\HttpCache\Esi())), ($this->privates['fragment.renderer.inline'] ?? $this->getFragment_Renderer_InlineService()), ($this->privates['uri_signer'] ?? ($this->privates['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner($this->getEnv('APP_SECRET')))));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /*
     * Gets the private 'fragment.renderer.inline' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer
     */
    protected function getFragment_Renderer_InlineService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Fragment/FragmentRendererInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Fragment/RoutableFragmentRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Fragment/InlineFragmentRenderer.php';

        $this->privates['fragment.renderer.inline'] = $instance = new \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer(($this->services['http_kernel'] ?? $this->getHttpKernelService()), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /*
     * Gets the private 'framework_extra_bundle.event.is_granted' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener
     */
    protected function getFrameworkExtraBundle_Event_IsGrantedService()
    {
        return $this->privates['framework_extra_bundle.event.is_granted'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener(new \Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter(($this->privates['argument_metadata_factory'] ?? ($this->privates['argument_metadata_factory'] = new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory()))), NULL);
    }

    /*
     * Gets the private 'locale_aware_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener
     */
    protected function getLocaleAwareListenerService()
    {
        return $this->privates['locale_aware_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener(new RewindableGenerator(function () {
            yield 0 => ($this->privates['translator.default'] ?? $this->getTranslator_DefaultService());
        }, 1), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /*
     * Gets the private 'locale_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleListener
     */
    protected function getLocaleListenerService()
    {
        return $this->privates['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), 'en-GB', ($this->services['router'] ?? $this->getRouterService()));
    }

    /*
     * Gets the private 'messenger.bus.shopware.middleware.handle_message' shared service.
     *
     * @return \Symfony\Component\Messenger\Middleware\HandleMessageMiddleware
     */
    protected function getMessenger_Bus_Shopware_Middleware_HandleMessageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Middleware/MiddlewareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Middleware/HandleMessageMiddleware.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlersLocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/HandlersLocator.php';

        $this->privates['messenger.bus.shopware.middleware.handle_message'] = $instance = new \Symfony\Component\Messenger\Middleware\HandleMessageMiddleware(new \Symfony\Component\Messenger\Handler\HandlersLocator(['Shopware\\Core\\Framework\\DataAbstractionLayer\\Indexing\\MessageQueue\\IndexerMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.z1zS9WT'] ?? $this->get_Messenger_HandlerDescriptor_Z1zS9WTService());
        }, 1), 'Shopware\\Core\\Framework\\MessageQueue\\Message\\EncryptedMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.W5d8anj'] ?? $this->get_Messenger_HandlerDescriptor_W5d8anjService());
        }, 1), 'Shopware\\Core\\Framework\\MessageQueue\\Message\\RetryMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.rvKU_JQ'] ?? $this->get_Messenger_HandlerDescriptor_RvKUJQService());
        }, 1), 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\RequeueDeadMessagesTask' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.BzkW.st'] ?? $this->get_Messenger_HandlerDescriptor_BzkW_StService());
        }, 1), 'Shopware\\Core\\Framework\\MessageQueue\\ScheduledTask\\MessageQueue\\RegisterScheduledTaskMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.dVP21hY'] ?? $this->get_Messenger_HandlerDescriptor_DVP21hYService());
        }, 1), 'Shopware\\Core\\Content\\Media\\Message\\GenerateThumbnailsMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.6a6vTR.'] ?? $this->get_Messenger_HandlerDescriptor_6a6vTR_Service());
        }, 1), 'Shopware\\Core\\Content\\Media\\Message\\UpdateThumbnailsMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.88lOdtC'] ?? $this->get_Messenger_HandlerDescriptor_88lOdtCService());
        }, 1), 'Shopware\\Core\\Content\\Media\\Message\\DeleteFileMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.TaMu3bd'] ?? $this->get_Messenger_HandlerDescriptor_TaMu3bdService());
        }, 1), 'Shopware\\Core\\Content\\Newsletter\\ScheduledTask\\NewsletterRecipientTask' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.6kBcctU'] ?? $this->get_Messenger_HandlerDescriptor_6kBcctUService());
        }, 1), 'Shopware\\Core\\Content\\ProductExport\\ScheduledTask\\ProductExportGenerateTask' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.wYSIMNj'] ?? $this->get_Messenger_HandlerDescriptor_WYSIMNjService());
        }, 1), 'Shopware\\Core\\Content\\ProductExport\\ScheduledTask\\ProductExportPartialGeneration' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.4htA3jl'] ?? $this->get_Messenger_HandlerDescriptor_4htA3jlService());
        }, 1), 'Shopware\\Core\\Content\\ImportExport\\Message\\DeleteFileMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.3.rzR14'] ?? $this->get_Messenger_HandlerDescriptor_3_RzR14Service());
        }, 1), 'Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapGenerateTask' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.RWDR7vF'] ?? $this->get_Messenger_HandlerDescriptor_RWDR7vFService());
        }, 1), 'Shopware\\Core\\Content\\Sitemap\\ScheduledTask\\SitemapMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.z290ooz'] ?? $this->get_Messenger_HandlerDescriptor_Z290oozService());
        }, 1), 'Shopware\\Storefront\\Framework\\Cache\\CacheWarmer\\WarmUpMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.1SPMxF6'] ?? $this->get_Messenger_HandlerDescriptor_1SPMxF6Service());
        }, 1), 'Shopware\\Elasticsearch\\Framework\\Indexing\\IndexingMessage' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor._GqRtdU'] ?? $this->get_Messenger_HandlerDescriptor_GqRtdUService());
        }, 1), 'Shopware\\Elasticsearch\\Framework\\Indexing\\CreateAliasTask' => new RewindableGenerator(function () {
            yield 0 => ($this->privates['.messenger.handler_descriptor.RaXVyBY'] ?? $this->get_Messenger_HandlerDescriptor_RaXVyBYService());
        }, 1)]));

        $instance->setLogger(($this->privates['monolog.logger.messenger'] ?? $this->getMonolog_Logger_MessengerService()));

        return $instance;
    }

    /*
     * Gets the private 'messenger.listener.stop_worker_on_restart_signal_listener' shared service.
     *
     * @return \Symfony\Component\Messenger\EventListener\StopWorkerOnRestartSignalListener
     */
    protected function getMessenger_Listener_StopWorkerOnRestartSignalListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/EventListener/StopWorkerOnRestartSignalListener.php';

        return $this->privates['messenger.listener.stop_worker_on_restart_signal_listener'] = new \Symfony\Component\Messenger\EventListener\StopWorkerOnRestartSignalListener(($this->privates['cache.messenger.restart_workers_signal'] ?? $this->getCache_Messenger_RestartWorkersSignalService()), ($this->privates['monolog.logger.messenger'] ?? $this->getMonolog_Logger_MessengerService()));
    }

    /*
     * Gets the private 'messenger.middleware.send_message' shared service.
     *
     * @return \Symfony\Component\Messenger\Middleware\SendMessageMiddleware
     */
    protected function getMessenger_Middleware_SendMessageService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Middleware/MiddlewareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Middleware/SendMessageMiddleware.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Sender/SendersLocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Sender/SendersLocator.php';

        $this->privates['messenger.middleware.send_message'] = $instance = new \Symfony\Component\Messenger\Middleware\SendMessageMiddleware(new \Symfony\Component\Messenger\Transport\Sender\SendersLocator(['*' => $this->parameters['enqueue.transports']], ($this->privates['.service_locator.fOeSjcj'] ?? $this->get_ServiceLocator_FOeSjcjService())), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

        $instance->setLogger(($this->privates['monolog.logger.messenger'] ?? $this->getMonolog_Logger_MessengerService()));

        return $instance;
    }

    /*
     * Gets the private 'messenger.receiver_locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getMessenger_ReceiverLocatorService()
    {
        return $this->privates['messenger.receiver_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'default' => ['privates', 'messenger.transport.default', 'getMessenger_Transport_DefaultService', false],
            'messenger.transport.default' => ['privates', 'messenger.transport.default', 'getMessenger_Transport_DefaultService', false],
        ], [
            'default' => '?',
            'messenger.transport.default' => '?',
        ]);
    }

    /*
     * Gets the private 'messenger.retry.multiplier_retry_strategy.default' shared service.
     *
     * @return \Symfony\Component\Messenger\Retry\MultiplierRetryStrategy
     */
    protected function getMessenger_Retry_MultiplierRetryStrategy_DefaultService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Retry/RetryStrategyInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Retry/MultiplierRetryStrategy.php';

        return $this->privates['messenger.retry.multiplier_retry_strategy.default'] = new \Symfony\Component\Messenger\Retry\MultiplierRetryStrategy(3, 1000, 2, 0);
    }

    /*
     * Gets the private 'messenger.retry.send_failed_message_for_retry_listener' shared service.
     *
     * @return \Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener
     */
    protected function getMessenger_Retry_SendFailedMessageForRetryListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/EventListener/SendFailedMessageForRetryListener.php';

        return $this->privates['messenger.retry.send_failed_message_for_retry_listener'] = new \Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener(($this->privates['.service_locator.fOeSjcj'] ?? $this->get_ServiceLocator_FOeSjcjService()), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'default' => ['privates', 'messenger.retry.multiplier_retry_strategy.default', 'getMessenger_Retry_MultiplierRetryStrategy_DefaultService', false],
        ], [
            'default' => '?',
        ]), ($this->privates['monolog.logger.messenger'] ?? $this->getMonolog_Logger_MessengerService()));
    }

    /*
     * Gets the private 'messenger.routable_message_bus' shared service.
     *
     * @return \Symfony\Component\Messenger\RoutableMessageBus
     */
    protected function getMessenger_RoutableMessageBusService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/RoutableMessageBus.php';

        return $this->privates['messenger.routable_message_bus'] = new \Symfony\Component\Messenger\RoutableMessageBus(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'messenger.bus.shopware' => ['services', 'message_bus', 'getMessageBusService', false],
        ], [
            'messenger.bus.shopware' => '?',
        ]), ($this->services['message_bus'] ?? $this->getMessageBusService()));
    }

    /*
     * Gets the private 'messenger.transport.default' shared service.
     *
     * @return \Symfony\Component\Messenger\Transport\TransportInterface
     */
    protected function getMessenger_Transport_DefaultService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Receiver/ReceiverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Sender/SenderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/TransportInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/TransportFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/TransportFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Serialization/SerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Serialization/PhpSerializer.php';

        return $this->privates['messenger.transport.default'] = (new \Symfony\Component\Messenger\Transport\TransportFactory(new RewindableGenerator(function () {
            yield 0 => ($this->privates['messenger.transport.amqp.factory'] ?? ($this->privates['messenger.transport.amqp.factory'] = new \Symfony\Component\Messenger\Transport\AmqpExt\AmqpTransportFactory()));
            yield 1 => ($this->privates['messenger.transport.redis.factory'] ?? ($this->privates['messenger.transport.redis.factory'] = new \Symfony\Component\Messenger\Transport\RedisExt\RedisTransportFactory()));
            yield 2 => ($this->privates['messenger.transport.sync.factory'] ?? $this->getMessenger_Transport_Sync_FactoryService());
            yield 3 => ($this->privates['messenger.transport.in_memory.factory'] ?? ($this->privates['messenger.transport.in_memory.factory'] = new \Symfony\Component\Messenger\Transport\InMemoryTransportFactory()));
            yield 4 => ($this->privates['enqueue.messenger_transport.factory'] ?? $this->getEnqueue_MessengerTransport_FactoryService());
        }, 5)))->createTransport('enqueue://default', ['receiveTimeout' => 1000, 'transport_name' => 'default'], ($this->privates['messenger.transport.native_php_serializer'] ?? ($this->privates['messenger.transport.native_php_serializer'] = new \Symfony\Component\Messenger\Transport\Serialization\PhpSerializer())));
    }

    /*
     * Gets the private 'messenger.transport.sync.factory' shared service.
     *
     * @return \Symfony\Component\Messenger\Transport\Sync\SyncTransportFactory
     */
    protected function getMessenger_Transport_Sync_FactoryService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/TransportFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Sync/SyncTransportFactory.php';

        return $this->privates['messenger.transport.sync.factory'] = new \Symfony\Component\Messenger\Transport\Sync\SyncTransportFactory(($this->privates['messenger.routable_message_bus'] ?? $this->getMessenger_RoutableMessageBusService()));
    }

    /*
     * Gets the private 'mime_types' shared service.
     *
     * @return \Symfony\Component\Mime\MimeTypes
     */
    protected function getMimeTypesService()
    {
        $this->privates['mime_types'] = $instance = new \Symfony\Component\Mime\MimeTypes();

        $instance->setDefault($instance);

        return $instance;
    }

    /*
     * Gets the private 'monolog.handler.business_event_handler_buffer' shared service.
     *
     * @return \Monolog\Handler\BufferHandler
     */
    protected function getMonolog_Handler_BusinessEventHandlerBufferService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Log/Monolog/DoctrineSQLHandler.php';

        return $this->privates['monolog.handler.business_event_handler_buffer'] = new \Monolog\Handler\BufferHandler(new \Shopware\Core\Framework\Log\Monolog\DoctrineSQLHandler(($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService())), 0, 100, true, false);
    }

    /*
     * Gets the private 'monolog.handler.console' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\ConsoleHandler
     */
    protected function getMonolog_Handler_ConsoleService()
    {
        return $this->privates['monolog.handler.console'] = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, true, [], []);
    }

    /*
     * Gets the private 'monolog.handler.main' shared service.
     *
     * @return \Monolog\Handler\FingersCrossedHandler
     */
    protected function getMonolog_Handler_MainService()
    {
        $a = new \Monolog\Handler\RotatingFileHandler((\dirname(__DIR__, 3).'/log/prod.log'), 0, 400, true, NULL);
        $a->pushProcessor(new \Monolog\Processor\PsrLogMessageProcessor());
        $a->setFilenameFormat('{filename}-{date}', 'Y-m-d');

        return $this->privates['monolog.handler.main'] = new \Monolog\Handler\FingersCrossedHandler($a, 400, 0, true, true, NULL);
    }

    /*
     * Gets the private 'monolog.logger' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_LoggerService()
    {
        $this->privates['monolog.logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');

        $instance->useMicrosecondTimestamps(true);
        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /*
     * Gets the private 'monolog.logger.cache' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_CacheService()
    {
        $this->privates['monolog.logger.cache'] = $instance = new \Symfony\Bridge\Monolog\Logger('cache');

        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /*
     * Gets the private 'monolog.logger.messenger' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_MessengerService()
    {
        $this->privates['monolog.logger.messenger'] = $instance = new \Symfony\Bridge\Monolog\Logger('messenger');

        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /*
     * Gets the private 'monolog.logger.request' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_RequestService()
    {
        $this->privates['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');

        $instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        return $instance;
    }

    /*
     * Gets the private 'property_info.serializer_extractor' shared service.
     *
     * @return \Symfony\Component\PropertyInfo\Extractor\SerializerExtractor
     */
    protected function getPropertyInfo_SerializerExtractorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/property-info/Extractor/SerializerExtractor.php';

        return $this->privates['property_info.serializer_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\SerializerExtractor(($this->privates['serializer.mapping.cache_class_metadata_factory'] ?? $this->getSerializer_Mapping_CacheClassMetadataFactoryService()));
    }

    /*
     * Gets the private 'router.cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer
     */
    protected function getRouter_CacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/RouterCacheWarmer.php';

        return $this->privates['router.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'router' => '?',
        ]))->withContext('router.cache_warmer', $this));
    }

    /*
     * Gets the private 'router.default' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\Router
     */
    protected function getRouter_DefaultService()
    {
        $a = new \Symfony\Bridge\Monolog\Logger('router');
        $a->pushHandler(($this->privates['monolog.handler.console'] ?? $this->getMonolog_Handler_ConsoleService()));
        $a->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));

        $this->privates['router.default'] = $instance = new \Symfony\Bundle\FrameworkBundle\Routing\Router((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'routing.loader' => ['services', 'routing.loader', 'getRouting_LoaderService', false],
        ], [
            'routing.loader' => 'Symfony\\Component\\Config\\Loader\\LoaderInterface',
        ]))->withContext('router.default', $this), 'kernel::loadRoutes', ['cache_dir' => $this->targetDir.'', 'debug' => false, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\CompiledUrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\CompiledUrlGeneratorDumper', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableCompiledUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\CompiledUrlMatcherDumper', 'strict_requirements' => NULL, 'resource_type' => 'service'], ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['parameter_bag'] ?? ($this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this))), $a, 'en-GB');

        $instance->setConfigCacheFactory(($this->privates['config_cache_factory'] ?? ($this->privates['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory())));

        return $instance;
    }

    /*
     * Gets the private 'router.request_context' shared service.
     *
     * @return \Symfony\Component\Routing\RequestContext
     */
    protected function getRouter_RequestContextService()
    {
        return $this->privates['router.request_context'] = new \Symfony\Component\Routing\RequestContext('', 'GET', 'localhost', 'http', 80, 443);
    }

    /*
     * Gets the private 'router_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\RouterListener
     */
    protected function getRouterListenerService()
    {
        return $this->privates['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener(($this->services['router'] ?? $this->getRouterService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()), \dirname(__DIR__, 4), false);
    }

    /*
     * Gets the private 'sensio_framework_extra.controller.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener
     */
    protected function getSensioFrameworkExtra_Controller_ListenerService()
    {
        return $this->privates['sensio_framework_extra.controller.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
    }

    /*
     * Gets the private 'sensio_framework_extra.converter.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener
     */
    protected function getSensioFrameworkExtra_Converter_ListenerService()
    {
        $a = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager();
        $a->add(new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter(NULL, NULL), 0, 'doctrine.orm');
        $a->add(new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter(), 0, 'datetime');

        return $this->privates['sensio_framework_extra.converter.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener($a, true);
    }

    /*
     * Gets the private 'sensio_framework_extra.psr7.argument_value_resolver.server_request' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentValueResolver\Psr7ServerRequestResolver
     */
    protected function getSensioFrameworkExtra_Psr7_ArgumentValueResolver_ServerRequestService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Controller/ArgumentValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/Request/ArgumentValueResolver/Psr7ServerRequestResolver.php';

        $a = new \Nyholm\Psr7\Factory\Psr17Factory();

        return $this->privates['sensio_framework_extra.psr7.argument_value_resolver.server_request'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentValueResolver\Psr7ServerRequestResolver(new \Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory($a, $a, $a, $a));
    }

    /*
     * Gets the private 'sensio_framework_extra.psr7.listener.response' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\PsrResponseListener
     */
    protected function getSensioFrameworkExtra_Psr7_Listener_ResponseService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/EventListener/PsrResponseListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/psr-http-message-bridge/HttpFoundationFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/psr-http-message-bridge/Factory/HttpFoundationFactory.php';

        return $this->privates['sensio_framework_extra.psr7.listener.response'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\PsrResponseListener(new \Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory());
    }

    /*
     * Gets the private 'sensio_framework_extra.view.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener
     */
    protected function getSensioFrameworkExtra_View_ListenerService()
    {
        return $this->privates['sensio_framework_extra.view.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener(new \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser(($this->services['kernel'] ?? $this->get('kernel', 1))), ($this->services['twig'] ?? $this->getTwigService()));
    }

    /*
     * Gets the private 'serializer.mapping.cache_class_metadata_factory' shared service.
     *
     * @return \Symfony\Component\Serializer\Mapping\Factory\CacheClassMetadataFactory
     */
    protected function getSerializer_Mapping_CacheClassMetadataFactoryService()
    {
        return $this->privates['serializer.mapping.cache_class_metadata_factory'] = new \Symfony\Component\Serializer\Mapping\Factory\CacheClassMetadataFactory(new \Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory(new \Symfony\Component\Serializer\Mapping\Loader\LoaderChain([0 => new \Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()))]), NULL), \Symfony\Component\Cache\Adapter\PhpArrayAdapter::create(($this->targetDir.''.'/serialization.php'), ($this->privates['cache.serializer'] ?? $this->getCache_SerializerService())));
    }

    /*
     * Gets the private 'serializer.mapping.cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer
     */
    protected function getSerializer_Mapping_CacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/AbstractPhpFileCacheWarmer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/SerializerCacheWarmer.php';

        return $this->privates['serializer.mapping.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer([0 => new \Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()))], ($this->targetDir.''.'/serialization.php'));
    }

    /*
     * Gets the private 'session_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SessionListener
     */
    protected function getSessionListenerService()
    {
        return $this->privates['session_listener'] = new \Symfony\Component\HttpKernel\EventListener\SessionListener(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'initialized_session' => ['services', 'session', NULL, false],
            'session' => ['services', 'session', 'getSessionService', false],
        ], [
            'initialized_session' => '?',
            'session' => '?',
        ]));
    }

    /*
     * Gets the private 'shopware.api.authorization_server' shared service.
     *
     * @return \League\OAuth2\Server\AuthorizationServer
     */
    protected function getShopware_Api_AuthorizationServerService()
    {
        $a = ($this->services['Doctrine\\DBAL\\Connection'] ?? $this->getConnectionService());

        return $this->privates['shopware.api.authorization_server'] = new \League\OAuth2\Server\AuthorizationServer(new \Shopware\Core\Framework\Api\OAuth\ClientRepository($a), ($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\AccessTokenRepository'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\AccessTokenRepository'] = new \Shopware\Core\Framework\Api\OAuth\AccessTokenRepository())), new \Shopware\Core\Framework\Api\OAuth\ScopeRepository(new RewindableGenerator(function () {
            yield 0 => ($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\Scope\\WriteScope'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\Scope\\WriteScope'] = new \Shopware\Core\Framework\Api\OAuth\Scope\WriteScope()));
            yield 1 => ($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\Scope\\AdminScope'] ?? ($this->privates['Shopware\\Core\\Framework\\Api\\OAuth\\Scope\\AdminScope'] = new \Shopware\Core\Framework\Api\OAuth\Scope\AdminScope()));
        }, 2), $a), ($this->privates['shopware.private_key'] ?? ($this->privates['shopware.private_key'] = new \League\OAuth2\Server\CryptKey((\dirname(__DIR__, 4).'/config/jwt/private.pem'), $this->getEnv('string:default:jwt_private_key_passphrase_default:JWT_PRIVATE_KEY_PASSPHRASE')))), $this->getEnv('APP_SECRET'));
    }

    /*
     * Gets the private 'shopware.filesystem.private' shared service.
     *
     * @return \League\Flysystem\FilesystemInterface
     */
    protected function getShopware_Filesystem_PrivateService()
    {
        return $this->privates['shopware.filesystem.private'] = ($this->privates['Shopware\\Core\\Framework\\Adapter\\Filesystem\\FilesystemFactory'] ?? $this->getFilesystemFactoryService())->factory($this->parameters['shopware.filesystem.private']);
    }

    /*
     * Gets the private 'shopware.filesystem.public' shared service.
     *
     * @return \League\Flysystem\FilesystemInterface
     */
    protected function getShopware_Filesystem_PublicService()
    {
        return $this->privates['shopware.filesystem.public'] = ($this->privates['Shopware\\Core\\Framework\\Adapter\\Filesystem\\FilesystemFactory'] ?? $this->getFilesystemFactoryService())->factory($this->parameters['shopware.filesystem.public']);
    }

    /*
     * Gets the private 'slugify' shared service.
     *
     * @return \Cocur\Slugify\Slugify
     */
    protected function getSlugifyService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/cocur/slugify/src/SlugifyInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/cocur/slugify/src/Slugify.php';

        return $this->privates['slugify'] = new \Cocur\Slugify\Slugify($this->parameters['shopware.slug.config']);
    }

    /*
     * Gets the private 'swiftmailer.command.debug' shared service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand
     */
    protected function getSwiftmailer_Command_DebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/AbstractSwiftMailerCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/DebugCommand.php';

        $this->privates['swiftmailer.command.debug'] = $instance = new \Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand();

        $instance->setName('debug:swiftmailer');

        return $instance;
    }

    /*
     * Gets the private 'swiftmailer.command.new_email' shared service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand
     */
    protected function getSwiftmailer_Command_NewEmailService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/AbstractSwiftMailerCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/NewEmailCommand.php';

        $this->privates['swiftmailer.command.new_email'] = $instance = new \Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand();

        $instance->setName('swiftmailer:email:send');

        return $instance;
    }

    /*
     * Gets the private 'swiftmailer.command.send_email' shared service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand
     */
    protected function getSwiftmailer_Command_SendEmailService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/AbstractSwiftMailerCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Command/SendEmailCommand.php';

        $this->privates['swiftmailer.command.send_email'] = $instance = new \Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand();

        $instance->setName('swiftmailer:spool:send');

        return $instance;
    }

    /*
     * Gets the private 'swiftmailer.email_sender.listener' shared service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener
     */
    protected function getSwiftmailer_EmailSender_ListenerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/EventListener/EmailSenderListener.php';

        return $this->privates['swiftmailer.email_sender.listener'] = new \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener($this, ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /*
     * Gets the private 'translation.extractor' shared service.
     *
     * @return \Symfony\Component\Translation\Extractor\ChainExtractor
     */
    protected function getTranslation_ExtractorService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Extractor/ExtractorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Extractor/ChainExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Extractor/AbstractFileExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Extractor/PhpExtractor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Translation/TwigExtractor.php';

        $this->privates['translation.extractor'] = $instance = new \Symfony\Component\Translation\Extractor\ChainExtractor();

        $instance->addExtractor('php', new \Symfony\Component\Translation\Extractor\PhpExtractor());
        $instance->addExtractor('twig', new \Symfony\Bridge\Twig\Translation\TwigExtractor(($this->services['twig'] ?? $this->getTwigService())));

        return $instance;
    }

    /*
     * Gets the private 'translation.loader.csv' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\CsvFileLoader
     */
    protected function getTranslation_Loader_CsvService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/CsvFileLoader.php';

        return $this->privates['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader();
    }

    /*
     * Gets the private 'translation.loader.dat' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuDatFileLoader
     */
    protected function getTranslation_Loader_DatService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IcuResFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IcuDatFileLoader.php';

        return $this->privates['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader();
    }

    /*
     * Gets the private 'translation.loader.ini' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\IniFileLoader
     */
    protected function getTranslation_Loader_IniService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IniFileLoader.php';

        return $this->privates['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader();
    }

    /*
     * Gets the private 'translation.loader.json' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\JsonFileLoader
     */
    protected function getTranslation_Loader_JsonService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/JsonFileLoader.php';

        return $this->privates['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader();
    }

    /*
     * Gets the private 'translation.loader.mo' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\MoFileLoader
     */
    protected function getTranslation_Loader_MoService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/MoFileLoader.php';

        return $this->privates['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader();
    }

    /*
     * Gets the private 'translation.loader.php' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\PhpFileLoader
     */
    protected function getTranslation_Loader_PhpService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/PhpFileLoader.php';

        return $this->privates['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader();
    }

    /*
     * Gets the private 'translation.loader.po' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\PoFileLoader
     */
    protected function getTranslation_Loader_PoService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/PoFileLoader.php';

        return $this->privates['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader();
    }

    /*
     * Gets the private 'translation.loader.qt' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\QtFileLoader
     */
    protected function getTranslation_Loader_QtService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/QtFileLoader.php';

        return $this->privates['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader();
    }

    /*
     * Gets the private 'translation.loader.res' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuResFileLoader
     */
    protected function getTranslation_Loader_ResService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IcuResFileLoader.php';

        return $this->privates['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader();
    }

    /*
     * Gets the private 'translation.loader.xliff' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\XliffFileLoader
     */
    protected function getTranslation_Loader_XliffService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/XliffFileLoader.php';

        return $this->privates['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader();
    }

    /*
     * Gets the private 'translation.loader.yml' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\YamlFileLoader
     */
    protected function getTranslation_Loader_YmlService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/YamlFileLoader.php';

        return $this->privates['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader();
    }

    /*
     * Gets the private 'translation.reader' shared service.
     *
     * @return \Symfony\Component\Translation\Reader\TranslationReader
     */
    protected function getTranslation_ReaderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Reader/TranslationReaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Reader/TranslationReader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/PhpFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/YamlFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/XliffFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/PoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/MoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/QtFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/CsvFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IcuResFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IcuDatFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IniFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/JsonFileLoader.php';

        $this->privates['translation.reader'] = $instance = new \Symfony\Component\Translation\Reader\TranslationReader();

        $a = ($this->privates['translation.loader.yml'] ?? ($this->privates['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader()));
        $b = ($this->privates['translation.loader.xliff'] ?? ($this->privates['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader()));

        $instance->addLoader('php', ($this->privates['translation.loader.php'] ?? ($this->privates['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader())));
        $instance->addLoader('yaml', $a);
        $instance->addLoader('yml', $a);
        $instance->addLoader('xlf', $b);
        $instance->addLoader('xliff', $b);
        $instance->addLoader('po', ($this->privates['translation.loader.po'] ?? ($this->privates['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader())));
        $instance->addLoader('mo', ($this->privates['translation.loader.mo'] ?? ($this->privates['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader())));
        $instance->addLoader('ts', ($this->privates['translation.loader.qt'] ?? ($this->privates['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader())));
        $instance->addLoader('csv', ($this->privates['translation.loader.csv'] ?? ($this->privates['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader())));
        $instance->addLoader('res', ($this->privates['translation.loader.res'] ?? ($this->privates['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader())));
        $instance->addLoader('dat', ($this->privates['translation.loader.dat'] ?? ($this->privates['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader())));
        $instance->addLoader('ini', ($this->privates['translation.loader.ini'] ?? ($this->privates['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader())));
        $instance->addLoader('json', ($this->privates['translation.loader.json'] ?? ($this->privates['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader())));

        return $instance;
    }

    /*
     * Gets the private 'translation.warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer
     */
    protected function getTranslation_WarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/TranslationsCacheWarmer.php';

        return $this->privates['translation.warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'translator' => ['services', 'translator', 'getTranslatorService', false],
        ], [
            'translator' => '?',
        ]))->withContext('translation.warmer', $this));
    }

    /*
     * Gets the private 'translator.default' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\Translator
     */
    protected function getTranslator_DefaultService()
    {
        $this->privates['translator.default'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\Translator(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'translation.loader.csv' => ['privates', 'translation.loader.csv', 'getTranslation_Loader_CsvService', false],
            'translation.loader.dat' => ['privates', 'translation.loader.dat', 'getTranslation_Loader_DatService', false],
            'translation.loader.ini' => ['privates', 'translation.loader.ini', 'getTranslation_Loader_IniService', false],
            'translation.loader.json' => ['privates', 'translation.loader.json', 'getTranslation_Loader_JsonService', false],
            'translation.loader.mo' => ['privates', 'translation.loader.mo', 'getTranslation_Loader_MoService', false],
            'translation.loader.php' => ['privates', 'translation.loader.php', 'getTranslation_Loader_PhpService', false],
            'translation.loader.po' => ['privates', 'translation.loader.po', 'getTranslation_Loader_PoService', false],
            'translation.loader.qt' => ['privates', 'translation.loader.qt', 'getTranslation_Loader_QtService', false],
            'translation.loader.res' => ['privates', 'translation.loader.res', 'getTranslation_Loader_ResService', false],
            'translation.loader.xliff' => ['privates', 'translation.loader.xliff', 'getTranslation_Loader_XliffService', false],
            'translation.loader.yml' => ['privates', 'translation.loader.yml', 'getTranslation_Loader_YmlService', false],
        ], [
            'translation.loader.csv' => '?',
            'translation.loader.dat' => '?',
            'translation.loader.ini' => '?',
            'translation.loader.json' => '?',
            'translation.loader.mo' => '?',
            'translation.loader.php' => '?',
            'translation.loader.po' => '?',
            'translation.loader.qt' => '?',
            'translation.loader.res' => '?',
            'translation.loader.xliff' => '?',
            'translation.loader.yml' => '?',
        ]), ($this->privates['translator.formatter.default'] ?? $this->getTranslator_Formatter_DefaultService()), 'en-GB', ['translation.loader.php' => [0 => 'php'], 'translation.loader.yml' => [0 => 'yaml', 1 => 'yml'], 'translation.loader.xliff' => [0 => 'xlf', 1 => 'xliff'], 'translation.loader.po' => [0 => 'po'], 'translation.loader.mo' => [0 => 'mo'], 'translation.loader.qt' => [0 => 'ts'], 'translation.loader.csv' => [0 => 'csv'], 'translation.loader.res' => [0 => 'res'], 'translation.loader.dat' => [0 => 'dat'], 'translation.loader.ini' => [0 => 'ini'], 'translation.loader.json' => [0 => 'json']], ['cache_dir' => ($this->targetDir.''.'/translations'), 'debug' => false, 'resource_files' => ['af' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.af.xlf')], 'ar' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.ar.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.ar.xlf')], 'az' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.az.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.az.xlf')], 'be' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.be.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.be.xlf')], 'bg' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.bg.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.bg.xlf')], 'ca' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.ca.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.ca.xlf')], 'cs' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.cs.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.cs.xlf')], 'cy' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.cy.xlf')], 'da' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.da.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.da.xlf')], 'de' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.de.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.de.xlf')], 'el' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.el.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.el.xlf')], 'en' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.en.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.en.xlf')], 'es' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.es.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.es.xlf')], 'et' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.et.xlf')], 'eu' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.eu.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.eu.xlf')], 'fa' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.fa.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.fa.xlf')], 'fi' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.fi.xlf')], 'fr' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.fr.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.fr.xlf')], 'gl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.gl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.gl.xlf')], 'he' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.he.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.he.xlf')], 'hr' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.hr.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.hr.xlf')], 'hu' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.hu.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.hu.xlf')], 'hy' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.hy.xlf')], 'id' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.id.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.id.xlf')], 'it' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.it.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.it.xlf')], 'ja' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.ja.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.ja.xlf')], 'lb' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.lb.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.lb.xlf')], 'lt' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.lt.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.lt.xlf')], 'lv' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.lv.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.lv.xlf')], 'mn' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.mn.xlf')], 'nb' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.nb.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.nb.xlf')], 'nl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.nl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.nl.xlf')], 'nn' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.nn.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.nn.xlf')], 'no' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.no.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.no.xlf')], 'pl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.pl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.pl.xlf')], 'pt' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.pt.xlf')], 'pt_BR' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf')], 'ro' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.ro.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.ro.xlf')], 'ru' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.ru.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.ru.xlf')], 'sk' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.sk.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.sk.xlf')], 'sl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.sl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.sl.xlf')], 'sq' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.sq.xlf')], 'sr_Cyrl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf')], 'sr_Latn' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf')], 'sv' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.sv.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.sv.xlf')], 'th' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.th.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.th.xlf')], 'tl' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.tl.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.tl.xlf')], 'tr' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.tr.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.tr.xlf')], 'uk' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.uk.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.uk.xlf')], 'vi' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.vi.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.vi.xlf')], 'zh_CN' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf')], 'zh_TW' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf')], 'pt_PT' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations/security.pt_PT.xlf')], 'de-DE' => [0 => (\dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/snippet/de_DE/storefront.de-DE.json')], 'en-GB' => [0 => (\dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/snippet/en_GB/storefront.en-GB.json')]], 'scanned_directories' => [0 => (\dirname(__DIR__, 4).'/vendor/symfony/validator/Resources/translations'), 1 => (\dirname(__DIR__, 4).'/vendor/symfony/security-core/Resources/translations'), 2 => (\dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/snippet'), 3 => (\dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/translations'), 4 => (\dirname(__DIR__, 4).'/src/Resources/FrameworkBundle/translations'), 5 => (\dirname(__DIR__, 4).'/vendor/symfony/monolog-bundle/translations'), 6 => (\dirname(__DIR__, 4).'/src/Resources/MonologBundle/translations'), 7 => (\dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/translations'), 8 => (\dirname(__DIR__, 4).'/src/Resources/SwiftmailerBundle/translations'), 9 => (\dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src/translations'), 10 => (\dirname(__DIR__, 4).'/src/Resources/SensioFrameworkExtraBundle/translations'), 11 => (\dirname(__DIR__, 4).'/vendor/symfony/twig-bundle/translations'), 12 => (\dirname(__DIR__, 4).'/src/Resources/TwigBundle/translations'), 13 => (\dirname(__DIR__, 4).'/vendor/enqueue/enqueue-bundle/translations'), 14 => (\dirname(__DIR__, 4).'/src/Resources/EnqueueBundle/translations'), 15 => (\dirname(__DIR__, 4).'/vendor/sroze/messenger-enqueue-transport/Bundle/translations'), 16 => (\dirname(__DIR__, 4).'/src/Resources/EnqueueAdapterBundle/translations'), 17 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Framework/translations'), 18 => (\dirname(__DIR__, 4).'/src/Resources/Framework/translations'), 19 => (\dirname(__DIR__, 4).'/vendor/shopware/core/System/translations'), 20 => (\dirname(__DIR__, 4).'/src/Resources/System/translations'), 21 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Content/translations'), 22 => (\dirname(__DIR__, 4).'/src/Resources/Content/translations'), 23 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Checkout/translations'), 24 => (\dirname(__DIR__, 4).'/src/Resources/Checkout/translations'), 25 => (\dirname(__DIR__, 4).'/vendor/shopware/administration/translations'), 26 => (\dirname(__DIR__, 4).'/src/Resources/Administration/translations'), 27 => (\dirname(__DIR__, 4).'/vendor/shopware/storefront/translations'), 28 => (\dirname(__DIR__, 4).'/src/Resources/Storefront/translations'), 29 => (\dirname(__DIR__, 4).'/vendor/shopware/elasticsearch/translations'), 30 => (\dirname(__DIR__, 4).'/src/Resources/Elasticsearch/translations'), 31 => (\dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/KernelPluginLoader/translations'), 32 => (\dirname(__DIR__, 4).'/src/Resources/DbalKernelPluginLoader/translations'), 33 => (\dirname(__DIR__, 4).'/src/Resources/translations')], 'cache_vary' => ['scanned_directories' => [0 => 'vendor/symfony/validator/Resources/translations', 1 => 'vendor/symfony/security-core/Resources/translations', 2 => 'vendor/shopware/storefront/Resources/snippet', 3 => 'vendor/symfony/framework-bundle/translations', 4 => 'src/Resources/FrameworkBundle/translations', 5 => 'vendor/symfony/monolog-bundle/translations', 6 => 'src/Resources/MonologBundle/translations', 7 => 'vendor/symfony/swiftmailer-bundle/translations', 8 => 'src/Resources/SwiftmailerBundle/translations', 9 => 'vendor/sensio/framework-extra-bundle/src/translations', 10 => 'src/Resources/SensioFrameworkExtraBundle/translations', 11 => 'vendor/symfony/twig-bundle/translations', 12 => 'src/Resources/TwigBundle/translations', 13 => 'vendor/enqueue/enqueue-bundle/translations', 14 => 'src/Resources/EnqueueBundle/translations', 15 => 'vendor/sroze/messenger-enqueue-transport/Bundle/translations', 16 => 'src/Resources/EnqueueAdapterBundle/translations', 17 => 'vendor/shopware/core/Framework/translations', 18 => 'src/Resources/Framework/translations', 19 => 'vendor/shopware/core/System/translations', 20 => 'src/Resources/System/translations', 21 => 'vendor/shopware/core/Content/translations', 22 => 'src/Resources/Content/translations', 23 => 'vendor/shopware/core/Checkout/translations', 24 => 'src/Resources/Checkout/translations', 25 => 'vendor/shopware/administration/translations', 26 => 'src/Resources/Administration/translations', 27 => 'vendor/shopware/storefront/translations', 28 => 'src/Resources/Storefront/translations', 29 => 'vendor/shopware/elasticsearch/translations', 30 => 'src/Resources/Elasticsearch/translations', 31 => 'vendor/shopware/core/Framework/Plugin/KernelPluginLoader/translations', 32 => 'src/Resources/DbalKernelPluginLoader/translations', 33 => 'src/Resources/translations']]]);

        $instance->setConfigCacheFactory(($this->privates['config_cache_factory'] ?? ($this->privates['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory())));
        $instance->setFallbackLocales([0 => 'en_GB', 1 => 'en']);

        return $instance;
    }

    /*
     * Gets the private 'translator.formatter.default' shared service.
     *
     * @return \Symfony\Component\Translation\Formatter\MessageFormatter
     */
    protected function getTranslator_Formatter_DefaultService()
    {
        return $this->privates['translator.formatter.default'] = new \Symfony\Component\Translation\Formatter\MessageFormatter(new \Symfony\Component\Translation\IdentityTranslator());
    }

    /*
     * Gets the private 'twig.command.debug' shared service.
     *
     * @return \Symfony\Bridge\Twig\Command\DebugCommand
     */
    protected function getTwig_Command_DebugService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Command/DebugCommand.php';

        $this->privates['twig.command.debug'] = $instance = new \Symfony\Bridge\Twig\Command\DebugCommand(($this->services['twig'] ?? $this->getTwigService()), \dirname(__DIR__, 4), $this->parameters['kernel.bundles_metadata'], (\dirname(__DIR__, 4).'/templates'), ($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))), (\dirname(__DIR__, 4).'/src'));

        $instance->setName('debug:twig');

        return $instance;
    }

    /*
     * Gets the private 'twig.command.lint' shared service.
     *
     * @return \Symfony\Bundle\TwigBundle\Command\LintCommand
     */
    protected function getTwig_Command_LintService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Command/LintCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bundle/Command/LintCommand.php';

        $this->privates['twig.command.lint'] = $instance = new \Symfony\Bundle\TwigBundle\Command\LintCommand(($this->services['twig'] ?? $this->getTwigService()));

        $instance->setName('lint:twig');

        return $instance;
    }

    /*
     * Gets the private 'twig.loader.native_filesystem' shared service.
     *
     * @return \Twig\Loader\FilesystemLoader
     */
    protected function getTwig_Loader_NativeFilesystemService()
    {
        $this->privates['twig.loader.native_filesystem'] = $instance = new \Twig\Loader\FilesystemLoader([], \dirname(__DIR__, 4));

        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Resources/views'), 'Framework');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Resources/views'), '!Framework');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Resources/views'), 'Swiftmailer');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle/Resources/views'), '!Swiftmailer');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/twig-bundle/Resources/views'), 'Twig');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/twig-bundle/Resources/views'), '!Twig');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/enqueue/enqueue-bundle/Resources/views'), 'Enqueue');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/enqueue/enqueue-bundle/Resources/views'), '!Enqueue');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Resources/views'), 'Framework');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Resources/views'), '!Framework');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/shopware/administration/Resources/views'), 'Administration');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/shopware/administration/Resources/views'), '!Administration');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/views'), 'Storefront');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/views'), '!Storefront');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Resources/views/Email'), 'email');
        $instance->addPath((\dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Resources/views/Email'), '!email');

        return $instance;
    }

    /*
     * Gets the private 'twig.runtime.httpkernel' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\HttpKernelRuntime
     */
    protected function getTwig_Runtime_HttpkernelService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/HttpKernelRuntime.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Fragment/FragmentHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/DependencyInjection/LazyLoadingFragmentHandler.php';

        return $this->privates['twig.runtime.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelRuntime(new \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'esi' => ['privates', 'fragment.renderer.esi', 'getFragment_Renderer_EsiService', false],
            'inline' => ['privates', 'fragment.renderer.inline', 'getFragment_Renderer_InlineService', false],
        ], [
            'esi' => '?',
            'inline' => '?',
        ]), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), false));
    }

    /*
     * Gets the private 'twig.runtime.security_csrf' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\CsrfRuntime
     */
    protected function getTwig_Runtime_SecurityCsrfService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/twig-bridge/Extension/CsrfRuntime.php';

        return $this->privates['twig.runtime.security_csrf'] = new \Symfony\Bridge\Twig\Extension\CsrfRuntime(($this->services['security.csrf.token_manager'] ?? $this->getSecurity_Csrf_TokenManagerService()));
    }

    /*
     * Gets the private 'validator.builder' shared service.
     *
     * @return \Symfony\Component\Validator\ValidatorBuilder
     */
    protected function getValidator_BuilderService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/Validation.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ContainerConstraintValidatorFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/Util/LegacyTranslatorProxy.php';

        $this->privates['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

        $instance->setConstraintValidatorFactory(new \Symfony\Component\Validator\ContainerConstraintValidatorFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Shopware\\Core\\Checkout\\Customer\\Validation\\Constraint\\CustomerEmailUniqueValidator' => ['privates', 'Shopware\\Core\\Checkout\\Customer\\Validation\\Constraint\\CustomerEmailUniqueValidator', 'getCustomerEmailUniqueValidatorService', false],
            'Shopware\\Core\\Checkout\\Customer\\Validation\\Constraint\\CustomerPasswordMatchesValidator' => ['privates', 'Shopware\\Core\\Checkout\\Customer\\Validation\\Constraint\\CustomerPasswordMatchesValidator', 'getCustomerPasswordMatchesValidatorService', false],
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Validation\\EntityExistsValidator' => ['privates', 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Validation\\EntityExistsValidator', 'getEntityExistsValidatorService', false],
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Validation\\EntityNotExistsValidator' => ['privates', 'Shopware\\Core\\Framework\\DataAbstractionLayer\\Validation\\EntityNotExistsValidator', 'getEntityNotExistsValidatorService', false],
            'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => ['privates', 'validator.email', 'getValidator_EmailService', false],
            'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => ['privates', 'validator.expression', 'getValidator_ExpressionService', false],
            'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => ['privates', 'validator.not_compromised_password', 'getValidator_NotCompromisedPasswordService', false],
            'validator.expression' => ['privates', 'validator.expression', 'getValidator_ExpressionService', false],
        ], [
            'Shopware\\Core\\Checkout\\Customer\\Validation\\Constraint\\CustomerEmailUniqueValidator' => '?',
            'Shopware\\Core\\Checkout\\Customer\\Validation\\Constraint\\CustomerPasswordMatchesValidator' => '?',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Validation\\EntityExistsValidator' => '?',
            'Shopware\\Core\\Framework\\DataAbstractionLayer\\Validation\\EntityNotExistsValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => '?',
            'validator.expression' => '?',
        ])));
        $instance->setTranslator(new \Symfony\Component\Validator\Util\LegacyTranslatorProxy(($this->services['translator'] ?? $this->getTranslatorService())));
        $instance->setTranslationDomain('validators');
        $instance->enableAnnotationMapping(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->setMappingCache(\Symfony\Component\Cache\Adapter\PhpArrayAdapter::create(($this->targetDir.''.'/validation.php'), ($this->privates['cache.validator'] ?? $this->getCache_ValidatorService())));
        $instance->addObjectInitializers([]);

        return $instance;
    }

    /*
     * Gets the private 'validator.email' shared service.
     *
     * @return \Symfony\Component\Validator\Constraints\EmailValidator
     */
    protected function getValidator_EmailService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/Constraints/EmailValidator.php';

        return $this->privates['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator('loose');
    }

    /*
     * Gets the private 'validator.expression' shared service.
     *
     * @return \Symfony\Component\Validator\Constraints\ExpressionValidator
     */
    protected function getValidator_ExpressionService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/Constraints/ExpressionValidator.php';

        return $this->privates['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator();
    }

    /*
     * Gets the private 'validator.mapping.cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer
     */
    protected function getValidator_Mapping_CacheWarmerService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/CacheWarmer/CacheWarmerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/AbstractPhpFileCacheWarmer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/CacheWarmer/ValidatorCacheWarmer.php';

        return $this->privates['validator.mapping.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer(($this->privates['validator.builder'] ?? $this->getValidator_BuilderService()), ($this->targetDir.''.'/validation.php'));
    }

    /*
     * Gets the private 'validator.not_compromised_password' shared service.
     *
     * @return \Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator
     */
    protected function getValidator_NotCompromisedPasswordService()
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/Constraints/NotCompromisedPasswordValidator.php';

        return $this->privates['validator.not_compromised_password'] = new \Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator(NULL, 'UTF-8', true, NULL);
    }

    public function getParameter($name)
    {
        $name = (string) $name;
        if (isset($this->buildParameters[$name])) {
            return $this->buildParameters[$name];
        }

        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter($name): bool
    {
        $name = (string) $name;
        if (isset($this->buildParameters[$name])) {
            return true;
        }

        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);
    }

    public function setParameter($name, $value): void
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag(): ParameterBagInterface
    {
        if (null === $this->parameterBag) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            foreach ($this->buildParameters as $name => $value) {
                $parameters[$name] = $value;
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = [
        'kernel.cache_dir' => false,
        'instance_id' => false,
        'shopware.http.cache.enabled' => false,
        'shopware.http.cache.default_ttl' => false,
        'elasticsearch.enabled' => false,
        'elasticsearch.indexing_enabled' => false,
        'elasticsearch.hosts' => false,
        'elasticsearch.index_prefix' => false,
        'shopware.cdn.strategy' => false,
        'kernel.secret' => false,
        'session.save_path' => false,
        'validator.mapping.cache.file' => false,
        'serializer.mapping.cache.file' => false,
        'swiftmailer.spool.default.memory.path' => false,
    ];
    private $dynamicParameters = [];

    private function getDynamicParameter(string $name)
    {
        switch ($name) {
            case 'kernel.cache_dir': $value = $this->targetDir.''; break;
            case 'instance_id': $value = $this->getEnv('INSTANCE_ID'); break;
            case 'shopware.http.cache.enabled': $value = $this->getEnv('default:shopware_http_cache_enabled_default:SHOPWARE_HTTP_CACHE_ENABLED'); break;
            case 'shopware.http.cache.default_ttl': $value = $this->getEnv('default:shopware_http_cache_default_ttl_default:SHOPWARE_HTTP_DEFAULT_TTL'); break;
            case 'elasticsearch.enabled': $value = $this->getEnv('bool:default:default_whitespace:SHOPWARE_ES_ENABLED'); break;
            case 'elasticsearch.indexing_enabled': $value = $this->getEnv('bool:default:default_whitespace:SHOPWARE_ES_INDEXING_ENABLED'); break;
            case 'elasticsearch.hosts': $value = $this->getEnv('default:default_whitespace:SHOPWARE_ES_HOSTS'); break;
            case 'elasticsearch.index_prefix': $value = $this->getEnv('default:default_elasticsearch_prefix:SHOPWARE_ES_INDEX_PREFIX'); break;
            case 'shopware.cdn.strategy': $value = $this->getEnv('default:default_cdn_strategy:SHOPWARE_CDN_STRATEGY_DEFAULT'); break;
            case 'kernel.secret': $value = $this->getEnv('APP_SECRET'); break;
            case 'session.save_path': $value = ($this->targetDir.''.'/sessions'); break;
            case 'validator.mapping.cache.file': $value = ($this->targetDir.''.'/validation.php'); break;
            case 'serializer.mapping.cache.file': $value = ($this->targetDir.''.'/serialization.php'); break;
            case 'swiftmailer.spool.default.memory.path': $value = ($this->targetDir.''.'/swiftmailer/spool/default'); break;
            default: throw new InvalidArgumentException(sprintf('The dynamic parameter "%s" must be defined.', $name));
        }
        $this->loadedDynamicParameters[$name] = true;

        return $this->dynamicParameters[$name] = $value;
    }

    protected function getDefaultParameters(): array
    {
        return [
            'kernel.root_dir' => (\dirname(__DIR__, 4).'/src'),
            'kernel.project_dir' => \dirname(__DIR__, 4),
            'kernel.environment' => 'prod',
            'kernel.debug' => false,
            'kernel.name' => 'src',
            'kernel.logs_dir' => (\dirname(__DIR__, 3).'/log'),
            'kernel.bundles' => [
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle',
                'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'EnqueueBundle' => 'Enqueue\\Bundle\\EnqueueBundle',
                'EnqueueAdapterBundle' => 'Enqueue\\MessengerAdapter\\Bundle\\EnqueueAdapterBundle',
                'Framework' => 'Shopware\\Core\\Framework\\Framework',
                'System' => 'Shopware\\Core\\System\\System',
                'Content' => 'Shopware\\Core\\Content\\Content',
                'Checkout' => 'Shopware\\Core\\Checkout\\Checkout',
                'Administration' => 'Shopware\\Administration\\Administration',
                'Storefront' => 'Shopware\\Storefront\\Storefront',
                'Elasticsearch' => 'Shopware\\Elasticsearch\\Elasticsearch',
                'DbalKernelPluginLoader' => 'Shopware\\Core\\Framework\\Plugin\\KernelPluginLoader\\DbalKernelPluginLoader',
            ],
            'kernel.bundles_metadata' => [
                'FrameworkBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/symfony/framework-bundle'),
                    'namespace' => 'Symfony\\Bundle\\FrameworkBundle',
                ],
                'MonologBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/symfony/monolog-bundle'),
                    'namespace' => 'Symfony\\Bundle\\MonologBundle',
                ],
                'SwiftmailerBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/symfony/swiftmailer-bundle'),
                    'namespace' => 'Symfony\\Bundle\\SwiftmailerBundle',
                ],
                'SensioFrameworkExtraBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/sensio/framework-extra-bundle/src'),
                    'namespace' => 'Sensio\\Bundle\\FrameworkExtraBundle',
                ],
                'TwigBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/symfony/twig-bundle'),
                    'namespace' => 'Symfony\\Bundle\\TwigBundle',
                ],
                'EnqueueBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/enqueue/enqueue-bundle'),
                    'namespace' => 'Enqueue\\Bundle',
                ],
                'EnqueueAdapterBundle' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/sroze/messenger-enqueue-transport/Bundle'),
                    'namespace' => 'Enqueue\\MessengerAdapter\\Bundle',
                ],
                'Framework' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/shopware/core/Framework'),
                    'namespace' => 'Shopware\\Core\\Framework',
                ],
                'System' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/shopware/core/System'),
                    'namespace' => 'Shopware\\Core\\System',
                ],
                'Content' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/shopware/core/Content'),
                    'namespace' => 'Shopware\\Core\\Content',
                ],
                'Checkout' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/shopware/core/Checkout'),
                    'namespace' => 'Shopware\\Core\\Checkout',
                ],
                'Administration' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/shopware/administration'),
                    'namespace' => 'Shopware\\Administration',
                ],
                'Storefront' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/shopware/storefront'),
                    'namespace' => 'Shopware\\Storefront',
                ],
                'Elasticsearch' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/shopware/elasticsearch'),
                    'namespace' => 'Shopware\\Elasticsearch',
                ],
                'DbalKernelPluginLoader' => [
                    'path' => (\dirname(__DIR__, 4).'/vendor/shopware/core/Framework/Plugin/KernelPluginLoader'),
                    'namespace' => 'Shopware\\Core\\Framework\\Plugin\\KernelPluginLoader',
                ],
            ],
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'srcShopware_Production_KernelProdContainer',
            'kernel.cache.hash' => '65d7bc893a56808ceeb447db79df3483',
            'kernel.shopware_version' => '6.1.5',
            'kernel.shopware_version_revision' => '44bbc9941e61cdbeab8d05cbd38f05a82993a181',
            'kernel.plugin_dir' => (\dirname(__DIR__, 4).'/custom/plugins'),
            'kernel.active_plugins' => [

            ],
            'kernel.plugin_infos' => [

            ],
            'kernel.supported_api_versions' => [
                0 => 1,
            ],
            'locale' => 'en-GB',
            'shopware.slug.config' => [
                'regexp' => '/([^A-Za-z0-9\\.]|-)+/',
                'lowercase' => false,
            ],
            'migration.directories' => [
                'Shopware\\Core\\Migration' => (\dirname(__DIR__, 4).'/vendor/shopware/core/Framework/../Migration'),
                'Shopware\\Storefront\\Migration' => (\dirname(__DIR__, 4).'/vendor/shopware/storefront/Migration'),
            ],
            'migration.active' => [
                0 => 1536232600,
                1 => 1536232610,
                2 => 1536232620,
                3 => 1536232630,
                4 => 1536232640,
                5 => 1536232650,
                6 => 1536232660,
                7 => 1536232670,
                8 => 1536232680,
                9 => 1536232690,
                10 => 1536232700,
                11 => 1536232710,
                12 => 1536232720,
                13 => 1536232730,
                14 => 1536232740,
                15 => 1536232750,
                16 => 1536232760,
                17 => 1536232770,
                18 => 1536232790,
                19 => 1536232800,
                20 => 1536232810,
                21 => 1536232820,
                22 => 1536232830,
                23 => 1536232840,
                24 => 1536232850,
                25 => 1536232860,
                26 => 1536232870,
                27 => 1536232880,
                28 => 1536232890,
                29 => 1536232900,
                30 => 1536232910,
                31 => 1536232920,
                32 => 1536232930,
                33 => 1536232940,
                34 => 1536232950,
                35 => 1536232960,
                36 => 1536232970,
                37 => 1536232980,
                38 => 1536232990,
                39 => 1536233000,
                40 => 1536233010,
                41 => 1536233020,
                42 => 1536233030,
                43 => 1536233040,
                44 => 1536233050,
                45 => 1536233060,
                46 => 1536233070,
                47 => 1536233080,
                48 => 1536233090,
                49 => 1536233100,
                50 => 1536233110,
                51 => 1536233120,
                52 => 1536233130,
                53 => 1536233140,
                54 => 1536233150,
                55 => 1536233160,
                56 => 1536233170,
                57 => 1536233180,
                58 => 1536233190,
                59 => 1536233200,
                60 => 1536233210,
                61 => 1536233220,
                62 => 1536233230,
                63 => 1536233240,
                64 => 1536233250,
                65 => 1536233260,
                66 => 1536233270,
                67 => 1536233280,
                68 => 1536233290,
                69 => 1536233300,
                70 => 1536233310,
                71 => 1536233320,
                72 => 1536233330,
                73 => 1536233340,
                74 => 1536233350,
                75 => 1536233360,
                76 => 1536233370,
                77 => 1536233380,
                78 => 1536233390,
                79 => 1536233400,
                80 => 1536233410,
                81 => 1536233420,
                82 => 1536233430,
                83 => 1536233440,
                84 => 1536233450,
                85 => 1536233460,
                86 => 1536233470,
                87 => 1536233480,
                88 => 1536233500,
                89 => 1536233510,
                90 => 1536233520,
                91 => 1536233530,
                92 => 1536233540,
                93 => 1536233550,
                94 => 1536233560,
                95 => 1552360944,
                96 => 1554199340,
                97 => 1554200141,
                98 => 1554203706,
                99 => 1554900301,
                100 => 1556809270,
                101 => 1558082916,
                102 => 1558105657,
                103 => 1558443337,
                104 => 1558505525,
                105 => 1558594334,
                106 => 1558938938,
                107 => 1559050088,
                108 => 1559050903,
                109 => 1559134989,
                110 => 1559306391,
                111 => 1561370284,
                112 => 1561377793,
                113 => 1561442979,
                114 => 1561452005,
                115 => 1561712450,
                116 => 1562228335,
                117 => 1562240231,
                118 => 1562306893,
                119 => 1562324772,
                120 => 1562579120,
                121 => 1562683944,
                122 => 1562684474,
                123 => 1562841035,
                124 => 1562933907,
                125 => 1563180880,
                126 => 1563288227,
                127 => 1563518181,
                128 => 1563805586,
                129 => 1563949275,
                130 => 1564475053,
                131 => 1565007156,
                132 => 1565079228,
                133 => 1565270155,
                134 => 1565270366,
                135 => 1565346846,
                136 => 1565705280,
                137 => 1566293076,
                138 => 1566460168,
                139 => 1566817701,
                140 => 1567431050,
                141 => 1568120239,
                142 => 1568120302,
                143 => 1568645037,
                144 => 1568901713,
                145 => 1569403146,
                146 => 1570187167,
                147 => 1570459127,
                148 => 1570621541,
                149 => 1570622696,
                150 => 1570629862,
                151 => 1570684913,
                152 => 1571059598,
                153 => 1571210820,
                154 => 1571660203,
                155 => 1571724915,
                156 => 1571981437,
                157 => 1571990395,
                158 => 1572193798,
                159 => 1572264837,
                160 => 1572273565,
                161 => 1572421282,
                162 => 1572425108,
                163 => 1572957455,
                164 => 1573049297,
                165 => 1573569685,
                166 => 1573729158,
                167 => 1574063550,
                168 => 1574082635,
                169 => 1574258787,
                170 => 1574258788,
                171 => 1574258789,
                172 => 1574520220,
                173 => 1574672450,
                174 => 1574695657,
                175 => 1574925962,
                176 => 1575010262,
                177 => 1575021466,
                178 => 1575034234,
                179 => 1575036586,
                180 => 1575039284,
                181 => 1575197543,
                182 => 1575274700,
                183 => 1575293069,
                184 => 1575451283,
                185 => 1575626180,
                186 => 1575883959,
                187 => 1576488398,
                188 => 1576590301,
                189 => 1578042218,
                190 => 1578044453,
                191 => 1578470886,
                192 => 1578475268,
                193 => 1578485775,
                194 => 1578648299,
                195 => 1580202210,
                196 => 1580743279,
                197 => 1580808849,
                198 => 1583142266,
                199 => 1583756864,
                200 => 1583844433,
                201 => 1584002637,
                202 => 1585056571,
                203 => 1585744384,
                204 => 1536232990,
                205 => 1551969523,
                206 => 1552899789,
                207 => 1555406153,
                208 => 1563785071,
                209 => 1564385954,
                210 => 1564385960,
                211 => 1565640170,
                212 => 1565640175,
                213 => 1568787535,
                214 => 1569482074,
                215 => 1569907970,
                216 => 1572858066,
                217 => 1574258786,
            ],
            'acl_privilege_list' => 'list',
            'acl_privilege_detail' => 'detail',
            'acl_privilege_create' => 'create',
            'acl_privilege_update' => 'update',
            'acl_privilege_assign' => 'assign',
            'acl_privilege_delete' => 'delete',
            'acl_resource_privileges' => [
                'list' => [

                ],
                'detail' => [
                    0 => 'list',
                ],
                'create' => [
                    0 => 'detail',
                    1 => 'list',
                ],
                'delete' => [
                    0 => 'list',
                ],
                'update' => [
                    0 => 'detail',
                    1 => 'list',
                ],
                'assign' => [
                    0 => 'detail',
                    1 => 'list',
                ],
            ],
            'env(SHOPWARE_UPDATE_TEST)' => false,
            'shopware.media.metadata.types' => [
                0 => '\\Shopware\\Core\\Content\\Media\\Metadata\\Type\\ImageMetadata',
                1 => '\\Shopware\\Core\\Content\\Media\\Metadata\\Type\\DocumentMetadata',
                2 => '\\Shopware\\Core\\Content\\Media\\Metadata\\Type\\VideoMetadata',
            ],
            'product_export.directory' => 'export',
            'product_export.read_buffer_size' => 100,
            'import_export.supported_entities' => [
                0 => 'customer',
                1 => 'product',
            ],
            'import_export.supported_file_types' => [
                0 => 'text/csv',
            ],
            'import_export.read_buffer_size' => 100,
            'import_export.write_buffer_size' => 100,
            'import_export.http_batch_size' => 100,
            'shopware_http_cache_enabled_default' => 1,
            'shopware_http_cache_default_ttl_default' => 7200,
            'storefrontRoot' => (\dirname(__DIR__, 4).'/vendor/shopware/storefront'),
            'elasticsearch.index.config' => [
                'settings' => [
                    'number_of_shards' => 3,
                    'number_of_replicas' => 3,
                    'mapping.total_fields.limit' => 5000,
                    'mapping.nested_fields.limit' => 500,
                ],
            ],
            'container.dumper.inline_class_loader' => true,
            'container.dumper.inline_factories' => true,
            'jwt_private_key_passphrase_default' => 'shopware',
            'default_whitespace' => ' ',
            'default_elasticsearch_prefix' => 'sw',
            'shopware.store.frw' => true,
            'default_cdn_strategy' => 'physical_filename',
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.path' => '/_fragment',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => [

            ],
            'kernel.default_locale' => 'en-GB',
            'kernel.error_controller' => 'error_controller',
            'templating.helper.code.file_link_format' => NULL,
            'debug.file_link_format' => NULL,
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.options' => [
                'cache_limiter' => '0',
                'cookie_httponly' => true,
                'gc_probability' => 1,
            ],
            'session.metadata.update_threshold' => 0,
            'asset.request_context.base_path' => '',
            'asset.request_context.secure' => false,
            'validator.mapping.cache.prefix' => '',
            'validator.translation_domain' => 'validators',
            'translator.logging' => false,
            'translator.default_path' => (\dirname(__DIR__, 4).'/vendor/shopware/storefront/Resources/snippet'),
            'data_collector.templates' => [

            ],
            'debug.error_handler.throw_at' => 0,
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.resource' => 'kernel::loadRoutes',
            'router.cache_class_prefix' => 'srcShopware_Production_KernelProdContainer',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'serializer.mapping.cache.prefix' => '',
            'monolog.use_microseconds' => true,
            'monolog.swift_mailer.handlers' => [

            ],
            'monolog.handlers_to_channels' => [
                'monolog.handler.business_event_handler_buffer' => [
                    'type' => 'inclusive',
                    'elements' => [
                        0 => 'business_events',
                    ],
                ],
                'monolog.handler.console' => [
                    'type' => 'exclusive',
                    'elements' => [
                        0 => 'event',
                        1 => 'doctrine',
                    ],
                ],
                'monolog.handler.main' => NULL,
            ],
            'swiftmailer.mailer.default.transport.name' => 'dynamic',
            'swiftmailer.mailer.default.spool.enabled' => true,
            'swiftmailer.mailer.default.plugin.impersonate' => NULL,
            'swiftmailer.mailer.default.single_address' => NULL,
            'swiftmailer.mailer.default.delivery.enabled' => true,
            'swiftmailer.spool.enabled' => true,
            'swiftmailer.delivery.enabled' => true,
            'swiftmailer.single_address' => NULL,
            'swiftmailer.mailers' => [
                'default' => 'swiftmailer.mailer.default',
            ],
            'swiftmailer.default_mailer' => 'default',
            'twig.exception_listener.controller' => NULL,
            'twig.form.resources' => [
                0 => 'form_div_layout.html.twig',
            ],
            'twig.default_path' => (\dirname(__DIR__, 4).'/templates'),
            'enqueue.transport.default.receive_timeout' => 10000,
            'enqueue.client.default.router_processor' => 'enqueue.client.default.router_processor',
            'enqueue.client.default.router_queue_name' => 'default',
            'enqueue.client.default.default_queue_name' => 'default',
            'enqueue.transports' => [
                0 => 'default',
            ],
            'enqueue.clients' => [
                0 => 'default',
            ],
            'enqueue.default_transport' => 'default',
            'enqueue.default_client' => 'default',
            'shopware.filesystem' => [
                'private' => [
                    'type' => 'local',
                    'config' => [
                        'root' => (\dirname(__DIR__, 4).'/files'),
                    ],
                ],
                'public' => [
                    'type' => 'local',
                    'config' => [
                        'root' => (\dirname(__DIR__, 4).'/public'),
                    ],
                ],
                'allowed_extensions' => [
                    0 => 'jpg',
                    1 => 'jpeg',
                    2 => 'png',
                    3 => 'webp',
                    4 => 'gif',
                    5 => 'svg',
                    6 => 'bmp',
                    7 => 'tiff',
                    8 => 'tif',
                    9 => 'eps',
                    10 => 'webm',
                    11 => 'mkv',
                    12 => 'flv',
                    13 => 'ogv',
                    14 => 'ogg',
                    15 => 'mov',
                    16 => 'mp4',
                    17 => 'avi',
                    18 => 'wmv',
                    19 => 'pdf',
                    20 => 'aac',
                    21 => 'mp3',
                    22 => 'wav',
                    23 => 'flac',
                    24 => 'oga',
                    25 => 'wma',
                    26 => 'txt',
                    27 => 'doc',
                ],
            ],
            'shopware.filesystem.private' => [
                'type' => 'local',
                'config' => [
                    'root' => (\dirname(__DIR__, 4).'/files'),
                ],
            ],
            'shopware.filesystem.private.type' => 'local',
            'shopware.filesystem.private.config' => [
                'root' => (\dirname(__DIR__, 4).'/files'),
            ],
            'shopware.filesystem.private.config.root' => (\dirname(__DIR__, 4).'/files'),
            'shopware.filesystem.public' => [
                'type' => 'local',
                'config' => [
                    'root' => (\dirname(__DIR__, 4).'/public'),
                ],
            ],
            'shopware.filesystem.public.type' => 'local',
            'shopware.filesystem.public.config' => [
                'root' => (\dirname(__DIR__, 4).'/public'),
            ],
            'shopware.filesystem.public.config.root' => (\dirname(__DIR__, 4).'/public'),
            'shopware.filesystem.allowed_extensions' => [
                0 => 'jpg',
                1 => 'jpeg',
                2 => 'png',
                3 => 'webp',
                4 => 'gif',
                5 => 'svg',
                6 => 'bmp',
                7 => 'tiff',
                8 => 'tif',
                9 => 'eps',
                10 => 'webm',
                11 => 'mkv',
                12 => 'flv',
                13 => 'ogv',
                14 => 'ogg',
                15 => 'mov',
                16 => 'mp4',
                17 => 'avi',
                18 => 'wmv',
                19 => 'pdf',
                20 => 'aac',
                21 => 'mp3',
                22 => 'wav',
                23 => 'flac',
                24 => 'oga',
                25 => 'wma',
                26 => 'txt',
                27 => 'doc',
            ],
            'shopware.filesystem.allowed_extensions.0' => 'jpg',
            'shopware.filesystem.allowed_extensions.1' => 'jpeg',
            'shopware.filesystem.allowed_extensions.2' => 'png',
            'shopware.filesystem.allowed_extensions.3' => 'webp',
            'shopware.filesystem.allowed_extensions.4' => 'gif',
            'shopware.filesystem.allowed_extensions.5' => 'svg',
            'shopware.filesystem.allowed_extensions.6' => 'bmp',
            'shopware.filesystem.allowed_extensions.7' => 'tiff',
            'shopware.filesystem.allowed_extensions.8' => 'tif',
            'shopware.filesystem.allowed_extensions.9' => 'eps',
            'shopware.filesystem.allowed_extensions.10' => 'webm',
            'shopware.filesystem.allowed_extensions.11' => 'mkv',
            'shopware.filesystem.allowed_extensions.12' => 'flv',
            'shopware.filesystem.allowed_extensions.13' => 'ogv',
            'shopware.filesystem.allowed_extensions.14' => 'ogg',
            'shopware.filesystem.allowed_extensions.15' => 'mov',
            'shopware.filesystem.allowed_extensions.16' => 'mp4',
            'shopware.filesystem.allowed_extensions.17' => 'avi',
            'shopware.filesystem.allowed_extensions.18' => 'wmv',
            'shopware.filesystem.allowed_extensions.19' => 'pdf',
            'shopware.filesystem.allowed_extensions.20' => 'aac',
            'shopware.filesystem.allowed_extensions.21' => 'mp3',
            'shopware.filesystem.allowed_extensions.22' => 'wav',
            'shopware.filesystem.allowed_extensions.23' => 'flac',
            'shopware.filesystem.allowed_extensions.24' => 'oga',
            'shopware.filesystem.allowed_extensions.25' => 'wma',
            'shopware.filesystem.allowed_extensions.26' => 'txt',
            'shopware.filesystem.allowed_extensions.27' => 'doc',
            'shopware.cdn' => [
                'url' => NULL,
                'strategy' => 'id',
            ],
            'shopware.cdn.url' => NULL,
            'shopware.api' => [
                'max_limit' => 500,
                'allowed_limits' => [
                    0 => 1,
                    1 => 5,
                    2 => 9,
                    3 => 10,
                    4 => 25,
                    5 => 50,
                    6 => 75,
                    7 => 100,
                    8 => 500,
                ],
                'api_browser' => [
                    'auth_required' => true,
                ],
            ],
            'shopware.api.max_limit' => 500,
            'shopware.api.allowed_limits' => [
                0 => 1,
                1 => 5,
                2 => 9,
                3 => 10,
                4 => 25,
                5 => 50,
                6 => 75,
                7 => 100,
                8 => 500,
            ],
            'shopware.api.allowed_limits.0' => 1,
            'shopware.api.allowed_limits.1' => 5,
            'shopware.api.allowed_limits.2' => 9,
            'shopware.api.allowed_limits.3' => 10,
            'shopware.api.allowed_limits.4' => 25,
            'shopware.api.allowed_limits.5' => 50,
            'shopware.api.allowed_limits.6' => 75,
            'shopware.api.allowed_limits.7' => 100,
            'shopware.api.allowed_limits.8' => 500,
            'shopware.api.api_browser' => [
                'auth_required' => true,
            ],
            'shopware.api.api_browser.auth_required' => true,
            'shopware.api.api_browser.auth_required_str' => '1',
            'shopware.admin_worker' => [
                'enable_admin_worker' => true,
                'poll_interval' => 30,
                'transports' => [
                    0 => 'default',
                ],
            ],
            'shopware.admin_worker.enable_admin_worker' => true,
            'shopware.admin_worker.poll_interval' => 30,
            'shopware.admin_worker.transports' => [
                0 => 'default',
            ],
            'shopware.admin_worker.transports.0' => 'default',
            'shopware.auto_update' => [
                'enabled' => true,
            ],
            'shopware.auto_update.enabled' => true,
            'shopware.store' => [
                'frw' => false,
            ],
            'shopware.sitemap' => [
                'batchsize' => 100,
                'custom_urls' => [

                ],
                'excluded_urls' => [

                ],
            ],
            'shopware.sitemap.batchsize' => 100,
            'shopware.sitemap.custom_urls' => [

            ],
            'shopware.sitemap.excluded_urls' => [

            ],
            'storefront.csrf' => [
                'enabled' => true,
                'mode' => 'twig',
            ],
            'storefront.csrf.enabled' => true,
            'storefront.csrf.mode' => 'twig',
            'console.command.ids' => [
                0 => 'console.command.public_alias.Shopware\\Core\\Content\\ProductExport\\Command\\ProductExportGenerateCommand',
                1 => 'console.command.public_alias.Shopware\\Core\\Content\\MailTemplate\\Commands\\AssignAllTemplatesToAllSalesChannelsCommand',
                2 => 'console.command.public_alias.Shopware\\Core\\Content\\Sitemap\\Commands\\SitemapGenerateCommand',
            ],
        ];
    }
}
