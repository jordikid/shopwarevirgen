/* eslint-disable */
const utils = require('../../build/utils');
const fs = require('fs');
jest.mock('fs');

describe('webpack/utils', () => {
    it('should contain all functions', () => {
        expect(utils).toHaveProperty('getBuildPath');
        expect(utils).toHaveProperty('getPublicPath');
        expect(utils).toHaveProperty('getProjectRootPath');
        expect(utils).toHaveProperty('getPath');
        expect(utils).toHaveProperty('getMode');
        expect(utils).toHaveProperty('getOutputPath');
        expect(utils).toHaveProperty('getAppUrl');
        expect(utils).toHaveProperty('getScssEntryContent');
        expect(utils).toHaveProperty('isHotModuleReplacementMode');
        expect(utils).toHaveProperty('isDevelopmentEnvironment');
        expect(utils).toHaveProperty('isProductionEnvironment');
        expect(utils).toHaveProperty('writeScssEntryFile');
    });

    it('should generate string with imports for each theme style entry point', () => {
        const themeFilesJson = require('./assets/theme-files.mock');
        const result = utils.getScssEntryContent('/app/var/theme-variables.scss', themeFilesJson.style);

        const expected =
            '// ATTENTION! This file is auto generated by webpack.hot.config.js and should not be edited.\n' +
            '\n' +
            '@import "/app/var/theme-variables.scss";\n' +
            '@import "/app/custom/plugins/CustomTheme/src/Resources/app/storefront/src/scss/overrides.scss";\n' +
            '@import "/app/platform/src/Storefront/Resources/app/storefront/src/scss/base.scss";\n' +
            '@import "/app/custom/plugins/CustomTheme/src/Resources/app/storefront/src/scss/base.scss";\n';

        expect(result).toEqual(expected);
    });

    it('should write file and return entry point object', () => {
        const content = '// Generated file content';

        const expected = { filepath: 'app/var/theme-entry.scss' };
        const result = utils.writeScssEntryFile('app/var/theme-entry.scss', content);

        expect(fs.writeFileSync).toHaveBeenCalledTimes(1);
        expect(result).toEqual(expected);
    })
});
